"use strict";(self["webpackChunkSolid"]=self["webpackChunkSolid"]||[]).push([[1133],{1133:function(e,a,t){t.r(a),t.d(a,{default:function(){return u}});var l=function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("div",{staticClass:"widgetContainer"},[t("div",{staticClass:"loginHeader"},[t("img",{staticClass:"loginHeader__logo",attrs:{src:e.logoUrl,alt:"logo"}}),t("div",{staticClass:"loginHeader__footer"},[t("p",{staticClass:"cancel",on:{click:e.cancel}},[e._v(" "+e._s(e.$t("cancel"))+" ")]),t("p",{staticClass:"description"},[e._v(" "+e._s(e.getReplaceCardData?e.$t("card.text.replaceCard"):e.$t(e.getSelectedCard?"physical"===e.getSelectedCard.cardType?"physicalCard_edit_NavTitle":"virtualCard_edit_NavTitle":"card_create"))+" ")]),t("p",{staticClass:"submit",class:{disabled:!e.isFormValid},on:{click:function(a){return e.next()}}},[e._v(" "+e._s(e.$t("next"))+" ")])])]),t("div",{staticClass:"widgetContainer__body"},[t("el-form",{ref:"cardDetail",staticClass:"wise-form",attrs:{model:e.formData,rules:e.formRules}},[t("el-form-item",{staticClass:"is-no-asterisk",attrs:{prop:"label",label:e.$t("card_label")}},[t("el-input",{model:{value:e.formData.label,callback:function(a){e.$set(e.formData,"label",a)},expression:"formData.label"}})],1)],1)],1)])},r=[],s=t(629),i=t(8663),d={name:"CardLabelForm",mixins:[i.Z],data(){return{formData:{label:""},formRules:{}}},created(){const e=this.getSelectedCard;this.getReplaceCardData&&this.getReplaceCardData.label?this.formData.label=this.getReplaceCardData.label:e&&e.label&&(this.formData.label=e.label)},computed:{...(0,s.Se)("user",["getPersonDetails"]),...(0,s.Se)("card",["getCreateCardData","getSelectedCard","getReplaceCardData"]),isFormValid(){return""!==this.formData.label}},methods:{...(0,s.OI)("card",["updateCreateCardData","updateReplaceCardDate"]),...(0,s.nv)("card",["updateCard"]),cancel(){this.getSelectedCard||this.getReplaceCardData?this.drawerPush("CardManagement"):this.drawerBack()},next(){const e=this.getSelectedCard;if(e&&this.getReplaceCardData)return this.updateReplaceCardDate({...this.getReplaceCardData,label:this.formData.label}),void setTimeout((()=>{this.$router.push("/card/replaceCardDetails")}),0);if(e){const a=this.showLoader();return void this.updateCard({cardId:e.id,payload:{label:this.formData.label}}).then((()=>{this.drawerPush("CardDetails")})).catch((e=>{console.log(e),this.apiErrorMessage(e)})).finally((()=>{a.close()}))}const a=this.getCreateCardData;this.updateCreateCardData({...a,label:this.formData.label}),setTimeout((()=>{this.drawerPush("CardSpendingForm")}),0)}}},c=d,o=t(3736),n=(0,o.Z)(c,l,r,!1,null,null,null),u=n.exports},8663:function(e,a,t){var l=t(629);a["Z"]={computed:{...(0,l.Se)("kyb",["getSelectedBusiness"]),...(0,l.Se)("account",["getSelectedAccount"])},created(){this.getSelectedAccount||this.goToWelcomeScreen()}}}}]);
//# sourceMappingURL=1133.1705918960713.js.map