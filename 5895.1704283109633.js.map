{"version":3,"file":"5895.1704283109633.js","mappings":"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","sources":["webpack://Solid/./src/modules/card/views/ReplaceCardAddress.vue?ba53","webpack://Solid/src/modules/card/views/ReplaceCardAddress.vue","webpack://Solid/./src/modules/card/views/ReplaceCardAddress.vue?b286","webpack://Solid/./src/modules/card/views/ReplaceCardAddress.vue","webpack://Solid/./src/utils/gmap.js"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"widgetContainer shippingAddress\"},[_c('div',{staticClass:\"loginHeader\"},[_c('img',{staticClass:\"loginHeader__logo\",attrs:{\"src\":_vm.logoUrl,\"alt\":\"logo\"}}),_c('div',{staticClass:\"loginHeader__footer\"},[_c('p',{staticClass:\"cancel\",on:{\"click\":_vm.cancel}},[_vm._v(\" \"+_vm._s(_vm.$t('cancel'))+\" \")]),_c('p',{staticClass:\"description\"},[_vm._v(\" \"+_vm._s(_vm.$t('card.text.replaceCard'))+\" \")]),_c('p',{staticClass:\"submit\",class:{ disabled: _vm.isFormValid },on:{\"click\":function($event){return _vm.next()}}},[_vm._v(\" \"+_vm._s(_vm.$t('next'))+\" \")])])]),_c('div',{staticClass:\"widgetContainer__body\"},[_c('el-form',{ref:\"personAddress\",staticClass:\"wise-form\",attrs:{\"model\":_vm.formData,\"rules\":_vm.formRules}},[_c('div',{staticClass:\"el-input--full-width el-input\"},[_c('p',{staticClass:\"wise-form__header\"},[_vm._v(\" \"+_vm._s(_vm.$t('card_BillingAddress_HeaderTitle'))+\" \")]),_c('el-form-item',{staticClass:\"is-no-asterisk\",attrs:{\"prop\":\"address.line1\",\"rules\":_vm.formRules.line1,\"label\":_vm.$t('address_1')}},[_c('el-input',{staticStyle:{\"display\":\"none\"}}),_c('el-input',{staticStyle:{\"display\":\"none\"},model:{value:(_vm.formData.address.line1),callback:function ($$v) {_vm.$set(_vm.formData.address, \"line1\", $$v)},expression:\"formData.address.line1\"}}),_c('div',{staticClass:\"el-input\"},[_c('gmap-autocomplete',{staticClass:\"el-input__inner\",attrs:{\"placeholder\":_vm.$t('address_1'),\"autocomplete\":\"disabled\",\"value\":_vm.formData.address.line1,\"options\":{\n                componentRestrictions: { country: 'us' }\n              },\"select-first-on-enter\":true},on:{\"place_changed\":function($event){return _vm.updateAddress($event)}},nativeOn:{\"change\":function($event){_vm.formData.address.line1 = $event.target.value}}})],1)],1)],1),_c('el-form-item',{attrs:{\"prop\":\"address.line2\",\"label\":_vm.$t('address_2')}},[_c('el-input',{attrs:{\"placeholder\":_vm.$t('address_2')},model:{value:(_vm.formData.address.line2),callback:function ($$v) {_vm.$set(_vm.formData.address, \"line2\", $$v)},expression:\"formData.address.line2\"}})],1),_c('div',{staticClass:\"wise-form__inline\"},[_c('el-form-item',{staticClass:\"is-no-asterisk\",attrs:{\"prop\":\"address.city\",\"rules\":_vm.formRules.city,\"label\":_vm.$t('address_City')}},[_c('el-input',{staticStyle:{\"flex\":\"2\"},attrs:{\"placeholder\":_vm.$t('address_City')},model:{value:(_vm.formData.address.city),callback:function ($$v) {_vm.$set(_vm.formData.address, \"city\", $$v)},expression:\"formData.address.city\"}})],1),_c('el-form-item',{staticClass:\"is-no-asterisk\",attrs:{\"prop\":\"address.country\",\"rules\":_vm.formRules.state,\"label\":_vm.$t('address_State')}},[_c('el-input',{staticStyle:{\"flex\":\"1\"},attrs:{\"placeholder\":_vm.$t('address_State')},model:{value:(_vm.formData.address.state),callback:function ($$v) {_vm.$set(_vm.formData.address, \"state\", $$v)},expression:\"formData.address.state\"}})],1),_c('el-form-item',{staticClass:\"is-no-asterisk\",attrs:{\"prop\":\"address.postalCode\",\"rules\":_vm.formRules.postalCode,\"label\":_vm.$t('address_Zipcode')}},[_c('el-input',{staticStyle:{\"flex\":\"1\"},attrs:{\"placeholder\":_vm.$t('address_Zipcode')},model:{value:(_vm.formData.address.postalCode),callback:function ($$v) {_vm.$set(_vm.formData.address, \"postalCode\", $$v)},expression:\"formData.address.postalCode\"}})],1)],1)],1)],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"widgetContainer shippingAddress\">\n    <div class=\"loginHeader\">\n      <img class=\"loginHeader__logo\" :src=\"logoUrl\" alt=\"logo\">\n      <div class=\"loginHeader__footer\">\n        <p class=\"cancel\" @click=\"cancel\">\n          {{ $t('cancel') }}\n        </p>\n        <p class=\"description\">\n          {{ $t('card.text.replaceCard') }}\n        </p>\n        <p class=\"submit\" :class=\"{ disabled: isFormValid }\" @click=\"next()\">\n          {{ $t('next') }}\n        </p>\n      </div>\n    </div>\n    <div class=\"widgetContainer__body\">\n      <el-form\n        class=\"wise-form\"\n        ref=\"personAddress\"\n        :model=\"formData\"\n        :rules=\"formRules\">\n        <div class=\"el-input--full-width el-input\">\n          <p class=\"wise-form__header\">\n            {{ $t('card_BillingAddress_HeaderTitle') }}\n          </p>\n          <el-form-item\n            prop=\"address.line1\"\n            :rules=\"formRules.line1\"\n            class=\"is-no-asterisk\"\n            :label=\"$t('address_1')\">\n            <el-input style=\"display: none\" />\n            <el-input v-model=\"formData.address.line1\" style=\"display: none\" />\n            <div class=\"el-input\">\n              <gmap-autocomplete\n                :placeholder=\"$t('address_1')\"\n                autocomplete=\"disabled\"\n                :value=\"formData.address.line1\"\n                :options=\"{\n                  componentRestrictions: { country: 'us' }\n                }\"\n                @change.native=\"formData.address.line1 = $event.target.value\"\n                @place_changed=\"updateAddress($event)\"\n                :select-first-on-enter=\"true\"\n                class=\"el-input__inner\" />\n            </div>\n          </el-form-item>\n        </div>\n\n        <el-form-item prop=\"address.line2\" :label=\"$t('address_2')\">\n          <el-input\n            :placeholder=\"$t('address_2')\"\n            v-model=\"formData.address.line2\" />\n        </el-form-item>\n        <div class=\"wise-form__inline\">\n          <el-form-item\n            prop=\"address.city\"\n            class=\"is-no-asterisk\"\n            :rules=\"formRules.city\"\n            :label=\"$t('address_City')\">\n            <el-input\n              style=\"flex: 2\"\n              :placeholder=\"$t('address_City')\"\n              v-model=\"formData.address.city\" />\n          </el-form-item>\n          <el-form-item\n            prop=\"address.country\"\n            class=\"is-no-asterisk\"\n            :rules=\"formRules.state\"\n            :label=\"$t('address_State')\">\n            <el-input\n              style=\"flex: 1\"\n              :placeholder=\"$t('address_State')\"\n              v-model=\"formData.address.state\" />\n          </el-form-item>\n          <el-form-item\n            prop=\"address.postalCode\"\n            class=\"is-no-asterisk\"\n            :rules=\"formRules.postalCode\"\n            :label=\"$t('address_Zipcode')\">\n            <el-input\n              style=\"flex: 1\"\n              :placeholder=\"$t('address_Zipcode')\"\n              v-model=\"formData.address.postalCode\" />\n          </el-form-item>\n        </div>\n      </el-form>\n    </div>\n  </div>\n</template>\n<script>\nimport { formatGoogleMapData } from '@/utils/gmap';\nimport { mapActions, mapGetters, mapMutations } from 'vuex';\n\nimport CardMixin from '../mixins/card';\nexport default {\n  name: 'ContactAddressForm',\n  mixins: [CardMixin],\n  data() {\n    return {\n      formData: {\n        address: {\n          line1: null,\n          line2: null,\n          city: null,\n          postalCode: null,\n          country: 'US',\n          addressType: 'billing',\n          state: null\n        }\n      },\n      sameAddress: true,\n      formRules: {\n        line1: [\n          {\n            required: true,\n            message: 'Address 1 is required'\n          }\n        ],\n        city: [\n          {\n            required: true,\n            message: 'City is required'\n          }\n        ],\n        state: [\n          {\n            required: true,\n            message: 'State is required'\n          }\n        ],\n        postalCode: [\n          {\n            required: true,\n            message: 'Zip Code is required'\n          }\n        ]\n      }\n    };\n  },\n  computed: {\n    ...mapGetters('card', ['getReplaceCardData']),\n    isFormValid() {\n      if (\n        this.formData.address.line1 &&\n        this.formData.address.city &&\n        this.formData.address.postalCode\n      ) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  },\n  methods: {\n    ...mapMutations('card', ['updateReplaceCardDate']),\n    ...mapActions('card', ['replaceCard']),\n    updateAddress(e) {\n      const address = formatGoogleMapData(e);\n      this.formData.address = address;\n    },\n    next() {\n      this.$refs.personAddress.validate((valid) => {\n        if (!valid) return;\n\n        /** @type {import('@/modules/card/store/state').cardState['replaceCardData']} */\n        const card = {\n          ...this.getReplaceCardData\n        };\n        const { line1, line2, city, postalCode, country, state } =\n          this.formData.address;\n        const payload = {\n          ...card,\n          shipping: {\n            shippingAddress: {\n              line1,\n              line2,\n              city,\n              postalCode,\n              country,\n              addressType: 'billing',\n              state\n            }\n          }\n        };\n        this.updateReplaceCardDate(payload);\n\n      });\n    },\n    cancel() {\n      this.$router.push('/card/cardManagement');\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped></style>\n","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ReplaceCardAddress.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ReplaceCardAddress.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ReplaceCardAddress.vue?vue&type=template&id=44bd417c&scoped=true&\"\nimport script from \"./ReplaceCardAddress.vue?vue&type=script&lang=js&\"\nexport * from \"./ReplaceCardAddress.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"44bd417c\",\n  null\n  \n)\n\nexport default component.exports","// Google Map\nexport const formatGoogleMapData = (data) => {\n  const { address_components, geometry } = data;\n  let formattedData = {};\n  const ac = address_components;\n  const premise = findAddressComponent(ac, 'premise');\n  const street_number = findAddressComponent(ac, 'street_number');\n  const route = findAddressComponent(ac, 'route');\n  let city = findAddressComponent(ac, 'locality');\n  let sublocality_level_1 = findAddressComponent(ac, 'sublocality_level_1');\n  const postal_town = findAddressComponent(ac, 'postal_town');\n  const state = findAddressComponent(ac, 'administrative_area_level_1');\n  const country = findAddressComponent(ac, 'country');\n  const postal_code = findAddressComponent(ac, 'postal_code');\n  const neighborhood = findAddressComponent(ac, 'neighborhood');\n\n  const addressLine1 = [street_number, premise, route];\n\n  if (!city) city = postal_town || sublocality_level_1;\n\n  formattedData.line1 = addressLine1\n    .filter((e) => e)\n    .map((e) => e.long_name)\n    .join(' ');\n  formattedData.line2 = neighborhood ? neighborhood.long_name : null;\n  formattedData.city = city ? city.long_name : null;\n  formattedData.postalCode = postal_code ? postal_code.long_name : null;\n  formattedData.state = state ? state.short_name : null;\n\n  formattedData.country = country ? country.short_name : null;\n\n  formattedData.latitude = geometry.location.lat();\n  formattedData.longitude = geometry.location.lng();\n  return formattedData;\n};\n\nexport const findAddressComponent = (address_components, target) => {\n  return address_components.find((el) => {\n    return el.types.includes(target);\n  });\n};\n"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","logoUrl","on","cancel","_v","_s","$t","class","disabled","isFormValid","$event","next","ref","formData","formRules","line1","staticStyle","model","value","address","callback","$$v","$set","expression","componentRestrictions","country","updateAddress","nativeOn","target","city","state","postalCode","staticRenderFns","name","mixins","data","line2","addressType","sameAddress","required","message","computed","methods","shipping","shippingAddress","component","formatGoogleMapData","address_components","geometry","formattedData","ac","premise","findAddressComponent","street_number","route","sublocality_level_1","postal_town","postal_code","neighborhood","addressLine1","filter","e","map","long_name","join","short_name","latitude","location","lat","longitude","lng","find","el","types","includes"],"sourceRoot":""}