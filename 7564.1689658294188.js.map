{"version":3,"file":"7564.1689658294188.js","mappings":"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","sources":["webpack://Solid/./src/modules/card/views/CardShippingAddressForm.vue?53c2","webpack://Solid/src/modules/card/views/CardShippingAddressForm.vue","webpack://Solid/./src/modules/card/views/CardShippingAddressForm.vue?1c3c","webpack://Solid/./src/modules/card/views/CardShippingAddressForm.vue","webpack://Solid/./src/modules/card/mixins/card.js","webpack://Solid/./src/utils/gmap.js"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"widgetContainer shippingAddress\"},[_c('div',{staticClass:\"navigationHeader\"},[_c('div',{staticClass:\"navigationHeader__inner\"},[_c('p',{staticClass:\"cancel\",on:{\"click\":_vm.drawerClose}},[_c('i',{staticClass:\"el-icon-close\"})]),_c('p',{staticClass:\"title\"},[_vm._v(\" \"+_vm._s(_vm.$t( _vm.getCreateCardData.id ? _vm.getCreateCardData.cardType === 'physical' ? 'physicalCard_edit_NavTitle' : 'virtualCard_edit_NavTitle' : _vm.getCreateCardData.cardType === 'physical' ? 'physicalCard_Create_NavTitle' : 'virtualCard_Create_NavTitle' ))+\" \")])])]),_c('div',{staticClass:\"widgetContainer__body\"},[_c('el-form',{ref:\"personAddress\",staticClass:\"wise-form\",attrs:{\"model\":_vm.formData,\"rules\":_vm.formRules}},[_c('div',{staticClass:\"el-input--full-width el-input\"},[_c('p',{staticClass:\"wise-form__header\"},[_vm._v(\" \"+_vm._s(_vm.$t('card_BillingAddress_HeaderTitle'))+\" \")]),_c('el-form-item',{staticClass:\"is-no-asterisk\",attrs:{\"prop\":\"address.line1\",\"rules\":_vm.formRules.line1,\"label\":_vm.$t('address_1')}},[_c('el-input',{staticStyle:{\"display\":\"none\"}}),_c('el-input',{staticStyle:{\"display\":\"none\"},model:{value:(_vm.formData.address.line1),callback:function ($$v) {_vm.$set(_vm.formData.address, \"line1\", $$v)},expression:\"formData.address.line1\"}}),_c('div',{staticClass:\"el-input\"},[_c('gmap-autocomplete',{staticClass:\"el-input__inner\",attrs:{\"placeholder\":_vm.$t('address_1'),\"autocomplete\":\"disabled\",\"value\":_vm.formData.address.line1,\"options\":{\n                componentRestrictions: { country: 'us' }\n              },\"select-first-on-enter\":true},on:{\"place_changed\":function($event){return _vm.updateAddress($event)}},nativeOn:{\"change\":function($event){_vm.formData.address.line1 = $event.target.value}}})],1)],1)],1),_c('el-form-item',{attrs:{\"prop\":\"address.line2\",\"label\":_vm.$t('address_2')}},[_c('el-input',{attrs:{\"placeholder\":_vm.$t('address_2')},model:{value:(_vm.formData.address.line2),callback:function ($$v) {_vm.$set(_vm.formData.address, \"line2\", $$v)},expression:\"formData.address.line2\"}})],1),_c('div',{staticClass:\"wise-form__inline\"},[_c('el-form-item',{staticClass:\"is-no-asterisk\",attrs:{\"prop\":\"address.city\",\"rules\":_vm.formRules.city,\"label\":_vm.$t('address_City')}},[_c('el-input',{staticStyle:{\"flex\":\"2\"},attrs:{\"placeholder\":_vm.$t('address_City')},model:{value:(_vm.formData.address.city),callback:function ($$v) {_vm.$set(_vm.formData.address, \"city\", $$v)},expression:\"formData.address.city\"}})],1),_c('el-form-item',{staticClass:\"is-no-asterisk\",attrs:{\"prop\":\"address.country\",\"rules\":_vm.formRules.state,\"label\":_vm.$t('address_State')}},[_c('el-input',{staticStyle:{\"flex\":\"1\"},attrs:{\"placeholder\":_vm.$t('address_State')},model:{value:(_vm.formData.address.state),callback:function ($$v) {_vm.$set(_vm.formData.address, \"state\", $$v)},expression:\"formData.address.state\"}})],1),_c('el-form-item',{staticClass:\"is-no-asterisk\",attrs:{\"prop\":\"address.postalCode\",\"rules\":_vm.formRules.postalCode,\"label\":_vm.$t('address_Zipcode')}},[_c('el-input',{staticStyle:{\"flex\":\"1\"},attrs:{\"placeholder\":_vm.$t('address_Zipcode')},model:{value:(_vm.formData.address.postalCode),callback:function ($$v) {_vm.$set(_vm.formData.address, \"postalCode\", $$v)},expression:\"formData.address.postalCode\"}})],1)],1)],1)],1),_c('div',{staticClass:\"el-drawer__footer\"},[_c('el-button',{staticClass:\"el-button__brand brand width-100\",attrs:{\"data-testid\":\"submit\",\"type\":\"primary\",\"disabled\":_vm.isFormValid},on:{\"click\":_vm.next}},[_vm._v(\" \"+_vm._s(_vm.$t('next'))+\" \")])],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"widgetContainer shippingAddress\">\n    <div class=\"navigationHeader\">\n      <div class=\"navigationHeader__inner\">\n        <p class=\"cancel\" @click=\"drawerClose\">\n          <i class=\"el-icon-close\" />\n        </p>\n        <p class=\"title\">\n          {{\n            $t(\n              getCreateCardData.id\n                ? getCreateCardData.cardType === 'physical'\n                  ? 'physicalCard_edit_NavTitle'\n                  : 'virtualCard_edit_NavTitle'\n                : getCreateCardData.cardType === 'physical'\n                  ? 'physicalCard_Create_NavTitle'\n                  : 'virtualCard_Create_NavTitle'\n            )\n          }}\n        </p>\n      </div>\n    </div>\n    <div class=\"widgetContainer__body\">\n      <el-form\n        class=\"wise-form\"\n        ref=\"personAddress\"\n        :model=\"formData\"\n        :rules=\"formRules\">\n        <div class=\"el-input--full-width el-input\">\n          <p class=\"wise-form__header\">\n            {{ $t('card_BillingAddress_HeaderTitle') }}\n          </p>\n          <el-form-item\n            prop=\"address.line1\"\n            :rules=\"formRules.line1\"\n            class=\"is-no-asterisk\"\n            :label=\"$t('address_1')\">\n            <el-input style=\"display: none\" />\n            <el-input v-model=\"formData.address.line1\" style=\"display: none\" />\n            <div class=\"el-input\">\n              <gmap-autocomplete\n                :placeholder=\"$t('address_1')\"\n                autocomplete=\"disabled\"\n                :value=\"formData.address.line1\"\n                :options=\"{\n                  componentRestrictions: { country: 'us' }\n                }\"\n                @change.native=\"formData.address.line1 = $event.target.value\"\n                @place_changed=\"updateAddress($event)\"\n                :select-first-on-enter=\"true\"\n                class=\"el-input__inner\" />\n            </div>\n          </el-form-item>\n        </div>\n\n        <el-form-item prop=\"address.line2\" :label=\"$t('address_2')\">\n          <el-input\n            :placeholder=\"$t('address_2')\"\n            v-model=\"formData.address.line2\" />\n        </el-form-item>\n        <div class=\"wise-form__inline\">\n          <el-form-item\n            prop=\"address.city\"\n            class=\"is-no-asterisk\"\n            :rules=\"formRules.city\"\n            :label=\"$t('address_City')\">\n            <el-input\n              style=\"flex: 2\"\n              :placeholder=\"$t('address_City')\"\n              v-model=\"formData.address.city\" />\n          </el-form-item>\n          <el-form-item\n            prop=\"address.country\"\n            class=\"is-no-asterisk\"\n            :rules=\"formRules.state\"\n            :label=\"$t('address_State')\">\n            <el-input\n              style=\"flex: 1\"\n              :placeholder=\"$t('address_State')\"\n              v-model=\"formData.address.state\" />\n          </el-form-item>\n          <el-form-item\n            prop=\"address.postalCode\"\n            class=\"is-no-asterisk\"\n            :rules=\"formRules.postalCode\"\n            :label=\"$t('address_Zipcode')\">\n            <el-input\n              style=\"flex: 1\"\n              :placeholder=\"$t('address_Zipcode')\"\n              v-model=\"formData.address.postalCode\" />\n          </el-form-item>\n        </div>\n      </el-form>\n    </div>\n    <div class=\"el-drawer__footer\">\n      <el-button data-testid=\"submit\" type=\"primary\" @click=\"next\" class=\"el-button__brand brand width-100\" :disabled=\"isFormValid\">\n        {{ $t('next') }}\n      </el-button>\n    </div>\n  </div>\n</template>\n<script>\nimport { formatGoogleMapData } from '@/utils/gmap';\nimport { mapActions, mapGetters, mapMutations } from 'vuex';\n\nimport CardMixin from '../mixins/card';\nexport default {\n  name: 'ContactAddressForm',\n  mixins: [CardMixin],\n  data() {\n    return {\n      formData: {\n        address: {\n          line1: null,\n          line2: null,\n          city: null,\n          postalCode: null,\n          country: 'US',\n          addressType: 'billing',\n          state: null\n        }\n      },\n      sameAddress: true,\n      formRules: {\n        line1: [\n          {\n            required: true,\n            message: 'Address 1 is required'\n          }\n        ],\n        city: [\n          {\n            required: true,\n            message: 'City is required'\n          }\n        ],\n        state: [\n          {\n            required: true,\n            message: 'State is required'\n          }\n        ],\n        postalCode: [\n          {\n            required: true,\n            message: 'Zip Code is required'\n          }\n        ]\n      }\n    };\n  },\n  computed: {\n    ...mapGetters('card', ['getCreateCardData']),\n    isFormValid() {\n      if (\n        this.formData.address.line1 &&\n        this.formData.address.city &&\n        this.formData.address.postalCode\n      ) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  },\n  created() {\n    /** @type {import('@/modules/card/store/state').cardState['createCardData']} */\n    const card = this.getCreateCardData;\n    if (card && card.id && card.shipping.shippingAddress) {\n      const { line1, line2, city, postalCode, state } = card.address;\n      this.formData.address = {\n        line1,\n        line2,\n        city,\n        postalCode,\n        country: 'US',\n        addressType: 'billing',\n        state\n      };\n    }\n  },\n  methods: {\n    ...mapMutations('card', ['updateCreateCardData']),\n    ...mapActions('card', ['createCard']),\n    updateAddress(e) {\n      const address = formatGoogleMapData(e);\n      this.formData.address = address;\n    },\n    next() {\n      this.$refs.personAddress.validate((valid) => {\n        if (!valid) return;\n\n        /** @type {import('@/modules/card/store/state').cardState['createCardData']} */\n        const card = {\n          ...this.getCreateCardData\n        };\n        // const {firstName, lastName, idNumber, email, dateOfBirth} = person;\n        const { line1, line2, city, postalCode, country, state } =\n          this.formData.address;\n        const payload = {\n          ...card,\n          shipping: {\n            shippingAddress: {\n              line1,\n              line2,\n              city,\n              postalCode,\n              country,\n              addressType: 'billing',\n              state\n            }\n          }\n        };\n        this.updateCreateCardData(payload);\n        const loader = this.showLoader();\n        this.createCard(payload)\n          .then(() => {\n            this.drawerPush('CreatedSuccess');\n          })\n          .catch((e) => {\n            console.log(e);\n            this.apiErrorMessage(e);\n          })\n          .finally(() => {\n            loader.close();\n          });\n      });\n    },\n    cancel() {\n      this.$router.push('/card/list');\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.shippingAddress {\n  background: white;\n  .loginHeader {\n    background: white;\n    border-bottom: 1px solid #eaeaea;\n  }\n}\n</style>\n","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CardShippingAddressForm.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CardShippingAddressForm.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CardShippingAddressForm.vue?vue&type=template&id=2f0e22ac&scoped=true&\"\nimport script from \"./CardShippingAddressForm.vue?vue&type=script&lang=js&\"\nexport * from \"./CardShippingAddressForm.vue?vue&type=script&lang=js&\"\nimport style0 from \"./CardShippingAddressForm.vue?vue&type=style&index=0&id=2f0e22ac&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"2f0e22ac\",\n  null\n  \n)\n\nexport default component.exports","import { mapGetters } from 'vuex';\nexport default {\n  computed: {\n    ...mapGetters('kyb', ['getSelectedBusiness']),\n    ...mapGetters('account', ['getSelectedAccount'])\n  },\n  created() {\n    if (!this.getSelectedAccount) {\n      this.goToWelcomeScreen();\n    }\n  }\n};\n","// Google Map\nexport const formatGoogleMapData = (data) => {\n  const { address_components, geometry } = data;\n  let formattedData = {};\n  const ac = address_components;\n  const premise = findAddressComponent(ac, 'premise');\n  const street_number = findAddressComponent(ac, 'street_number');\n  const route = findAddressComponent(ac, 'route');\n  let city = findAddressComponent(ac, 'locality');\n  let sublocality_level_1 = findAddressComponent(ac, 'sublocality_level_1');\n  const postal_town = findAddressComponent(ac, 'postal_town');\n  const state = findAddressComponent(ac, 'administrative_area_level_1');\n  const country = findAddressComponent(ac, 'country');\n  const postal_code = findAddressComponent(ac, 'postal_code');\n  const neighborhood = findAddressComponent(ac, 'neighborhood');\n\n  const addressLine1 = [street_number, premise, route];\n\n  if (!city) city = postal_town || sublocality_level_1;\n\n  formattedData.line1 = addressLine1\n    .filter((e) => e)\n    .map((e) => e.long_name)\n    .join(' ');\n  formattedData.line2 = neighborhood ? neighborhood.long_name : null;\n  formattedData.city = city ? city.long_name : null;\n  formattedData.postalCode = postal_code ? postal_code.long_name : null;\n  formattedData.state = state ? state.short_name : null;\n\n  formattedData.country = country ? country.short_name : null;\n\n  formattedData.latitude = geometry.location.lat();\n  formattedData.longitude = geometry.location.lng();\n  return formattedData;\n};\n\nexport const findAddressComponent = (address_components, target) => {\n  return address_components.find((el) => {\n    return el.types.includes(target);\n  });\n};\n"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","on","drawerClose","_v","_s","$t","getCreateCardData","id","cardType","ref","attrs","formData","formRules","line1","staticStyle","model","value","address","callback","$$v","$set","expression","componentRestrictions","country","$event","updateAddress","nativeOn","target","city","state","postalCode","isFormValid","next","staticRenderFns","name","mixins","data","line2","addressType","sameAddress","required","message","computed","created","methods","shipping","shippingAddress","then","catch","e","console","finally","loader","cancel","component","mapGetters","getSelectedAccount","goToWelcomeScreen","formatGoogleMapData","address_components","geometry","formattedData","ac","premise","findAddressComponent","street_number","route","sublocality_level_1","postal_town","postal_code","neighborhood","addressLine1","filter","map","long_name","join","short_name","latitude","location","lat","longitude","lng","find","el","types","includes"],"sourceRoot":""}