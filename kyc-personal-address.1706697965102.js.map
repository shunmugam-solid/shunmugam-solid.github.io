{"version":3,"file":"kyc-personal-address.1706697965102.js","mappings":"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","sources":["webpack://Solid/./src/modules/kyc/views/PersonAddress.vue?fa7b","webpack://Solid/src/modules/kyc/views/PersonAddress.vue","webpack://Solid/./src/modules/kyc/views/PersonAddress.vue?9ab0","webpack://Solid/./src/modules/kyc/views/PersonAddress.vue","webpack://Solid/./src/modules/kyc/mixins/kyc.js","webpack://Solid/./src/utils/gmap.js"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"widgetContainer widgetContainer--center widgetContainer--scrollable personAddress\"},[_c('div',{staticClass:\"navigationHeader\"},[_c('div',{staticClass:\"navigationHeader__inner\"},[_c('span',{staticClass:\"icon-Arrow-big-left cancel\",on:{\"click\":_vm.goToPreviousScreen}}),_c('p',{staticClass:\"title\"},[_vm._v(\" \"+_vm._s(_vm.$t('kyc_address_NavTitle'))+\" \")])])]),_c('div',{staticClass:\"widgetContainer__body\"},[_c('el-form',{ref:\"personAddress\",staticClass:\"wise-form\",attrs:{\"model\":_vm.formData,\"rules\":_vm.formRules}},[_c('div',{staticClass:\"el-input--full-width el-input\"},[_c('el-form-item',{staticClass:\"is-no-asterisk\",attrs:{\"prop\":\"address.line1\",\"rules\":_vm.formRules.line1,\"label\":_vm.$t('address_1')}},[_c('el-input',{staticStyle:{\"display\":\"none\"}}),_c('el-input',{staticStyle:{\"display\":\"none\"},model:{value:(_vm.formData.address.line1),callback:function ($$v) {_vm.$set(_vm.formData.address, \"line1\", $$v)},expression:\"formData.address.line1\"}}),_c('div',{staticClass:\"el-input\"},[_c('gmap-autocomplete',{staticClass:\"el-input__inner\",attrs:{\"placeholder\":_vm.$t('address_1'),\"autocomplete\":\"disabled\",\"value\":_vm.formData.address.line1,\"options\":{\n                componentRestrictions: { country: _vm.country }\n              },\"select-first-on-enter\":true},on:{\"place_changed\":function($event){return _vm.updateAddress($event)}},nativeOn:{\"change\":function($event){_vm.formData.address.line1 = $event.target.value}}})],1)],1)],1),_c('el-form-item',{attrs:{\"prop\":\"address.line2\",\"label\":_vm.$t('address_2')}},[_c('el-input',{attrs:{\"placeholder\":_vm.$t('address_2')},model:{value:(_vm.formData.address.line2),callback:function ($$v) {_vm.$set(_vm.formData.address, \"line2\", $$v)},expression:\"formData.address.line2\"}})],1),_c('div',{staticClass:\"wise-form__inline\"},[_c('el-form-item',{staticClass:\"is-no-asterisk\",attrs:{\"prop\":\"address.city\",\"rules\":_vm.formRules.city,\"label\":_vm.$t('address_City')}},[_c('el-input',{staticStyle:{\"flex\":\"2\"},attrs:{\"placeholder\":_vm.$t('address_City')},model:{value:(_vm.formData.address.city),callback:function ($$v) {_vm.$set(_vm.formData.address, \"city\", $$v)},expression:\"formData.address.city\"}})],1),_c('el-form-item',{staticClass:\"is-no-asterisk\",attrs:{\"prop\":\"address.country\",\"rules\":_vm.formRules.state,\"label\":_vm.$t('address_State')}},[_c('el-input',{staticStyle:{\"flex\":\"1\"},attrs:{\"placeholder\":_vm.$t('address_State')},model:{value:(_vm.formData.address.state),callback:function ($$v) {_vm.$set(_vm.formData.address, \"state\", $$v)},expression:\"formData.address.state\"}})],1),_c('el-form-item',{staticClass:\"is-no-asterisk\",attrs:{\"prop\":\"address.postalCode\",\"rules\":_vm.formRules.postalCode,\"label\":_vm.$t('address_Zipcode')}},[_c('el-input',{staticStyle:{\"flex\":\"1\"},attrs:{\"placeholder\":_vm.$t('address_Zipcode')},model:{value:(_vm.formData.address.postalCode),callback:function ($$v) {_vm.$set(_vm.formData.address, \"postalCode\", $$v)},expression:\"formData.address.postalCode\"}})],1)],1)],1),_c('div',{staticClass:\"widgetContainer__footer--fixed\"},[_c('el-button',{staticClass:\"el-button__brand brand\",attrs:{\"type\":\"primary\",\"disabled\":_vm.isFormValid},on:{\"click\":function($event){return _vm.next()}}},[_vm._v(\" \"+_vm._s(_vm.$t('kyc_NavRightButton_Title'))+\" \")])],1)],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"widgetContainer widgetContainer--center widgetContainer--scrollable personAddress\">\n    <div class=\"navigationHeader\">\n      <div class=\"navigationHeader__inner\">\n        <span class=\"icon-Arrow-big-left cancel\" @click=\"goToPreviousScreen\" />\n        <p class=\"title\">\n          {{ $t('kyc_address_NavTitle') }}\n        </p>\n      </div>\n    </div>\n\n    <div class=\"widgetContainer__body\">\n      <el-form\n        class=\"wise-form\"\n        ref=\"personAddress\"\n        :model=\"formData\"\n        :rules=\"formRules\">\n        <div class=\"el-input--full-width el-input\">\n          <el-form-item\n            prop=\"address.line1\"\n            :rules=\"formRules.line1\"\n            class=\"is-no-asterisk\"\n            :label=\"$t('address_1')\">\n            <el-input style=\"display: none\" />\n            <el-input v-model=\"formData.address.line1\" style=\"display: none\" />\n            <div class=\"el-input\">\n              <gmap-autocomplete\n                :placeholder=\"$t('address_1')\"\n                autocomplete=\"disabled\"\n                :value=\"formData.address.line1\"\n                :options=\"{\n                  componentRestrictions: { country: country }\n                }\"\n                @change.native=\"formData.address.line1 = $event.target.value\"\n                @place_changed=\"updateAddress($event)\"\n                :select-first-on-enter=\"true\"\n                class=\"el-input__inner\" />\n            </div>\n          </el-form-item>\n        </div>\n\n        <el-form-item prop=\"address.line2\" :label=\"$t('address_2')\">\n          <el-input\n            :placeholder=\"$t('address_2')\"\n            v-model=\"formData.address.line2\" />\n        </el-form-item>\n        <div class=\"wise-form__inline\">\n          <el-form-item\n            prop=\"address.city\"\n            class=\"is-no-asterisk\"\n            :rules=\"formRules.city\"\n            :label=\"$t('address_City')\">\n            <el-input\n              style=\"flex: 2\"\n              :placeholder=\"$t('address_City')\"\n              v-model=\"formData.address.city\" />\n          </el-form-item>\n          <el-form-item\n            prop=\"address.country\"\n            class=\"is-no-asterisk\"\n            :rules=\"formRules.state\"\n            :label=\"$t('address_State')\">\n            <el-input\n              style=\"flex: 1\"\n              :placeholder=\"$t('address_State')\"\n              v-model=\"formData.address.state\" />\n          </el-form-item>\n          <el-form-item\n            prop=\"address.postalCode\"\n            class=\"is-no-asterisk\"\n            :rules=\"formRules.postalCode\"\n            :label=\"$t('address_Zipcode')\">\n            <el-input\n              style=\"flex: 1\"\n              :placeholder=\"$t('address_Zipcode')\"\n              v-model=\"formData.address.postalCode\" />\n          </el-form-item>\n        </div>\n      </el-form>\n      <div class=\"widgetContainer__footer--fixed\">\n        <el-button type=\"primary\" class=\"el-button__brand brand\" @click=\"next()\" :disabled=\"isFormValid\">\n          {{ $t('kyc_NavRightButton_Title') }}\n        </el-button>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport { formatGoogleMapData } from '@/utils/gmap';\nimport { mapActions, mapGetters } from 'vuex';\nimport kyc from '../mixins/kyc';\nimport { getCountryDetailsFromPhoneNumber } from '@/utils/env';\nexport default {\n  name: 'PersonAddress',\n  mixins: [kyc],\n  data() {\n    return {\n      formData: {\n        address: {\n          line1: null,\n          line2: null,\n          city: null,\n          postalCode: null,\n          country: 'US',\n          addressType: 'mailing',\n          state: null\n        }\n      },\n      formRules: {\n        line1: [\n          {\n            required: true,\n            message: 'Address 1 is required'\n          }\n        ],\n        city: [\n          {\n            required: false\n          }\n        ],\n        state: [\n          {\n            required: false\n          }\n        ],\n        postalCode: [\n          {\n            required: true,\n            message: 'Zip Code is required'\n          }\n        ]\n      }\n    };\n  },\n  computed: {\n    ...mapGetters('user', ['getPersonDetails']),\n    isFormValid() {\n      let cityRequired = '';\n      if(this.formRules.city[0].required)\n        cityRequired = this.formData.address.city;\n      else\n        cityRequired = true;\n\n      let stateRequired = '';\n      if(this.formRules.city[0].required)\n        stateRequired = this.formData.address.state;\n      else\n        stateRequired = true;\n\n      if (\n        this.formData.address.line1 &&\n        cityRequired &&\n        stateRequired &&\n        this.formData.address.postalCode\n      ) {\n        return false;\n      } else {\n        return true;\n      }\n    },\n    country() {\n      /** @type {import('@/modules/user/store/state').userState['personDetails']} */\n      const person = this.getPersonDetails;\n      const details = getCountryDetailsFromPhoneNumber(person.phone);\n      if(details && details.code)\n        return details.code;\n\n      return 'US'\n\n    }\n  },\n  created() {\n    /** @type {import('@/modules/user/store/state').userState['personDetails']} */\n    const person = this.getPersonDetails;\n    if(person && person.id) {\n      const country = this.country;\n      this.setCityStateRequired(country);\n      if (person.address) {\n        const { line1, line2, city, postalCode, state } = person.address;\n        this.formData.address = {\n          line1,\n          line2,\n          city,\n          postalCode,\n          country,\n          addressType: 'mailing',\n          state\n        };\n      }\n    }\n  },\n  methods: {\n    ...mapActions('user', ['updatePerson']),\n    setCityStateRequired(v) {\n      if(v === 'US') {\n        this.formRules.city = [\n          {\n            required: true,\n            message: 'City is required'\n          }\n        ];\n        this.formRules.state = [\n          {\n            required: true,\n            message: 'State is required'\n          }\n        ];\n      }\n    },\n    updateAddress(e) {\n      const address = formatGoogleMapData(e);\n      this.formData.address = address;\n    },\n    next() {\n      this.$refs.personAddress.validate((valid) => {\n        if (!valid) return;\n\n        /** @type {import('@/modules/user/store/state').userState['personDetails']} */\n        const person = {\n          ...this.getPersonDetails\n        };\n        const { line1, line2, city, postalCode, state } =\n          this.formData.address;\n        const country = this.country;\n        const payload = {\n          personId: person.id,\n          person: {\n            address: {\n              line1,\n              line2,\n              city,\n              postalCode,\n              country,\n              addressType: 'mailing',\n              state\n            }\n          }\n        };\n        const loader = this.showLoader();\n        this.updatePerson(payload)\n          .then(() => {\n            this.$router.push('/kyc/verify');\n          })\n          .catch((e) => {\n            console.log(e);\n            this.apiErrorMessage(e);\n          })\n          .finally(() => {\n            loader.close();\n          });\n      });\n    }\n  },\n  watch: {\n    country: function (newVal) {\n      this.setCityStateRequired(newVal);\n    }\n  }\n};\n</script>\n","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./PersonAddress.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./PersonAddress.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./PersonAddress.vue?vue&type=template&id=edc4dbd0&\"\nimport script from \"./PersonAddress.vue?vue&type=script&lang=js&\"\nexport * from \"./PersonAddress.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import { mapActions, mapMutations } from 'vuex';\nexport default {\n  methods: {\n    ...mapMutations(['updateLogoutPopupStatus']),\n    ...mapActions('user', ['logout']),\n    logoutAndRedirect() {\n      this.updateLogoutPopupStatus(true);\n    }\n  }\n};\n","// Google Map\nexport const formatGoogleMapData = (data) => {\n  const { address_components, geometry } = data;\n  let formattedData = {};\n  const ac = address_components;\n  const premise = findAddressComponent(ac, 'premise');\n  const street_number = findAddressComponent(ac, 'street_number');\n  const route = findAddressComponent(ac, 'route');\n  let city = findAddressComponent(ac, 'locality');\n  let sublocality_level_1 = findAddressComponent(ac, 'sublocality_level_1');\n  const postal_town = findAddressComponent(ac, 'postal_town');\n  const state = findAddressComponent(ac, 'administrative_area_level_1');\n  const country = findAddressComponent(ac, 'country');\n  const postal_code = findAddressComponent(ac, 'postal_code');\n  const neighborhood = findAddressComponent(ac, 'neighborhood');\n\n  const addressLine1 = [street_number, premise, route];\n\n  if (!city) city = postal_town || sublocality_level_1;\n\n  formattedData.line1 = addressLine1\n    .filter((e) => e)\n    .map((e) => e.long_name)\n    .join(' ');\n  formattedData.line2 = neighborhood ? neighborhood.long_name : null;\n  formattedData.city = city ? city.long_name : null;\n  formattedData.postalCode = postal_code ? postal_code.long_name : null;\n  formattedData.state = state ? state.short_name : null;\n\n  formattedData.country = country ? country.short_name : null;\n\n  formattedData.latitude = geometry.location.lat();\n  formattedData.longitude = geometry.location.lng();\n  return formattedData;\n};\n\nexport const findAddressComponent = (address_components, target) => {\n  return address_components.find((el) => {\n    return el.types.includes(target);\n  });\n};\n"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","on","goToPreviousScreen","_v","_s","$t","ref","attrs","formData","formRules","line1","staticStyle","model","value","address","callback","$$v","$set","expression","componentRestrictions","country","$event","updateAddress","nativeOn","target","city","state","postalCode","isFormValid","next","staticRenderFns","name","mixins","data","line2","addressType","required","message","computed","cityRequired","stateRequired","created","methods","setCityStateRequired","personId","person","then","catch","e","console","finally","loader","watch","component","mapMutations","mapActions","logoutAndRedirect","updateLogoutPopupStatus","formatGoogleMapData","address_components","geometry","formattedData","ac","premise","findAddressComponent","street_number","route","sublocality_level_1","postal_town","postal_code","neighborhood","addressLine1","filter","map","long_name","join","short_name","latitude","location","lat","longitude","lng","find","el","types","includes"],"sourceRoot":""}