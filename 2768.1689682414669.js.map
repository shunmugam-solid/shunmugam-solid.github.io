{"version":3,"file":"2768.1689682414669.js","mappings":"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","sources":["webpack://Solid/./src/modules/business/views/EditBusinessAddress.vue?3e9f","webpack://Solid/src/modules/business/views/EditBusinessAddress.vue","webpack://Solid/./src/modules/business/views/EditBusinessAddress.vue?9251","webpack://Solid/./src/modules/business/views/EditBusinessAddress.vue","webpack://Solid/./src/utils/gmap.js"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"widgetContainer\"},[_c('div',{staticClass:\"navigationHeader\"},[_c('div',{staticClass:\"navigationHeader__inner\"},[_c('span',{staticClass:\"icon-Arrow-big-left cancel\",on:{\"click\":_vm.drawerBack}}),_c('p',{staticClass:\"title\"},[_vm._v(\" \"+_vm._s(_vm.$t('editAddress'))+\" \")]),_c('span',{staticClass:\"el-icon-close\",on:{\"click\":_vm.drawerClose}})])]),_c('div',{staticClass:\"widgetContainer__body\"},[_c('el-form',{ref:\"personAddress\",staticClass:\"wise-form\",attrs:{\"model\":_vm.formData,\"rules\":_vm.formRules}},[_c('div',{staticClass:\"el-input--full-width el-input\"},[_c('el-form-item',{staticClass:\"is-no-asterisk\",attrs:{\"prop\":\"address.line1\",\"rules\":_vm.formRules.line1,\"label\":_vm.$t('address_1')}},[_c('el-input',{staticStyle:{\"display\":\"none\"}}),_c('el-input',{staticStyle:{\"display\":\"none\"},model:{value:(_vm.formData.address.line1),callback:function ($$v) {_vm.$set(_vm.formData.address, \"line1\", $$v)},expression:\"formData.address.line1\"}}),_c('div',{staticClass:\"el-input\"},[_c('gmap-autocomplete',{staticClass:\"el-input__inner\",attrs:{\"placeholder\":_vm.$t('address_1'),\"autocomplete\":\"disabled\",\"value\":_vm.formData.address.line1,\"options\":{\n                componentRestrictions: { country: _vm.country }\n              },\"select-first-on-enter\":true},on:{\"place_changed\":function($event){return _vm.updateAddress($event)}},nativeOn:{\"change\":function($event){_vm.formData.address.line1 = $event.target.value}}})],1)],1)],1),_c('el-form-item',{attrs:{\"prop\":\"address.line2\",\"label\":_vm.$t('address_2')}},[_c('el-input',{attrs:{\"placeholder\":_vm.$t('address_2')},model:{value:(_vm.formData.address.line2),callback:function ($$v) {_vm.$set(_vm.formData.address, \"line2\", $$v)},expression:\"formData.address.line2\"}})],1),_c('div',{staticClass:\"wise-form__inline\"},[_c('el-form-item',{staticClass:\"is-no-asterisk\",attrs:{\"prop\":\"address.city\",\"rules\":_vm.formRules.city,\"label\":_vm.$t('address_City')}},[_c('el-input',{staticStyle:{\"flex\":\"2\"},attrs:{\"placeholder\":_vm.$t('address_City')},model:{value:(_vm.formData.address.city),callback:function ($$v) {_vm.$set(_vm.formData.address, \"city\", $$v)},expression:\"formData.address.city\"}})],1),_c('el-form-item',{staticClass:\"is-no-asterisk\",attrs:{\"prop\":\"address.country\",\"rules\":_vm.formRules.state,\"label\":_vm.$t('address_State')}},[_c('el-input',{staticStyle:{\"flex\":\"1\"},attrs:{\"placeholder\":_vm.$t('address_State')},model:{value:(_vm.formData.address.state),callback:function ($$v) {_vm.$set(_vm.formData.address, \"state\", $$v)},expression:\"formData.address.state\"}})],1),_c('el-form-item',{staticClass:\"is-no-asterisk\",attrs:{\"prop\":\"address.postalCode\",\"rules\":_vm.formRules.postalCode,\"label\":_vm.$t('address_Zipcode')}},[_c('el-input',{staticStyle:{\"flex\":\"1\"},attrs:{\"placeholder\":_vm.$t('address_Zipcode')},model:{value:(_vm.formData.address.postalCode),callback:function ($$v) {_vm.$set(_vm.formData.address, \"postalCode\", $$v)},expression:\"formData.address.postalCode\"}})],1)],1)],1)],1),_c('div',{staticClass:\"el-drawer__footer el-drawer__footer--multiple-buttons\"},[_c('el-button',{staticClass:\"width-50\",on:{\"click\":_vm.drawerBack}},[_vm._v(\" \"+_vm._s(_vm.$t('cancel'))+\" \")]),_c('el-button',{staticClass:\"width-50 el-button__brand brand\",attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.next()}}},[_vm._v(\" \"+_vm._s(_vm.$t('confirm'))+\" \")])],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"widgetContainer\">\n    <div class=\"navigationHeader\">\n      <div class=\"navigationHeader__inner\">\n        <span class=\"icon-Arrow-big-left cancel\" @click=\"drawerBack\" />\n        <p class=\"title\">\n          {{ $t('editAddress') }}\n        </p>\n        <span class=\"el-icon-close\" @click=\"drawerClose\" />\n      </div>\n    </div>\n    \n    <div class=\"widgetContainer__body\">\n      <el-form\n        class=\"wise-form\"\n        ref=\"personAddress\"\n        :model=\"formData\"\n        :rules=\"formRules\">\n        <div class=\"el-input--full-width el-input\">\n          <el-form-item\n            prop=\"address.line1\"\n            :rules=\"formRules.line1\"\n            class=\"is-no-asterisk\"\n            :label=\"$t('address_1')\">\n            <el-input style=\"display: none\" />\n            <el-input v-model=\"formData.address.line1\" style=\"display: none\" />\n            <div class=\"el-input\">\n              <gmap-autocomplete\n                :placeholder=\"$t('address_1')\"\n                autocomplete=\"disabled\"\n                :value=\"formData.address.line1\"\n                :options=\"{\n                  componentRestrictions: { country: country }\n                }\"\n                @change.native=\"formData.address.line1 = $event.target.value\"\n                @place_changed=\"updateAddress($event)\"\n                :select-first-on-enter=\"true\"\n                class=\"el-input__inner\" />\n            </div>\n          </el-form-item>\n        </div>\n\n        <el-form-item prop=\"address.line2\" :label=\"$t('address_2')\">\n          <el-input\n            :placeholder=\"$t('address_2')\"\n            v-model=\"formData.address.line2\" />\n        </el-form-item>\n        <div class=\"wise-form__inline\">\n          <el-form-item\n            prop=\"address.city\"\n            class=\"is-no-asterisk\"\n            :rules=\"formRules.city\"\n            :label=\"$t('address_City')\">\n            <el-input\n              style=\"flex: 2\"\n              :placeholder=\"$t('address_City')\"\n              v-model=\"formData.address.city\" />\n          </el-form-item>\n          <el-form-item\n            prop=\"address.country\"\n            class=\"is-no-asterisk\"\n            :rules=\"formRules.state\"\n            :label=\"$t('address_State')\">\n            <el-input\n              style=\"flex: 1\"\n              :placeholder=\"$t('address_State')\"\n              v-model=\"formData.address.state\" />\n          </el-form-item>\n          <el-form-item\n            prop=\"address.postalCode\"\n            class=\"is-no-asterisk\"\n            :rules=\"formRules.postalCode\"\n            :label=\"$t('address_Zipcode')\">\n            <el-input\n              style=\"flex: 1\"\n              :placeholder=\"$t('address_Zipcode')\"\n              v-model=\"formData.address.postalCode\" />\n          </el-form-item>\n        </div>\n      </el-form>\n    </div>\n\n    <div class=\"el-drawer__footer el-drawer__footer--multiple-buttons\">\n      <el-button @click=\"drawerBack\" class=\"width-50\">\n        {{ $t('cancel') }}\n      </el-button>\n      <el-button type=\"primary\" @click=\"next()\" class=\"width-50 el-button__brand brand\">\n        {{ $t('confirm') }}\n      </el-button>\n    </div>\n  </div>\n</template>\n<script>\nimport { formatGoogleMapData } from '@/utils/gmap';\nimport { mapActions, mapGetters, mapMutations } from 'vuex';\nimport { getCountryDetailsFromPhoneNumber } from '@/utils/env';\nexport default {\n  name: 'EditBusinessAddress',\n  data() {\n    return {\n      formData: {\n        address: {\n          line1: null,\n          line2: null,\n          city: null,\n          postalCode: null,\n          country: 'US',\n          addressType: 'mailing',\n          state: null\n        }\n      },\n      formRules: {\n        line1: [\n          {\n            required: true,\n            message: 'Address 1 is required'\n          }\n        ],\n        city: [\n          {\n            required: false\n          }\n        ],\n        state: [\n          {\n            required: false\n          }\n        ],\n        postalCode: [\n          {\n            required: true,\n            message: 'Zip Code is required'\n          }\n        ]\n      }\n    };\n  },\n  computed: {\n    ...mapGetters('user', ['getPersonDetails']),\n    ...mapGetters('kyb', ['getSelectedBusiness']),\n    isFormValid() {\n      let cityRequired = '';\n      if(this.formRules.city[0].required)\n        cityRequired = this.formData.address.city;\n      else\n        cityRequired = true;\n\n      let stateRequired = '';\n      if(this.formRules.city[0].required)\n        stateRequired = this.formData.address.state;\n      else\n        stateRequired = true;\n\n      if (\n        this.formData.address.line1 &&\n        cityRequired &&\n        stateRequired &&\n        this.formData.address.postalCode\n      ) {\n        return false;\n      } else {\n        return true;\n      }\n    },\n    country() {\n      /** @type {import('@/modules/user/store/state').userState['personDetails']} */\n      const person = this.getPersonDetails;\n      const details = getCountryDetailsFromPhoneNumber(person.phone);\n      if(details && details.code)\n        return details.code;\n      \n      return 'US'\n\n    }\n  },\n  created() {\n    /** @type {import('@m/kyb/store/state').kybState['selectedBusinessType'] } */\n    const business = this.getSelectedBusiness;\n    if (business && business.id) {\n      const country = this.country;\n      this.setCityStateRequired(country);\n      if (business.address) {\n        const { line1, line2, city, postalCode, state } = business.address;\n        this.formData.address = {\n          line1,\n          line2,\n          city,\n          postalCode,\n          country,\n          addressType: 'legal',\n          state\n        };\n      }\n    } else {\n      const loader = this.showLoader();\n      this.listAllBusiness()\n        .then((r) => {\n          if (r.total !== 0) {\n            /** @type {import('@m/kyb/store/state').kybState['bussinessDetails']} */\n            const businessList = r.data;\n            this.setSelectedBusiness(businessList[0]);\n          }\n        })\n        .catch((e) => {\n          console.log(e);\n          this.apiErrorMessage(e);\n        })\n        .finally(() => {\n          loader.close();\n        });\n    }\n  },\n  methods: {\n    ...mapActions('kyb', ['updateBusiness', 'listAllBusiness']),\n    ...mapMutations('kyb', ['setSelectedBusiness']),\n    setCityStateRequired(v) {\n      if(v === 'US') {\n        this.formRules.city = [\n          {\n            required: true,\n            message: 'City is required'\n          }\n        ];\n        this.formRules.state = [\n          {\n            required: true,\n            message: 'State is required'\n          }\n        ];\n      }\n    },\n    updateAddress(e) {\n      const address = formatGoogleMapData(e);\n      this.formData.address = address;\n    },\n    next() {\n      this.$refs.personAddress.validate((valid) => {\n        if (!valid) return;\n\n        /** @type {import('@m/kyb/store/state').kybState['selectedBusinessType'] } */\n        const business = {\n          ...this.getSelectedBusiness\n        };\n\n        const { id, legalName, entityType, dba, idNumber, idType } = business;\n\n        const { line1, line2, city, postalCode, state } =\n          this.formData.address;\n        const country = this.country;\n        const payload = {\n          businessId: id,\n          business: {\n            legalName,\n            entityType,\n            dba,\n            idNumber,\n            idType,\n            address: {\n              line1,\n              line2,\n              city,\n              postalCode,\n              country,\n              addressType: 'legal',\n              state\n            }\n          }\n        };\n        const loader = this.showLoader();\n        this.updateBusiness(payload)\n          .then((data) => {\n            this.setSelectedBusiness(data);\n            setTimeout(() => {\n              this.drawerBack();\n            }, 0);\n          })\n          .catch((e) => {\n            console.log(e);\n            this.apiErrorMessage(e);\n          })\n          .finally(() => {\n            loader.close();\n          });\n      });\n    }\n  },\n  watch: {\n    country: function (newVal) {\n      this.setCityStateRequired(newVal);\n    }\n  }\n};\n</script>\n","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./EditBusinessAddress.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./EditBusinessAddress.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./EditBusinessAddress.vue?vue&type=template&id=11e25b9c&\"\nimport script from \"./EditBusinessAddress.vue?vue&type=script&lang=js&\"\nexport * from \"./EditBusinessAddress.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","// Google Map\nexport const formatGoogleMapData = (data) => {\n  const { address_components, geometry } = data;\n  let formattedData = {};\n  const ac = address_components;\n  const premise = findAddressComponent(ac, 'premise');\n  const street_number = findAddressComponent(ac, 'street_number');\n  const route = findAddressComponent(ac, 'route');\n  let city = findAddressComponent(ac, 'locality');\n  let sublocality_level_1 = findAddressComponent(ac, 'sublocality_level_1');\n  const postal_town = findAddressComponent(ac, 'postal_town');\n  const state = findAddressComponent(ac, 'administrative_area_level_1');\n  const country = findAddressComponent(ac, 'country');\n  const postal_code = findAddressComponent(ac, 'postal_code');\n  const neighborhood = findAddressComponent(ac, 'neighborhood');\n\n  const addressLine1 = [street_number, premise, route];\n\n  if (!city) city = postal_town || sublocality_level_1;\n\n  formattedData.line1 = addressLine1\n    .filter((e) => e)\n    .map((e) => e.long_name)\n    .join(' ');\n  formattedData.line2 = neighborhood ? neighborhood.long_name : null;\n  formattedData.city = city ? city.long_name : null;\n  formattedData.postalCode = postal_code ? postal_code.long_name : null;\n  formattedData.state = state ? state.short_name : null;\n\n  formattedData.country = country ? country.short_name : null;\n\n  formattedData.latitude = geometry.location.lat();\n  formattedData.longitude = geometry.location.lng();\n  return formattedData;\n};\n\nexport const findAddressComponent = (address_components, target) => {\n  return address_components.find((el) => {\n    return el.types.includes(target);\n  });\n};\n"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","on","drawerBack","_v","_s","$t","drawerClose","ref","attrs","formData","formRules","line1","staticStyle","model","value","address","callback","$$v","$set","expression","componentRestrictions","country","$event","updateAddress","nativeOn","target","city","state","postalCode","next","staticRenderFns","name","data","line2","addressType","required","message","computed","isFormValid","cityRequired","stateRequired","created","then","r","catch","e","console","finally","loader","methods","setCityStateRequired","id","legalName","entityType","dba","idNumber","idType","businessId","business","setTimeout","watch","component","formatGoogleMapData","address_components","geometry","formattedData","ac","premise","findAddressComponent","street_number","route","sublocality_level_1","postal_town","postal_code","neighborhood","addressLine1","filter","map","long_name","join","short_name","latitude","location","lat","longitude","lng","find","el","types","includes"],"sourceRoot":""}