{"version":3,"file":"5749.1704700942765.js","mappings":"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","sources":["webpack://Solid/./src/modules/card/views/CardBillingAddressForm.vue?2f3c","webpack://Solid/src/modules/card/views/CardBillingAddressForm.vue","webpack://Solid/./src/modules/card/views/CardBillingAddressForm.vue?8d29","webpack://Solid/./src/modules/card/views/CardBillingAddressForm.vue","webpack://Solid/./src/utils/gmap.js"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"widgetContainer bg-white widgetContainer--scrollable billingAddress\"},[_c('div',{staticClass:\"navigationHeader\"},[_c('div',{staticClass:\"navigationHeader__inner\"},[_c('p',{staticClass:\"title\"},[_vm._v(\" \"+_vm._s(_vm.$t( _vm.getCreateCardData.id ? _vm.getCreateCardData.cardType === 'physical' ? 'physicalCard_edit_NavTitle' : 'virtualCard_edit_NavTitle' : _vm.getCreateCardData.cardType === 'physical' ? 'physicalCard_Create_NavTitle' : 'virtualCard_Create_NavTitle' ))+\" \")]),_c('span',{staticClass:\"el-icon-close cancel\",on:{\"click\":_vm.drawerClose}})])]),_c('div',{staticClass:\"widgetContainer__body\"},[_c('el-form',{ref:\"personAddress\",staticClass:\"wise-form\",attrs:{\"model\":_vm.formData,\"rules\":_vm.formRules}},[_c('div',{staticClass:\"el-input--full-width el-input\"},[_c('p',{staticClass:\"wise-form__header\"},[_vm._v(\" \"+_vm._s(_vm.$t('card_BillingAddress_HeaderTitle'))+\" \")]),(_vm.getCreateCardData.cardType === 'physical')?_c('div',{staticClass:\"sameAddress\"},[_c('p',[_vm._v(_vm._s(_vm.$t('card_BillingAddress_HeaderDesc')))]),_c('el-switch',{attrs:{\"active-color\":\"var(--branding)\",\"inactive-color\":\"#dfdfe4\"},model:{value:(_vm.sameAddress),callback:function ($$v) {_vm.sameAddress=$$v},expression:\"sameAddress\"}})],1):_vm._e(),(_vm.getCreateCardData.cardType === 'physical')?_c('p',{staticClass:\"wise-form__header\"},[_vm._v(\" \"+_vm._s(_vm.$t('card_ShippingAddress_HeaderTitle'))+\" \")]):_vm._e(),_c('el-form-item',{staticClass:\"is-no-asterisk\",attrs:{\"prop\":\"address.line1\",\"rules\":_vm.formRules.line1,\"label\":_vm.$t('address_1')}},[_c('el-input',{staticStyle:{\"display\":\"none\"}}),_c('el-input',{staticStyle:{\"display\":\"none\"},model:{value:(_vm.formData.address.line1),callback:function ($$v) {_vm.$set(_vm.formData.address, \"line1\", $$v)},expression:\"formData.address.line1\"}}),_c('div',{staticClass:\"el-input\"},[_c('gmap-autocomplete',{staticClass:\"el-input__inner\",attrs:{\"placeholder\":_vm.$t('address_1'),\"autocomplete\":\"disabled\",\"value\":_vm.formData.address.line1,\"options\":{\n                componentRestrictions: { country: _vm.country }\n              },\"select-first-on-enter\":true},on:{\"place_changed\":function($event){return _vm.updateAddress($event)}},nativeOn:{\"change\":function($event){_vm.formData.address.line1 = $event.target.value}}})],1)],1)],1),_c('el-form-item',{attrs:{\"prop\":\"address.line2\",\"label\":_vm.$t('address_2')}},[_c('el-input',{attrs:{\"placeholder\":_vm.$t('address_2')},model:{value:(_vm.formData.address.line2),callback:function ($$v) {_vm.$set(_vm.formData.address, \"line2\", $$v)},expression:\"formData.address.line2\"}})],1),_c('div',{staticClass:\"wise-form__inline\"},[_c('el-form-item',{staticClass:\"is-no-asterisk\",attrs:{\"prop\":\"address.city\",\"rules\":_vm.formRules.city,\"label\":_vm.$t('address_City')}},[_c('el-input',{staticStyle:{\"flex\":\"2\"},attrs:{\"placeholder\":_vm.$t('address_City')},model:{value:(_vm.formData.address.city),callback:function ($$v) {_vm.$set(_vm.formData.address, \"city\", $$v)},expression:\"formData.address.city\"}})],1),_c('el-form-item',{staticClass:\"is-no-asterisk\",attrs:{\"prop\":\"address.country\",\"rules\":_vm.formRules.state,\"label\":_vm.$t('address_State')}},[_c('el-input',{staticStyle:{\"flex\":\"1\"},attrs:{\"placeholder\":_vm.$t('address_State')},model:{value:(_vm.formData.address.state),callback:function ($$v) {_vm.$set(_vm.formData.address, \"state\", $$v)},expression:\"formData.address.state\"}})],1),_c('el-form-item',{staticClass:\"is-no-asterisk\",attrs:{\"prop\":\"address.postalCode\",\"rules\":_vm.formRules.postalCode,\"label\":_vm.$t('address_Zipcode')}},[_c('el-input',{staticStyle:{\"flex\":\"1\"},attrs:{\"placeholder\":_vm.$t('address_Zipcode')},model:{value:(_vm.formData.address.postalCode),callback:function ($$v) {_vm.$set(_vm.formData.address, \"postalCode\", $$v)},expression:\"formData.address.postalCode\"}})],1)],1)],1)],1),_c('div',{staticClass:\"el-drawer__footer\"},[_c('el-button',{staticClass:\"el-button__brand brand width-100\",attrs:{\"data-testid\":\"submit\",\"type\":\"primary\",\"disabled\":_vm.isFormValid},on:{\"click\":_vm.next}},[_vm._v(\" \"+_vm._s(_vm.$t('done'))+\" \")])],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div\n    class=\"widgetContainer bg-white widgetContainer--scrollable billingAddress\">\n    <div class=\"navigationHeader\">\n      <div class=\"navigationHeader__inner\">\n        <p class=\"title\">\n          {{\n            $t(\n              getCreateCardData.id\n                ? getCreateCardData.cardType === 'physical'\n                  ? 'physicalCard_edit_NavTitle'\n                  : 'virtualCard_edit_NavTitle'\n                : getCreateCardData.cardType === 'physical'\n                  ? 'physicalCard_Create_NavTitle'\n                  : 'virtualCard_Create_NavTitle'\n            )\n          }}\n        </p>\n        <span class=\"el-icon-close cancel\" @click=\"drawerClose\" />\n      </div>\n    </div>\n\n    <div class=\"widgetContainer__body\">\n      <el-form\n        class=\"wise-form\"\n        ref=\"personAddress\"\n        :model=\"formData\"\n        :rules=\"formRules\">\n        <div class=\"el-input--full-width el-input\">\n          <p class=\"wise-form__header\">\n            {{ $t('card_BillingAddress_HeaderTitle') }}\n          </p>\n          <div\n            class=\"sameAddress\"\n            v-if=\"getCreateCardData.cardType === 'physical'\">\n            <p>{{ $t('card_BillingAddress_HeaderDesc') }}</p>\n            <el-switch\n              v-model=\"sameAddress\"\n              active-color=\"var(--branding)\"\n              inactive-color=\"#dfdfe4\" />\n          </div>\n          <p\n            class=\"wise-form__header\"\n            v-if=\"getCreateCardData.cardType === 'physical'\">\n            {{ $t('card_ShippingAddress_HeaderTitle') }}\n          </p>\n          <el-form-item\n            prop=\"address.line1\"\n            :rules=\"formRules.line1\"\n            class=\"is-no-asterisk\"\n            :label=\"$t('address_1')\">\n            <el-input style=\"display: none\" />\n            <el-input v-model=\"formData.address.line1\" style=\"display: none\" />\n            <div class=\"el-input\">\n              <gmap-autocomplete\n                :placeholder=\"$t('address_1')\"\n                autocomplete=\"disabled\"\n                :value=\"formData.address.line1\"\n                :options=\"{\n                  componentRestrictions: { country: country }\n                }\"\n                @change.native=\"formData.address.line1 = $event.target.value\"\n                @place_changed=\"updateAddress($event)\"\n                :select-first-on-enter=\"true\"\n                class=\"el-input__inner\" />\n            </div>\n          </el-form-item>\n        </div>\n\n        <el-form-item prop=\"address.line2\" :label=\"$t('address_2')\">\n          <el-input\n            :placeholder=\"$t('address_2')\"\n            v-model=\"formData.address.line2\" />\n        </el-form-item>\n        <div class=\"wise-form__inline\">\n          <el-form-item\n            prop=\"address.city\"\n            class=\"is-no-asterisk\"\n            :rules=\"formRules.city\"\n            :label=\"$t('address_City')\">\n            <el-input\n              style=\"flex: 2\"\n              :placeholder=\"$t('address_City')\"\n              v-model=\"formData.address.city\" />\n          </el-form-item>\n          <el-form-item\n            prop=\"address.country\"\n            class=\"is-no-asterisk\"\n            :rules=\"formRules.state\"\n            :label=\"$t('address_State')\">\n            <el-input\n              style=\"flex: 1\"\n              :placeholder=\"$t('address_State')\"\n              v-model=\"formData.address.state\" />\n          </el-form-item>\n          <el-form-item\n            prop=\"address.postalCode\"\n            class=\"is-no-asterisk\"\n            :rules=\"formRules.postalCode\"\n            :label=\"$t('address_Zipcode')\">\n            <el-input\n              style=\"flex: 1\"\n              :placeholder=\"$t('address_Zipcode')\"\n              v-model=\"formData.address.postalCode\" />\n          </el-form-item>\n        </div>\n      </el-form>\n    </div>\n    <div class=\"el-drawer__footer\">\n      <el-button data-testid=\"submit\" type=\"primary\" @click=\"next\" class=\"el-button__brand brand width-100\" :disabled=\"isFormValid\">\n        {{ $t('done') }}\n      </el-button>\n    </div>\n  </div>\n</template>\n<script>\nimport { formatGoogleMapData } from '@/utils/gmap';\nimport { mapActions, mapGetters, mapMutations } from 'vuex';\nimport { getCountryDetailsFromPhoneNumber } from '@/utils/env';\nimport CardMixin from '../mixins/card';\nexport default {\n  name: 'ContactAddressForm',\n  mixins: [CardMixin],\n  data() {\n    return {\n      formData: {\n        address: {\n          line1: null,\n          line2: null,\n          city: null,\n          postalCode: null,\n          country: 'US',\n          addressType: 'billing',\n          state: null\n        }\n      },\n      sameAddress: true,\n      formRules: {\n        line1: [\n          {\n            required: true,\n            message: 'Address 1 is required'\n          }\n        ],\n        city: [\n          {\n            required: true,\n            message: 'City is required'\n          }\n        ],\n        state: [\n          {\n            required: true,\n            message: 'State is required'\n          }\n        ],\n        postalCode: [\n          {\n            required: true,\n            message: 'Zip Code is required'\n          }\n        ]\n      }\n    };\n  },\n  computed: {\n    ...mapGetters('user', ['getPersonDetails']),\n    ...mapGetters('card', ['getCreateCardData']),\n    isFormValid() {\n      if (\n        this.formData.address.line1 &&\n        this.formData.address.city &&\n        this.formData.address.postalCode\n      ) {\n        return false;\n      } else {\n        return true;\n      }\n    },\n    country() {\n      if(this.getCreateCardData.cardType === 'physical') {\n        return 'US';\n      }\n      /** @type {import('@/modules/user/store/state').userState['personDetails']} */\n      const person = this.getPersonDetails;\n      const details = getCountryDetailsFromPhoneNumber(person.phone);\n      if(details && details.code)\n        return details.code;\n      \n      return 'US'\n\n    }\n  },\n  created() {\n    /** @type {import('@/modules/card/store/state').cardState['createCardData']} */\n    const card = this.getCreateCardData;\n    if (card && card.id && card.billingAddress) {\n      const { line1, line2, city, postalCode, state } = card.address;\n      const country = this.country;\n      this.formData.address = {\n        line1,\n        line2,\n        city,\n        postalCode,\n        country,\n        addressType: 'billing',\n        state\n      };\n    }\n  },\n  methods: {\n    ...mapMutations('card', ['updateCreateCardData']),\n    ...mapActions('card', ['createCard']),\n    updateAddress(e) {\n      const address = formatGoogleMapData(e);\n      this.formData.address = address;\n    },\n    next() {\n      this.$refs.personAddress.validate((valid) => {\n        if (!valid) return;\n\n        /** @type {import('@/modules/card/store/state').cardState['createCardData']} */\n        const card = {\n          ...this.getCreateCardData\n        };\n        const { line1, line2, city, postalCode, state } =\n          this.formData.address;\n        \n        const country = this.country;\n        const payload = {\n          ...card,\n          billingAddress: {\n            line1,\n            line2,\n            city,\n            postalCode,\n            country,\n            addressType: 'billing',\n            state\n          }\n        };\n        if (card.cardType === 'physical') {\n          if (this.sameAddress === true) {\n            payload.shipping = {\n              shippingAddress: payload.billingAddress\n            };\n            this.update(payload);\n          } else {\n            this.updateCreateCardData(payload);\n            setTimeout(() => {\n              this.drawerPush('CardShippingAddressForm');\n            }, 0);\n          }\n        } else {\n          this.update(payload);\n        }\n      });\n    },\n    update(payload) {\n      this.updateCreateCardData(payload);\n      const loader = this.showLoader();\n      this.createCard(payload)\n        .then(() => {\n          this.drawerPush('CreatedSuccess');\n        })\n        .catch((e) => {\n          console.log(e);\n          this.apiErrorMessage(e);\n        })\n        .finally(() => {\n          loader.close();\n        });\n    },\n    cancel() {\n      this.drawerClose();\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.billingAddress {\n  .sameAddress {\n    display: flex;\n    justify-content: space-between;\n    color: #00000060;\n    font-size: 17px;\n    padding-bottom: 20px;\n\n    p {\n      font-size: 14px;\n      line-height: 20px;\n    }\n  }\n\n  .widgetContainer__body {\n    padding-top: 32px;\n  }\n\n  .wise-form__header {\n    font-size: 16px;\n    line-height: 24px;\n  }\n}\n</style>","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CardBillingAddressForm.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CardBillingAddressForm.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CardBillingAddressForm.vue?vue&type=template&id=2a140fd4&scoped=true&\"\nimport script from \"./CardBillingAddressForm.vue?vue&type=script&lang=js&\"\nexport * from \"./CardBillingAddressForm.vue?vue&type=script&lang=js&\"\nimport style0 from \"./CardBillingAddressForm.vue?vue&type=style&index=0&id=2a140fd4&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"2a140fd4\",\n  null\n  \n)\n\nexport default component.exports","// Google Map\nexport const formatGoogleMapData = (data) => {\n  const { address_components, geometry } = data;\n  let formattedData = {};\n  const ac = address_components;\n  const premise = findAddressComponent(ac, 'premise');\n  const street_number = findAddressComponent(ac, 'street_number');\n  const route = findAddressComponent(ac, 'route');\n  let city = findAddressComponent(ac, 'locality');\n  let sublocality_level_1 = findAddressComponent(ac, 'sublocality_level_1');\n  const postal_town = findAddressComponent(ac, 'postal_town');\n  const state = findAddressComponent(ac, 'administrative_area_level_1');\n  const country = findAddressComponent(ac, 'country');\n  const postal_code = findAddressComponent(ac, 'postal_code');\n  const neighborhood = findAddressComponent(ac, 'neighborhood');\n\n  const addressLine1 = [street_number, premise, route];\n\n  if (!city) city = postal_town || sublocality_level_1;\n\n  formattedData.line1 = addressLine1\n    .filter((e) => e)\n    .map((e) => e.long_name)\n    .join(' ');\n  formattedData.line2 = neighborhood ? neighborhood.long_name : null;\n  formattedData.city = city ? city.long_name : null;\n  formattedData.postalCode = postal_code ? postal_code.long_name : null;\n  formattedData.state = state ? state.short_name : null;\n\n  formattedData.country = country ? country.short_name : null;\n\n  formattedData.latitude = geometry.location.lat();\n  formattedData.longitude = geometry.location.lng();\n  return formattedData;\n};\n\nexport const findAddressComponent = (address_components, target) => {\n  return address_components.find((el) => {\n    return el.types.includes(target);\n  });\n};\n"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","_s","$t","getCreateCardData","id","cardType","on","drawerClose","ref","attrs","formData","formRules","model","value","callback","$$v","sameAddress","expression","_e","line1","staticStyle","address","$set","componentRestrictions","country","$event","updateAddress","nativeOn","target","city","state","postalCode","isFormValid","next","staticRenderFns","name","mixins","data","line2","addressType","required","message","computed","created","methods","billingAddress","payload","shippingAddress","setTimeout","update","then","catch","e","console","finally","loader","cancel","component","formatGoogleMapData","address_components","geometry","formattedData","ac","premise","findAddressComponent","street_number","route","sublocality_level_1","postal_town","postal_code","neighborhood","addressLine1","filter","map","long_name","join","short_name","latitude","location","lat","longitude","lng","find","el","types","includes"],"sourceRoot":""}