{"version":3,"file":"static/js/2712.86e7892a.chunk.js","mappings":"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","sources":["components/LottieAnimation.tsx","webpack://drop-in-ui/./src/components/Status.module.css?5d70","components/Status.tsx","webpack://drop-in-ui/./src/views/ao/Account/AccountReady/AccountReady.module.css?6668","views/ao/Account/AccountReady/AccountReady.tsx","hooks/account.ts","webpack://drop-in-ui/./src/Global.module.css?a1f3"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport lottie from 'lottie-web';\nimport Success from '../assets/images/animated/success.json';\nimport Searching from '../assets/images/animated/searching.json';\nimport Failure from '../assets/images/animated/failure.json';\n\nconst nameMap:any = {\n  success: Success,\n  searching: Searching,\n  failure: Failure\n};\n\ntype Props = {\n  name: string;\n}\n\nconst LottieAnimation = ({ name }: Props) => {\n  const animRef = useRef<any>(null);\n\n  useEffect(() => {\n    const animation = lottie.loadAnimation({\n      container: animRef.current,\n      renderer: 'svg',\n      loop: true,\n      autoplay: true,\n      animationData: nameMap[name]\n    });\n\n    return () => {\n      animation.destroy();\n    };\n  }, []);\n\n  return (\n    <div data-testid=\"lottie-animation-wrapper\" style={{ width: '140px', height: '140px', margin: '0 auto' }} ref={animRef} />\n  );\n};\n\nexport default LottieAnimation;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Status_container__TVrXy\",\"containerInner\":\"Status_containerInner__tScEb\",\"footerContainer\":\"Status_footerContainer__+ehXm\"};","import React from 'react';\nimport {\n  Box, Button, Flex, Heading, Text\n} from '@chakra-ui/react';\nimport LottieAnimation from './LottieAnimation';\nimport style from './Status.module.css';\n\ntype Props = {\n    status: 'success' | 'searching' | 'failure';\n    title: string;\n    description?: string;\n    ctaText?: string;\n    children?: React.ReactNode;\n    footer?: React.ReactNode;\n    showFooter?: boolean;\n    showCTA?: boolean;\n    onNext?: () => void;\n}\n\nconst Status:React.FC<Props> = ({\n  ctaText, title, description, status, children, footer,\n  onNext, showFooter = true, showCTA = true\n}) => (\n  <Flex className={style.container}>\n    <Flex className={style.containerInner}>\n      <Box w=\"100%\">\n        <LottieAnimation name={status} />\n        <Heading mt={10} data-testid=\"status-title\" variant=\"primary\">{title}</Heading>\n        {description ? (\n          <Text data-testid=\"status-description\" variant=\"regular\" marginTop=\"10px\" className=\"text-light\">\n            {description}\n          </Text>\n        ) : null }\n        {children}\n      </Box>\n      {footer\n      && <Box>{footer}</Box> }\n      {showFooter\n        ? (\n          <Box className={`default-bg ${style.footerContainer}`}>\n            {showCTA\n              ? <Button data-testid=\"status-action\" variant=\"primary\" width=\"100%\" onClick={onNext}>{ctaText}</Button> : null }\n          </Box>\n        ) : null }\n    </Flex>\n  </Flex>\n);\n\nStatus.defaultProps = {\n  description: undefined\n};\n\nexport default Status;\n","// extracted by mini-css-extract-plugin\nexport default {\"numbersContainer\":\"AccountReady_numbersContainer__LKNHl\",\"cryptoAddress\":\"AccountReady_cryptoAddress__J81zs\"};","import React, { useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Box, Text, useClipboard, Flex\n} from '@chakra-ui/react';\nimport { useNavigate } from 'react-router-dom';\nimport MiniBox from '../../../../layout/MiniBox';\nimport Status from '../../../../components/Status';\nimport style from './AccountReady.module.css';\nimport globalStyle from '../../../../Global.module.css';\nimport { useCurrentAccountData } from '../../../../hooks/account';\nimport Icon from '../../../../components/Icon';\n\nfunction AccountReady() {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const {\n    accountDetails, cashWalletDetails, cryptoWalletDetails, selectedAccountType\n  } = useCurrentAccountData();\n\n  const { hasCopied: hasAccountCopied, onCopy: onAccountCopy } = useClipboard(cryptoWalletDetails?.cryptoAddress || '', 2000);\n\n  const next = useCallback(() => {\n    if (accountDetails?.id) {\n      navigate('/ao/account/list');\n    }\n  }, [accountDetails]);\n\n  return (\n    <div className=\"page\">\n      <MiniBox varient=\"box\" bodyClass={globalStyle.sucessScreenNoVPadding}>\n        <Status\n          status=\"success\"\n          title={t(selectedAccountType === 'cash' ? 'account_ready.title' : 'account_ready.cryptoTitle')}\n          description={t(selectedAccountType === 'cash' ? 'account_ready.desc' : 'account_ready.cryptoDesc', {\n            value1: accountDetails?.label\n          })}\n          ctaText={t('account_ready.ctaText')}\n          onNext={next}\n          footer={selectedAccountType === 'cash'\n            ? <Text variant=\"small\" mb=\"14px\">{t('account_ready.footerDesc')}</Text>\n            : undefined}\n        >\n          <Box className={style.numbersContainer}>\n            {selectedAccountType === 'cash' ? (\n              <>\n                <Box>\n                  <Text variant=\"regular\" mb=\"1\" textAlign=\"left\">{t('account_ready.accountNumber')}</Text>\n                  <Text variant=\"regular\" className=\"text-light\" textAlign=\"left\">{cashWalletDetails?.accountNumber}</Text>\n                </Box>\n                <Box>\n                  <Text variant=\"regular\" mb=\"1\" textAlign=\"left\">{t('account_ready.routingNumber')}</Text>\n                  <Text variant=\"regular\" className=\"text-light\" textAlign=\"left\">{cashWalletDetails?.routingNumber}</Text>\n                </Box>\n              </>\n            ) : (\n              <Box>\n                <Text variant=\"regular\" mb=\"1\" className=\"text-light\" textAlign=\"left\">{t('account_ready.walletAddress')}</Text>\n                <Flex alignItems=\"center\" justifyContent=\"space-between\">\n                  <Text variant=\"regular\" textAlign=\"left\" className={style.cryptoAddress}>{cryptoWalletDetails?.cryptoAddress}</Text>\n                  {' '}\n                  {hasAccountCopied\n                    ? <Icon icon=\"tick\" cursor=\"pointer\" className={`${style.copy} icon-customizable`} size={12} />\n                    : <Icon onClick={onAccountCopy} icon=\"copy\" cursor=\"pointer\" className={`${style.copy} icon-customizable`} size={12} /> }\n                </Flex>\n              </Box>\n            ) }\n          </Box>\n        </Status>\n      </MiniBox>\n    </div>\n  );\n}\n\nexport default AccountReady;\n","import { shallowEqual } from 'react-redux';\nimport { useAppSelector } from './store';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const useCurrentAccountData = () => {\n  const { selectedAccount: cashAccountDetails, selectedAccountType } = useAppSelector((store) => store.account, shallowEqual);\n  const cryptoAccountDetails = useAppSelector((store) => store.crypto.selectedAccount, shallowEqual);\n\n  const cashWalletDetails = selectedAccountType === 'cash' ? cashAccountDetails : null;\n  const cryptoWalletDetails = selectedAccountType === 'crypto' ? cryptoAccountDetails : null;\n\n  return {\n    accountDetails: selectedAccountType === 'cash' ? cashAccountDetails : cryptoAccountDetails,\n    selectedAccountType,\n    cashWalletDetails,\n    cryptoWalletDetails\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"sucessScreenNoVPadding\":\"Global_sucessScreenNoVPadding__WvmjX\"};"],"names":["nameMap","success","Success","searching","Searching","failure","Failure","_ref","name","animRef","useRef","useEffect","animation","lottie","container","current","renderer","loop","autoplay","animationData","destroy","_jsx","style","width","height","margin","ref","Status","ctaText","title","description","status","children","footer","onNext","_ref$showFooter","showFooter","_ref$showCTA","showCTA","Flex","className","_jsxs","Box","w","LottieAnimation","Heading","mt","variant","Text","marginTop","concat","Button","onClick","defaultProps","undefined","t","useTranslation","navigate","useNavigate","_useCurrentAccountDat","_useAppSelector","useAppSelector","store","account","shallowEqual","cashAccountDetails","selectedAccount","selectedAccountType","cryptoAccountDetails","crypto","accountDetails","cashWalletDetails","cryptoWalletDetails","useCurrentAccountData","_useClipboard","useClipboard","cryptoAddress","hasAccountCopied","hasCopied","onAccountCopy","onCopy","next","useCallback","id","MiniBox","varient","bodyClass","globalStyle","sucessScreenNoVPadding","value1","label","mb","numbersContainer","_Fragment","textAlign","accountNumber","routingNumber","alignItems","justifyContent","Icon","icon","cursor","copy","size"],"sourceRoot":""}