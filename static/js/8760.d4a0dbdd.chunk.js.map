{"version":3,"file":"static/js/8760.d4a0dbdd.chunk.js","mappings":"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","sources":["components/LottieAnimation.tsx","webpack://drop-in-ui/./src/views/crypto/sellCrypto/SellSuccess/SellSuccess.module.css?16bd","views/crypto/sellCrypto/SellSuccess/SellSuccess.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport lottie from 'lottie-web';\nimport Success from '../assets/images/animated/success.json';\nimport Searching from '../assets/images/animated/searching.json';\nimport Failure from '../assets/images/animated/failure.json';\n\nconst nameMap:any = {\n  success: Success,\n  searching: Searching,\n  failure: Failure\n};\n\ntype Props = {\n  name: string;\n}\n\nconst LottieAnimation = ({ name }: Props) => {\n  const animRef = useRef<any>(null);\n\n  useEffect(() => {\n    const animation = lottie.loadAnimation({\n      container: animRef.current,\n      renderer: 'svg',\n      loop: true,\n      autoplay: true,\n      animationData: nameMap[name]\n    });\n\n    return () => {\n      animation.destroy();\n    };\n  }, []);\n\n  return (\n    <div data-testid=\"lottie-animation-wrapper\" style={{ width: '140px', height: '140px', margin: '0 auto' }} ref={animRef} />\n  );\n};\n\nexport default LottieAnimation;\n","// extracted by mini-css-extract-plugin\nexport default {\"details_label\":\"SellSuccess_details_label__BjVsg\",\"desc\":\"SellSuccess_desc__PsoLZ\",\"details_value\":\"SellSuccess_details_value__hNI-g\"};","import React, { useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Box, Button, Heading, Text, HStack, Link\n} from '@chakra-ui/react';\nimport { shallowEqual } from 'react-redux';\nimport MiniBox from '../../../../layout/MiniBox';\nimport { useAppSelector } from '../../../../hooks/store';\nimport style from './SellSuccess.module.css';\nimport LottieAnimation from '../../../../components/LottieAnimation';\nimport { sendMessage } from '../../../../utils/sdk';\nimport { currencyFormat } from '../../../../utils/general';\nimport { CRYPTO } from '../../../../const/messages';\n\nconst SellSuccess = () => {\n  const { t } = useTranslation();\n  const { sellFormData, sellQuoteData } = useAppSelector((store) => store.crypto, shallowEqual);\n  const cryptoAccount = useAppSelector((store) => store.crypto.selectedAccount, shallowEqual);\n\n  const amount = useMemo(() => {\n    if (sellFormData?.type === 'amount') {\n      return `${sellQuoteData?.amount} ${sellQuoteData?.quotedCurrency}`;\n    }\n\n    const price = parseFloat(sellQuoteData?.price || '') * parseFloat(sellQuoteData?.quantity || '');\n    return currencyFormat(price, sellQuoteData?.quotedCurrency || 'USD');\n  }, [sellFormData]);\n\n  return (\n    <div className=\"page\">\n      <MiniBox\n        heading={t('crypto_sell_success.title')}\n        showBack={false}\n        footer={(\n          <Button\n            width=\"100%\"\n            variant=\"primary\"\n            onClick={() => {\n              sendMessage(CRYPTO.SELL_SUCCESS);\n            }}\n          >\n            {t('crypto_sell_success.ctaText')}\n          </Button>\n          )}\n      >\n        <Box width=\"100%\">\n          <LottieAnimation name=\"success\" />\n          <Heading data-testid=\"status-title\" variant=\"primary\" textAlign=\"center\">\n            {t('crypto_sell_success.youSold')}\n            {' '}\n            {sellQuoteData?.quantity}\n            {' '}\n            {sellFormData?.type === 'quantity' ? sellQuoteData?.cryptoCurrency : sellQuoteData?.quotedCurrency}\n          </Heading>\n          <Text className={`${style.desc} text-light`} variant=\"regular\" textAlign=\"center\">\n            {t('crypto_sell_success.anyQuestions')}\n            {' '}\n            <Link textDecoration=\"underline\" href=\"mailto:chat@solidfi.com\" style={{ color: 'inherit', textDecoration: 'underline' }} isExternal>chat@solidfi.com</Link>\n          </Text>\n          <Box className={style.details_label}>\n            <HStack className={style.details_value}>\n              <Text w=\"50%\" variant=\"regular\" textAlign=\"left\" className=\"text-light\">{t('crypto_sell_details.source')}</Text>\n              <Text w=\"50%\" variant=\"regular\" textAlign=\"left\">{cryptoAccount?.label}</Text>\n            </HStack>\n            <HStack className={style.details_value}>\n              <Text w=\"50%\" variant=\"regular\" textAlign=\"left\" className=\"text-light\">{t('crypto_sell_details.destination')}</Text>\n              <Text w=\"50%\" variant=\"regular\" textAlign=\"left\">{sellFormData?.selectedAccountLabel}</Text>\n            </HStack>\n            <HStack className={style.details_value}>\n              <Text w=\"50%\" variant=\"regular\" textAlign=\"left\" className=\"text-light\">{t('crypto_sell_details.quantity')}</Text>\n              <Text w=\"50%\" variant=\"regular\" textAlign=\"left\">{sellQuoteData?.quantity}</Text>\n            </HStack>\n            <HStack className={style.details_value}>\n              <Text w=\"50%\" variant=\"regular\" textAlign=\"left\" className=\"text-light\">{t('crypto_sell_details.amount')}</Text>\n              <Text w=\"50%\" variant=\"regular\" textAlign=\"left\">\n                {amount}\n              </Text>\n            </HStack>\n            <HStack className={style.details_value}>\n              <Text w=\"50%\" variant=\"regular\" textAlign=\"left\" className=\"text-light\">{t('crypto_sell_details.exchangeRate')}</Text>\n              <Text w=\"50%\" variant=\"regular\" textAlign=\"left\">{`1 ${sellQuoteData?.cryptoCurrency} = ${sellQuoteData?.price} ${sellQuoteData?.quotedCurrency}`}</Text>\n            </HStack>\n            <HStack className={style.details_value}>\n              <Text w=\"50%\" variant=\"regular\" textAlign=\"left\" className=\"text-light\">{t('crypto_sell_details.description')}</Text>\n              <Text w=\"50%\" variant=\"regular\" textAlign=\"left\">{sellFormData?.description}</Text>\n            </HStack>\n          </Box>\n          <Text variant=\"small\" whiteSpace=\"pre-line\" fontSize=\"9px\" textAlign=\"left\">{t('crypto_sell_success.poweredBy')}</Text>\n        </Box>\n      </MiniBox>\n    </div>\n  );\n};\n\nexport default SellSuccess;\n"],"names":["nameMap","success","Success","searching","Searching","failure","Failure","_ref","name","animRef","useRef","useEffect","animation","lottie","container","current","renderer","loop","autoplay","animationData","destroy","_jsx","style","width","height","margin","ref","t","useTranslation","_useAppSelector","useAppSelector","store","crypto","shallowEqual","sellFormData","sellQuoteData","cryptoAccount","selectedAccount","amount","useMemo","type","concat","quotedCurrency","price","parseFloat","quantity","currencyFormat","className","children","MiniBox","heading","showBack","footer","Button","variant","onClick","sendMessage","CRYPTO","SELL_SUCCESS","_jsxs","Box","LottieAnimation","Heading","textAlign","cryptoCurrency","Text","Link","textDecoration","href","color","isExternal","HStack","w","label","selectedAccountLabel","description","whiteSpace","fontSize"],"sourceRoot":""}