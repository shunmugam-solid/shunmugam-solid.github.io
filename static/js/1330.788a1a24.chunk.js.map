{"version":3,"file":"static/js/1330.788a1a24.chunk.js","mappings":"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","sources":["views/cards/CardCreation/CardBillingAddress/CardBillingAddress.tsx"],"sourcesContent":["import React, { useCallback, useMemo } from 'react';\nimport {\n  Box, Button, FormControl, FormLabel, Heading, Input, useStyleConfig\n} from '@chakra-ui/react';\nimport { useTranslation } from 'react-i18next';\nimport { shallowEqual } from 'react-redux';\nimport MiniBox from '../../../../layout/MiniBox';\nimport AddressSearch from '../../../../components/AddressSearch';\nimport { useAppAsyncDispatch, useAppSelector } from '../../../../hooks/store';\nimport { apiErrorHandler } from '../../../../utils/general';\nimport { cardPayload } from '../../../../types/card';\nimport { updateCardPayload } from '../../../../store/actionCreators/card';\nimport { cardDelete, createCard } from '../../../../store/middlewares/card';\nimport { useDrawer } from '../../../../hooks/drawer';\n\nconst CardCreated = React.lazy(() => import('../CardCreated/CardCreated'));\n\nconst CardBillingAddress = () => {\n  const { t } = useTranslation();\n  const dispatch = useAppAsyncDispatch();\n  const { open, goBack } = useDrawer();\n\n  const style:any = useStyleConfig('FormControl', {\n    variant: 'primary'\n  });\n\n  const cardPayloadData = useAppSelector((store) => store.card.cardPayload, shallowEqual);\n  const replaceCardId = useAppSelector((store) => store.card.replaceCardId);\n\n  const setPayload = useCallback((key: keyof cardPayload, value: any) => {\n    if (cardPayloadData) {\n      const copiedData:cardPayload = {\n        ...cardPayloadData,\n        [key]: value\n      };\n\n      dispatch(updateCardPayload(copiedData));\n    }\n  }, [cardPayloadData]);\n\n  const isValid = useMemo(() => (\n    cardPayloadData\n      && !!cardPayloadData.shipping\n      && !!cardPayloadData.shipping.shippingAddress.line1\n      && !!cardPayloadData.shipping.shippingAddress.city\n      && !!cardPayloadData.shipping.shippingAddress.state\n      && !!cardPayloadData.shipping.shippingAddress.country\n      && !!cardPayloadData.shipping.shippingAddress.postalCode\n      && cardPayloadData.shipping.shippingAddress.line1.length !== 0\n      && cardPayloadData.shipping.shippingAddress.city.length !== 0\n      && cardPayloadData.shipping.shippingAddress.state.length !== 0\n      && cardPayloadData.shipping.shippingAddress.country.length !== 0\n      && cardPayloadData.shipping.shippingAddress.postalCode.length !== 0\n  ), [cardPayloadData]);\n\n  const submit = useCallback(() => {\n    if (isValid && cardPayloadData) {\n      dispatch(createCard(cardPayloadData))\n        .then(() => {\n          if (replaceCardId) {\n            dispatch(cardDelete(replaceCardId))\n              .catch(apiErrorHandler)\n              .finally(() => {\n                open(CardCreated);\n              });\n          } else {\n            open(CardCreated);\n          }\n        }).catch(apiErrorHandler);\n    }\n  }, [isValid, replaceCardId]);\n\n  return (\n    <div className=\"page\">\n      <form onSubmit={(e) => {\n        e.preventDefault();\n        submit();\n      }}\n      >\n        <MiniBox\n          heading={t(`create_card_info.title_${cardPayloadData?.cardType}`)}\n          onBack={goBack}\n          footer={(\n            <Button width=\"100%\" variant=\"primary\" disabled={!isValid} onClick={submit}>\n              {t('create_card_address.ctaText')}\n            </Button>\n)}\n        >\n          <Box width=\"100%\">\n\n            <Heading variant=\"primary\" mt={3} size=\"md\">\n              {t('create_card_address.confirmBillingAddressTitle')}\n            </Heading>\n            <FormControl variant=\"primary\" style={style}>\n              <FormLabel variant=\"primary\">\n                {t('create_card_address.address1')}\n              </FormLabel>\n              <AddressSearch\n                placeholder={t('create_card_address.address1')}\n                googleApiKey={process.env.REACT_APP_GMAP_KEY || ''}\n                address={cardPayloadData?.shipping?.shippingAddress || undefined}\n                onChange={(address) => {\n                  setPayload('shipping', {\n                    shippingAddress: {\n                      ...address,\n                      addressType: 'mailing',\n                    }\n                  });\n                }}\n              />\n              {/* <Input variant=\"primary\" value=\"\" /> */}\n            </FormControl>\n\n            <FormControl variant=\"primary\" style={style}>\n              <FormLabel variant=\"primary\">\n                {t('create_card_address.address2')}\n              </FormLabel>\n              <Input\n                variant=\"primary\"\n                placeholder={t('create_card_address.address2')}\n                value={cardPayloadData?.shipping?.shippingAddress?.line2}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setPayload('shipping', {\n                    shippingAddress: {\n                      ...cardPayloadData?.shipping?.shippingAddress || {},\n                      line2: e.target.value\n                    }\n                  });\n                }}\n              />\n            </FormControl>\n\n            <FormControl variant=\"primary\" style={style}>\n              <FormLabel variant=\"primary\">\n                {t('create_card_address.addressCity')}\n              </FormLabel>\n              <Input\n                variant=\"primary\"\n                placeholder={t('create_card_address.addressCity')}\n                value={cardPayloadData?.shipping?.shippingAddress?.city}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setPayload('shipping', {\n                    shippingAddress: {\n                      ...cardPayloadData?.shipping?.shippingAddress || {},\n                      city: e.target.value\n                    }\n                  });\n                }}\n              />\n            </FormControl>\n\n            <FormControl variant=\"primary\" style={style}>\n              <FormLabel variant=\"primary\">\n                {t('create_card_address.addressState')}\n              </FormLabel>\n              <Input\n                variant=\"primary\"\n                placeholder={t('create_card_address.addressState')}\n                value={cardPayloadData?.shipping?.shippingAddress?.state}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setPayload('shipping', {\n                    shippingAddress: {\n                      ...cardPayloadData?.shipping?.shippingAddress || {},\n                      state: e.target.value\n                    }\n                  });\n                }}\n              />\n            </FormControl>\n\n            <FormControl variant=\"primary\" style={style}>\n              <FormLabel variant=\"primary\">\n                {t('create_card_address.addressZipcode')}\n              </FormLabel>\n              <Input\n                variant=\"primary\"\n                placeholder={t('create_card_address.addressZipcode')}\n                value={cardPayloadData?.shipping?.shippingAddress?.postalCode}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setPayload('shipping', {\n                    shippingAddress: {\n                      ...cardPayloadData?.shipping?.shippingAddress || {},\n                      postalCode: e.target.value\n                    }\n                  });\n                }}\n              />\n            </FormControl>\n\n          </Box>\n        </MiniBox>\n      </form>\n    </div>\n  );\n};\n\nexport default CardBillingAddress;\n"],"names":["CardCreated","React","_cardPayloadData$ship","_cardPayloadData$ship2","_cardPayloadData$ship3","_cardPayloadData$ship5","_cardPayloadData$ship6","_cardPayloadData$ship8","_cardPayloadData$ship9","_cardPayloadData$ship11","_cardPayloadData$ship12","t","useTranslation","dispatch","useAppAsyncDispatch","_useDrawer","useDrawer","open","goBack","style","useStyleConfig","variant","cardPayloadData","useAppSelector","store","card","cardPayload","shallowEqual","replaceCardId","setPayload","useCallback","key","value","copiedData","_objectSpread","_defineProperty","updateCardPayload","isValid","useMemo","shipping","shippingAddress","line1","city","state","country","postalCode","length","submit","createCard","then","cardDelete","catch","apiErrorHandler","finally","_jsx","className","children","onSubmit","e","preventDefault","MiniBox","heading","concat","cardType","onBack","footer","Button","width","disabled","onClick","_jsxs","Box","Heading","mt","size","FormControl","FormLabel","AddressSearch","placeholder","googleApiKey","process","address","undefined","onChange","addressType","Input","line2","_cardPayloadData$ship4","target","_cardPayloadData$ship7","_cardPayloadData$ship10","_cardPayloadData$ship13"],"sourceRoot":""}