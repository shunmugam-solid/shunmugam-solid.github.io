{"version":3,"file":"static/js/3734.7389a5a1.chunk.js","mappings":"qOACA,EAA4B,+B,2DCkG5B,EApFoB,WAClB,IAAQA,GAAMC,EAAAA,EAAAA,KAAND,EACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,GAAOC,EAAAA,EAAAA,KAAe,SAACC,GAAK,IAAAC,EAAA,OAA6B,QAA7BA,EAAKD,EAAME,KAAKC,qBAAa,IAAAF,OAAA,EAAxBA,EAA0BG,MAAMC,aAAa,GAAEC,EAAAA,IAEhFC,GAAUC,EAAAA,EAAAA,cAAY,SAACC,GACP,aAAhBA,EACFb,GAASc,EAAAA,EAAAA,OACNC,MAAK,SAAAC,GAAe,IAAZC,EAAID,EAAJC,KACP,GAAoB,IAAhBA,EAAKC,OAAc,CACrB,IAAMC,EAAIF,EAAK,GACM,aAAjBE,EAAEC,IAAIC,QACRrB,GAASsB,EAAAA,EAAAA,IAAyB,CAChCT,YAAa,OACbU,WAAYJ,EAAEK,MAEhB1B,EAAS,sBACkB,cAAjBqB,EAAEC,IAAIC,QAA2C,aAAjBF,EAAEC,IAAIC,QAChDrB,GAASyB,EAAAA,EAAAA,IAAuBR,EAAK,KACrCnB,EAAS,oBAETE,GAASyB,EAAAA,EAAAA,IAAuBR,EAAK,KACrCnB,EAAS,oBAEb,MACEA,EAAS,0BAEb,KAEFE,GAASsB,EAAAA,EAAAA,IAAyB,CAChCT,YAAa,OACbU,WAAY,QAEdzB,EAAS,qBAEb,GAAG,IAEH,OACE4B,EAAAA,EAAAA,KAACC,EAAAA,GAAG,CAACC,UAAU,OAAMC,UACnBH,EAAAA,EAAAA,KAAA,QAAMI,SAAU,SAACC,GACfA,EAAEC,gBACJ,EAAEH,UAEAH,EAAAA,EAAAA,KAACO,EAAAA,EAAO,CACNC,QAAQ,MACRC,UAAU,EAAMN,UAEhBO,EAAAA,EAAAA,MAACT,EAAAA,GAAG,CAACU,MAAM,OAAOC,WAAW,OAAMT,SAAA,CAChC3B,GAEGwB,EAAAA,EAAAA,KAACC,EAAAA,GAAG,CAAAE,UACFH,EAAAA,EAAAA,KAACa,EAAAA,GAAK,CAACC,SAAS,QAAQC,OAAO,sBAAsBC,IAAKxC,MAE1D,MAENkC,EAAAA,EAAAA,MAACT,EAAAA,GAAG,CAAAE,SAAA,EACFH,EAAAA,EAAAA,KAACiB,EAAAA,GAAI,CAACf,UAAU,aAAagB,QAAQ,UAAUC,UAAU,SAASC,aAAa,OAAMjB,SAClFjC,EAAE,wBAEL8B,EAAAA,EAAAA,KAACiB,EAAAA,GAAI,CAACI,WAAW,MAAMH,QAAQ,UAAUC,UAAU,SAASG,MAAM,UAAUF,aAAa,OAAMjB,SAC5FjC,EAAE,gCAEL8B,EAAAA,EAAAA,KAACuB,EAAAA,GAAI,CAAApB,UACHO,EAAAA,EAAAA,MAACc,EAAAA,GAAQ,CAAArB,SAAA,EACPO,EAAAA,EAAAA,MAACe,EAAAA,GAAM,CAACvB,UAAWwB,EAAiBC,QAAS,kBAAM1C,EAAQ,WAAW,EAACkB,SAAA,EACrEH,EAAAA,EAAAA,KAACiB,EAAAA,GAAI,CAACC,QAAQ,UAASf,SAAEjC,EAAE,2BAC3B8B,EAAAA,EAAAA,KAAC4B,EAAAA,EAAI,CAACC,KAAK,oBAAoBC,KAAM,SAEvCpB,EAAAA,EAAAA,MAACe,EAAAA,GAAM,CAACvB,UAAWwB,EAAiBC,QAAS,kBAAM1C,EAAQ,WAAW,EAACkB,SAAA,EACrEH,EAAAA,EAAAA,KAACiB,EAAAA,GAAI,CAACC,QAAQ,UAASf,SAAEjC,EAAE,2BAC3B8B,EAAAA,EAAAA,KAAC4B,EAAAA,EAAI,CAACC,KAAK,oBAAoBC,KAAM,wBAUzD,C","sources":["webpack://drop-in-ui/./src/views/ao/Account/AccountType/AccountType.module.css?0f91","views/ao/Account/AccountType/AccountType.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"actionBox\":\"AccountType_actionBox__TQkIm\"};","import React, { useCallback } from 'react';\nimport {\n  Box, HStack, Image, List, ListItem, Text\n} from '@chakra-ui/react';\nimport { useTranslation } from 'react-i18next';\nimport { shallowEqual } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport MiniBox from '../../../../layout/MiniBox';\nimport style from './AccountType.module.css';\nimport { useAppAsyncDispatch, useAppSelector } from '../../../../hooks/store';\nimport Icon from '../../../../components/Icon';\nimport { listAllbusiness } from '../../../../store/middlewares/business';\nimport { updateSelectedBusiness } from '../../../../store/actionCreators/business';\nimport { updateSetupWalletOptions } from '../../../../store/actionCreators/account';\n\nconst SetupWallet = () => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const dispatch = useAppAsyncDispatch();\n\n  const logo = useAppSelector((store) => store.core.programConfig?.brand.landscapeLogo, shallowEqual);\n\n  const onPress = useCallback((accountType: 'personal' | 'business') => {\n    if (accountType === 'business') {\n      dispatch(listAllbusiness())\n        .then(({ data }) => {\n          if (data.length !== 0) {\n            const b = data[0];\n            if (b.kyb.status === 'approved') {\n              dispatch(updateSetupWalletOptions({\n                accountType: 'cash',\n                businessId: b.id,\n              }));\n              navigate('/ao/account/setup');\n            } else if ((b.kyb.status === 'submitted' || b.kyb.status === 'inReview')) {\n              dispatch(updateSelectedBusiness(data[0]));\n              navigate('/ao/kyb/review');\n            } else {\n              dispatch(updateSelectedBusiness(data[0]));\n              navigate('/ao/kyb/declined');\n            }\n          } else {\n            navigate('/ao/kyb/businessDetails');\n          }\n        });\n    } else {\n      dispatch(updateSetupWalletOptions({\n        accountType: 'cash',\n        businessId: null,\n      }));\n      navigate('/ao/account/setup');\n    }\n  }, []);\n\n  return (\n    <Box className=\"page\">\n      <form onSubmit={(e) => {\n        e.preventDefault();\n      }}\n      >\n        <MiniBox\n          varient=\"box\"\n          showBack={false}\n        >\n          <Box width=\"100%\" paddingTop=\"15px\">\n            {logo\n              ? (\n                <Box>\n                  <Image maxWidth=\"250px\" margin=\"90px auto 46px auto\" src={logo} />\n                </Box>\n              ) : null }\n\n            <Box>\n              <Text className=\"text-light\" variant=\"regular\" textAlign=\"center\" marginBottom=\"40px\">\n                {t('account_type.desc')}\n              </Text>\n              <Text fontWeight=\"600\" variant=\"regular\" textAlign=\"center\" color=\"#000000\" marginBottom=\"40px\">\n                {t('account_type.option_title')}\n              </Text>\n              <List>\n                <ListItem>\n                  <HStack className={style.actionBox} onClick={() => onPress('personal')}>\n                    <Text variant=\"regular\">{t('account_type.option1')}</Text>\n                    <Icon icon=\"Arrow-small-right\" size={12} />\n                  </HStack>\n                  <HStack className={style.actionBox} onClick={() => onPress('business')}>\n                    <Text variant=\"regular\">{t('account_type.option2')}</Text>\n                    <Icon icon=\"Arrow-small-right\" size={12} />\n                  </HStack>\n                </ListItem>\n              </List>\n            </Box>\n          </Box>\n        </MiniBox>\n      </form>\n    </Box>\n  );\n};\n\nexport default SetupWallet;\n"],"names":["t","useTranslation","navigate","useNavigate","dispatch","useAppAsyncDispatch","logo","useAppSelector","store","_store$core$programCo","core","programConfig","brand","landscapeLogo","shallowEqual","onPress","useCallback","accountType","listAllbusiness","then","_ref","data","length","b","kyb","status","updateSetupWalletOptions","businessId","id","updateSelectedBusiness","_jsx","Box","className","children","onSubmit","e","preventDefault","MiniBox","varient","showBack","_jsxs","width","paddingTop","Image","maxWidth","margin","src","Text","variant","textAlign","marginBottom","fontWeight","color","List","ListItem","HStack","style","onClick","Icon","icon","size"],"sourceRoot":""}