{"version":3,"file":"static/js/1940.25b4a6f7.chunk.js","mappings":"qKAEO,IAAKA,EAAM,SAANA,GAAM,OAANA,EAAM,gBAANA,EAAM,4BAANA,EAAM,0CAANA,EAAM,kCAANA,CAAM,MAkBLC,EAAuB,CAIlCC,QAAS,CAAC,EAOVC,SAAQ,SAACC,EAAOC,GACTC,KAAKJ,QAAQE,IAClBE,KAAKJ,QAAQE,GAAOG,SAAQ,SAACC,GAAa,OAAKA,EAASH,EAAK,GAC/D,EAMAI,UAAS,SAACL,EAAOI,GAAW,IAADE,EAAA,KACpBJ,KAAKJ,QAAQE,KAAQE,KAAKJ,QAAQE,GAAS,IAChD,IAAMO,EAASL,KAAKJ,QAAQE,GAAOQ,KAAKJ,GACxC,OAAO,WACLE,EAAKG,YAAYT,EAAOO,EAAS,EACnC,CACF,EAMAE,YAAW,SAACT,EAAOU,GACZR,KAAKJ,QAAQE,UACJW,IAAVD,GAAuBR,KAAKJ,QAAQE,GAAOU,GAC7CR,KAAKJ,QAAQE,GAAOY,OAAOF,EAAO,GAAG,WAAO,WAErCR,KAAKJ,QAAQE,GAExB,E,qJCiBF,UAxDoB,WAClB,IAAMD,GAAWc,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAKXC,GAAWC,EAAAA,EAAAA,cAAY,SAACC,GAC5BnB,GAASoB,EAAAA,EAAAA,IAAUD,IAChBE,MAAK,WACJN,EAAS,iBACX,IACCO,MAAMC,EAAAA,GACX,GAAG,IAoCH,OAlCAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAWC,OAAOC,eAAeC,QAAQ,QAC/C,GAAIH,EAAU,CACZ,IAAMI,EAA8CC,KAAKC,MAAMN,GAC/DzB,GAASgC,EAAAA,EAAAA,IAAmBH,IACxB,gBAAiBA,IACnBI,EAAAA,EAAKC,SAASC,QAAQC,OAAOC,cAAa,UAAAC,OAAaT,EAAaU,cAKtEvC,GAASwC,EAAAA,EAAAA,OACNnB,MAAK,SAACoB,GACLzC,GAAS0C,EAAAA,EAAAA,IAAmBD,EAAIE,YAC7BC,SAAQ,WACgB,eAAnBH,EAAII,IAAIC,OACV7B,EAASwB,EAAIM,KAEbC,EAAAA,EAAAA,IAAeP,EAAII,KAAKxB,MAAK,SAAC4B,GAC5BlC,EAASkC,EACX,GAEJ,IAEFvB,OAAOC,eAAeuB,WAAW,OACnC,IAAG5B,OAAM,WACPxB,EAAAA,EAAaE,SAASH,EAAAA,EAAOsD,OAAQ,CAAC,EACxC,IAAGP,SAAQ,WAEX,GACJ,MACE7B,EAAS,IAEb,GAAG,KAEDqC,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CAACC,QAAQ,MAAKC,UACpBH,EAAAA,EAAAA,KAACI,EAAAA,EAAM,CAACC,MAAI,KAGlB,C","sources":["utils/events.ts","views/ao/Kyc/IdvCallback/IdvCallback.tsx"],"sourcesContent":["/* eslint-disable no-underscore-dangle */\n\nexport enum Events {\n    LOGOUT = 'logout',\n    CARD_REFRESH = 'card_refresh',\n    TRANSACTION_REFRESH = 'transaction_refresh',\n    CONTACT_REFRESH = 'contact_refresh',\n}\n\ntype callbackFn = (data: any) => any;\n\ntype Emitter = {\n    _events: {\n        [key: string]: Array<callbackFn>\n    },\n    dispatch: (event: Events, data: any) => void\n    subscribe: (event: Events, cb: callbackFn) => () => void;\n    unsubscribe: (event: Events, index?: number) => void;\n}\n\nexport const eventEmitter:Emitter = {\n  /**\n     * events store\n     */\n  _events: {},\n  /**\n   * dispatcher\n   * @param event\n   * @param data\n   * @returns\n   */\n  dispatch(event, data) {\n    if (!this._events[event]) return;\n    this._events[event].forEach((callback: any) => callback(data));\n  },\n  /**\n   * subscriber\n   * @param event\n   * @param callback\n   */\n  subscribe(event, callback) {\n    if (!this._events[event]) this._events[event] = [];\n    const length = this._events[event].push(callback);\n    return () => {\n      this.unsubscribe(event, length - 1);\n    };\n  },\n  /**\n   * unsubscriber\n   * @param event\n   * @returns\n   */\n  unsubscribe(event, index?) {\n    if (!this._events[event]) return;\n    if (index !== undefined && this._events[event][index]) {\n      this._events[event].splice(index, 1, () => {});\n    } else {\n      delete this._events[event];\n    }\n  }\n};\n","import React, { useCallback, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Loader from '../../../../components/Loader';\nimport { useAppAsyncDispatch } from '../../../../hooks/store';\nimport MiniBox from '../../../../layout/MiniBox';\nimport { updateUserAuthData } from '../../../../store/actionCreators/user';\nimport { fetchProgramConfig } from '../../../../store/middlewares/core';\nimport { getPerson, submitKyc } from '../../../../store/middlewares/user';\nimport { userState } from '../../../../store/reducers/user';\nimport { eventEmitter, Events } from '../../../../utils/events';\nimport { apiErrorHandler, findNextScreen } from '../../../../utils/general';\nimport http from '../../../../utils/http';\n\n/**\n * idv callback view\n *\n * @component\n * @module KYC\n * @returns {JSX.Element}\n */\nconst IdvCallback = () => {\n  const dispatch = useAppAsyncDispatch();\n  const navigate = useNavigate();\n\n  /**\n   * Submit kyc and navigate to review status screen\n   */\n  const startKyc = useCallback((personId:string) => {\n    dispatch(submitKyc(personId))\n      .then(() => {\n        navigate('/ao/kyc/review');\n      })\n      .catch(apiErrorHandler);\n  }, []);\n\n  useEffect(() => {\n    const authData = window.sessionStorage.getItem('AUTH');\n    if (authData) {\n      const authDataJson: userState['authTokenDetails'] = JSON.parse(authData);\n      dispatch(updateUserAuthData(authDataJson));\n      if ('accessToken' in authDataJson) {\n        http.defaults.headers.common.AUTHORIZATION = `Bearer ${authDataJson.accessToken}`;\n      }\n      /**\n       * fetch person details and check kyc status\n       */\n      dispatch(getPerson())\n        .then((res) => {\n          dispatch(fetchProgramConfig(res.programId))\n            .finally(() => {\n              if (res.kyc.status === 'notStarted') {\n                startKyc(res.id);\n              } else {\n                findNextScreen(res.kyc).then((s) => {\n                  navigate(s);\n                });\n              }\n            });\n\n          window.sessionStorage.removeItem('AUTH');\n        }).catch(() => {\n          eventEmitter.dispatch(Events.LOGOUT, {});\n        }).finally(() => {\n\n        });\n    } else {\n      navigate('/');\n    }\n  }, []);\n  return (\n    <MiniBox varient=\"box\">\n      <Loader show />\n    </MiniBox>\n  );\n};\n\nexport default IdvCallback;\n"],"names":["Events","eventEmitter","_events","dispatch","event","data","this","forEach","callback","subscribe","_this","length","push","unsubscribe","index","undefined","splice","useAppAsyncDispatch","navigate","useNavigate","startKyc","useCallback","personId","submitKyc","then","catch","apiErrorHandler","useEffect","authData","window","sessionStorage","getItem","authDataJson","JSON","parse","updateUserAuthData","http","defaults","headers","common","AUTHORIZATION","concat","accessToken","getPerson","res","fetchProgramConfig","programId","finally","kyc","status","id","findNextScreen","s","removeItem","LOGOUT","_jsx","MiniBox","varient","children","Loader","show"],"sourceRoot":""}