{"version":3,"file":"static/js/248.d3975278.chunk.js","mappings":"0PACA,EAAyB,iCAAzB,EAAsE,oCAAtE,EAAiH,+B,mBCsFjH,EAxEyB,WACvB,IAAQA,GAAMC,EAAAA,EAAAA,KAAND,EACFE,GAAWC,EAAAA,EAAAA,MACjBC,GAAyBC,EAAAA,EAAAA,KAAjBC,EAAIF,EAAJE,KAAMC,EAAMH,EAANG,OAEAC,GAAeC,EAAAA,EAAAA,KAAe,SAACC,GAAK,OAAKA,EAAMC,QAAQH,UAAU,GAAEI,EAAAA,IAAzEN,MAERO,EAAAA,EAAAA,YAAU,WACA,OAAJP,QAAI,IAAJA,GAAAA,EAAMQ,IACRZ,GAASa,EAAAA,EAAAA,IAAgBT,EAAKQ,IAElC,GAAG,CAAK,OAAJR,QAAI,IAAJA,OAAI,EAAJA,EAAMQ,KAEV,IAAME,GAAoBC,EAAAA,EAAAA,cAAY,SAACC,EAAcC,GAC3C,OAAJb,QAAI,IAAJA,GAAAA,EAAMQ,IACRZ,GAASkB,EAAAA,EAAAA,IAAoBd,EAAKQ,GAAII,EAAMC,IACzCE,MAAK,SAACC,GACL,IAAMC,EAAMC,OAAOC,IAAIC,gBAAgBJ,GACjCK,EAAIC,SAASC,cAAc,KACjCF,EAAEG,KAAOP,EACTI,EAAEI,SAAQ,GAAAC,OAAMd,EAAI,KAAAc,OAAIb,EAAK,kBAC7BQ,EAAEM,QACFN,EAAEO,QACJ,IAAGC,MAAMC,EAAAA,GAEf,GAAG,CAAC9B,IAEJ,OACE+B,EAAAA,EAAAA,KAACC,EAAAA,GAAG,CAACC,UAAS,GAAAP,OAAKQ,EAAY,SAAQC,UACrCJ,EAAAA,EAAAA,KAACK,EAAAA,EAAO,CACNC,UAAQ,EACRC,OAAQrC,EACRsC,QAAS7C,EAAE,4BAA4ByC,UAEvCJ,EAAAA,EAAAA,KAACC,EAAAA,GAAG,CAACQ,MAAM,OAAOC,GAAG,IAAGN,UACtBJ,EAAAA,EAAAA,KAACC,EAAAA,GAAG,CAAAG,SACqB,IAAtBjC,EAAWwC,QACVX,EAAAA,EAAAA,KAACY,EAAAA,GAAM,CAAAR,UACLJ,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACC,QAAQ,UAAUZ,UAAU,aAAaa,UAAU,SAAQX,SAC9DzC,EAAE,iCAILQ,EAAW6C,KAAI,SAACC,GAAC,OACjBC,EAAAA,EAAAA,MAACC,EAAAA,GAAM,CAAwCC,QAAQ,gBAAgBV,GAAG,OAAOR,UAAWC,EAAgBC,SAAA,EAC1Gc,EAAAA,EAAAA,MAACjB,EAAAA,GAAG,CAAAG,SAAA,EACFJ,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACC,QAAQ,UAAUC,UAAU,OAAMX,UACrCiB,EAAAA,EAAAA,SAAO,IAAIC,KAAK,GAAD3B,OAAIsB,EAAEpC,KAAI,KAAAc,OACE,IAA1B,GAAAA,OAAIsB,EAAEnC,OAAS6B,OAAY,IAAAhB,OACnBsB,EAAEnC,OACNmC,EAAEnC,MAAK,iBACI,eAEnBoC,EAAAA,EAAAA,MAACL,EAAAA,GAAI,CAACC,QAAQ,QAAQC,UAAU,OAAMX,SAAA,CACnCzC,EAAE,kCACF,KACA0D,EAAAA,EAAAA,SAAO,IAAIC,KAAKL,EAAEM,WAAY,sBAGnCvB,EAAAA,EAAAA,KAACC,EAAAA,GAAG,CAAAG,UACFJ,EAAAA,EAAAA,KAACwB,EAAAA,GAAI,CAACV,QAAQ,UAAUZ,UAAWC,EAAYV,KAAK,IAAIgC,QAAS,kBAAM9C,EAAkBsC,EAAEpC,KAAMoC,EAAEnC,MAAM,EAACsB,SAAEzC,EAAE,iCAC1G,aAAAgC,OAjBkBsB,EAAEnC,MAAK,KAAAa,OAAIsB,EAAEpC,MAkB9B,WAQzB,C","sources":["webpack://drop-in-ui/./src/views/ao/Account/AccountStatement/AccountStatement.module.css?3ac6","views/ao/Account/AccountStatement/AccountStatement.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"pageBg\":\"AccountStatement_pageBg__4YDTv\",\"statement\":\"AccountStatement_statement__rGkI8\",\"link\":\"AccountStatement_link__Zs4jJ\"};","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useCallback, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Box, Text, HStack, Link, Center\n} from '@chakra-ui/react';\nimport { shallowEqual } from 'react-redux';\nimport { format } from 'date-fns';\nimport { useAppAsyncDispatch, useAppSelector } from '../../../../hooks/store';\nimport { fetchStatements, getStatementByMonth } from '../../../../store/middlewares/account';\nimport { apiErrorHandler } from '../../../../utils/general';\nimport MiniBox from '../../../../layout/MiniBox';\nimport style from './AccountStatement.module.css';\nimport { useDrawer } from '../../../../hooks/drawer';\n\nconst AccountStatement = () => {\n  const { t } = useTranslation();\n  const dispatch = useAppAsyncDispatch();\n  const { data, goBack } = useDrawer<{id: string}>();\n\n  const { data: statements } = useAppSelector((store) => store.account.statements, shallowEqual);\n\n  useEffect(() => {\n    if (data?.id) {\n      dispatch(fetchStatements(data.id));\n    }\n  }, [data?.id]);\n\n  const downloadStatement = useCallback((year: number, month: number) => {\n    if (data?.id) {\n      dispatch(getStatementByMonth(data.id, year, month))\n        .then((blob) => {\n          const url = window.URL.createObjectURL(blob);\n          const a = document.createElement('a');\n          a.href = url;\n          a.download = `${year}-${month}-statement.pdf`;\n          a.click();\n          a.remove();\n        }).catch(apiErrorHandler);\n    }\n  }, [data]);\n\n  return (\n    <Box className={`${style.pageBg} page`}>\n      <MiniBox\n        showBack\n        onBack={goBack}\n        heading={t('account_statements.title')}\n      >\n        <Box width=\"100%\" mb=\"0\">\n          <Box>\n            {statements.length === 0 ? (\n              <Center>\n                <Text variant=\"regular\" className=\"text-light\" textAlign=\"center\">\n                  {t('account_statements.noData')}\n                </Text>\n              </Center>\n            )\n              : statements.map((s) => (\n                <HStack key={`statement-${s.month}-${s.year}`} justify=\"space-between\" mb=\"16px\" className={style.statement}>\n                  <Box>\n                    <Text variant=\"regular\" textAlign=\"left\">\n                      {format(new Date(`${s.year}-${\n                        (`${s.month}`).length === 1\n                          ? `0${s.month}`\n                          : s.month\n                      }-01 00:00:00`), 'MMM yyyy')}\n                    </Text>\n                    <Text variant=\"small\" textAlign=\"left\">\n                      {t('account_statements.generatedOn')}\n                      {' '}\n                      {format(new Date(s.createdAt), 'MMM d, yyyy')}\n                    </Text>\n                  </Box>\n                  <Box>\n                    <Link variant=\"primary\" className={style.link} href=\"#\" onClick={() => downloadStatement(s.year, s.month)}>{t('account_statements.view')}</Link>\n                  </Box>\n                </HStack>\n              ))}\n\n          </Box>\n        </Box>\n      </MiniBox>\n    </Box>\n  );\n};\n\nexport default AccountStatement;\n"],"names":["t","useTranslation","dispatch","useAppAsyncDispatch","_useDrawer","useDrawer","data","goBack","statements","useAppSelector","store","account","shallowEqual","useEffect","id","fetchStatements","downloadStatement","useCallback","year","month","getStatementByMonth","then","blob","url","window","URL","createObjectURL","a","document","createElement","href","download","concat","click","remove","catch","apiErrorHandler","_jsx","Box","className","style","children","MiniBox","showBack","onBack","heading","width","mb","length","Center","Text","variant","textAlign","map","s","_jsxs","HStack","justify","format","Date","createdAt","Link","onClick"],"sourceRoot":""}