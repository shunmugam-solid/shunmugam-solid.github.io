{"version":3,"file":"static/js/8816.43788af9.chunk.js","mappings":"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","sources":["components/LottieAnimation.tsx","webpack://drop-in-ui/./src/views/crypto/sendCrypto/SendCryptoSuccess/SendCryptoSuccess.module.css?9985","views/crypto/sendCrypto/SendCryptoSuccess/SendCryptoSuccess.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport lottie from 'lottie-web';\nimport Success from '../assets/images/animated/success.json';\nimport Searching from '../assets/images/animated/searching.json';\nimport Failure from '../assets/images/animated/failure.json';\n\nconst nameMap:any = {\n  success: Success,\n  searching: Searching,\n  failure: Failure\n};\n\ntype Props = {\n  name: string;\n}\n\nconst LottieAnimation = ({ name }: Props) => {\n  const animRef = useRef<any>(null);\n\n  useEffect(() => {\n    const animation = lottie.loadAnimation({\n      container: animRef.current,\n      renderer: 'svg',\n      loop: true,\n      autoplay: true,\n      animationData: nameMap[name]\n    });\n\n    return () => {\n      animation.destroy();\n    };\n  }, []);\n\n  return (\n    <div data-testid=\"lottie-animation-wrapper\" style={{ width: '140px', height: '140px', margin: '0 auto' }} ref={animRef} />\n  );\n};\n\nexport default LottieAnimation;\n","// extracted by mini-css-extract-plugin\nexport default {\"details_label\":\"SendCryptoSuccess_details_label__kUwIV\",\"desc\":\"SendCryptoSuccess_desc__9JKSg\",\"details_value\":\"SendCryptoSuccess_details_value__+sCCL\"};","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Box, Button, Heading, Text, HStack, Link\n} from '@chakra-ui/react';\nimport { shallowEqual } from 'react-redux';\nimport MiniBox from '../../../../layout/MiniBox';\nimport style from './SendCryptoSuccess.module.css';\nimport { useAppSelector } from '../../../../hooks/store';\nimport LottieAnimation from '../../../../components/LottieAnimation';\nimport { sendMessage } from '../../../../utils/sdk';\nimport { CRYPTO } from '../../../../const/messages';\n\nconst SendCryptoSuccess = () => {\n  const { t } = useTranslation();\n\n  const {\n    selectedAccount: cryptoAccount, sendResponseData\n  } = useAppSelector((store) => store.crypto, shallowEqual);\n\n  return (\n    <div className=\"page\">\n      <MiniBox\n        heading={t('crypto_send_details.title')}\n        showBack={false}\n        footer={(\n          <Button\n            width=\"100%\"\n            variant=\"primary\"\n            onClick={() => {\n              sendMessage(CRYPTO.SEND_SUCCESS);\n            }}\n          >\n            {t('crypto_send_details.ctaTextDone')}\n          </Button>\n          )}\n      >\n        <Box width=\"100%\">\n          <LottieAnimation name=\"success\" />\n          <Heading data-testid=\"status-title\" variant=\"primary\" textAlign=\"center\">\n            {t('crypto_send_success.title', {\n              value: `${sendResponseData?.quantity} ${sendResponseData?.cryptoCurrency}`\n            })}\n          </Heading>\n          <Text className={`${style.desc} text-light`} variant=\"regular\" textAlign=\"center\">\n            {t('crypto_send_details.anyQuestions')}\n            {' '}\n            <Link textDecoration=\"underline\" href=\"mailto:chat@solidfi.com\" style={{ color: 'inherit', textDecoration: 'underline' }} isExternal>chat@solidfi.com</Link>\n          </Text>\n          <Box className={style.details_label}>\n            <HStack className={style.details_value}>\n              <Text w=\"50%\" variant=\"regular\" textAlign=\"left\" className=\"text-light\">{t('crypto_send_details.source')}</Text>\n              <Text w=\"50%\" variant=\"regular\" textAlign=\"left\">{cryptoAccount?.label}</Text>\n            </HStack>\n            <HStack className={style.details_value}>\n              <Text w=\"50%\" variant=\"regular\" textAlign=\"left\" className=\"text-light\">{t('crypto_send_details.destination')}</Text>\n              <Text w=\"50%\" variant=\"regular\" textAlign=\"left\">{sendResponseData?.destinationCryptoAddress}</Text>\n            </HStack>\n            <HStack className={style.details_value}>\n              <Text w=\"50%\" variant=\"regular\" textAlign=\"left\" className=\"text-light\">{t('crypto_send_details.transactionId')}</Text>\n              <Text w=\"50%\" variant=\"regular\" textAlign=\"left\">{sendResponseData?.id}</Text>\n            </HStack>\n            <HStack className={style.details_value}>\n              <Text w=\"50%\" variant=\"regular\" textAlign=\"left\" className=\"text-light\">{t('crypto_send_details.quantity')}</Text>\n              <Text w=\"50%\" variant=\"regular\" textAlign=\"left\">{sendResponseData?.quantity}</Text>\n            </HStack>\n            {sendResponseData?.amount.length !== 0\n              ? (\n                <HStack className={style.details_value}>\n                  <Text w=\"50%\" variant=\"regular\" textAlign=\"left\" className=\"text-light\">{t('crypto_send_details.amount')}</Text>\n                  <Text w=\"50%\" variant=\"regular\" textAlign=\"left\">\n                    $\n                    {' '}\n                    {sendResponseData?.amount}\n                  </Text>\n                </HStack>\n              ) : null }\n            <HStack className={style.details_value}>\n              <Text w=\"50%\" variant=\"regular\" textAlign=\"left\" className=\"text-light\">{t('crypto_send_details.fee')}</Text>\n              <Text w=\"50%\" variant=\"regular\" textAlign=\"left\">{sendResponseData?.estimatedGasFee}</Text>\n            </HStack>\n            <HStack className={style.details_value}>\n              <Text w=\"50%\" variant=\"regular\" textAlign=\"left\" className=\"text-light\">{t('crypto_send_details.description')}</Text>\n              <Text w=\"50%\" variant=\"regular\" textAlign=\"left\">{sendResponseData?.description}</Text>\n            </HStack>\n\n          </Box>\n        </Box>\n        <Text variant=\"small\" whiteSpace=\"pre-line\" mt=\"auto\" pt=\"24px\" fontSize=\"9px\" textAlign=\"left\">{t('crypto_send_details.poweredBy')}</Text>\n      </MiniBox>\n    </div>\n  );\n};\n\nexport default SendCryptoSuccess;\n"],"names":["nameMap","success","Success","searching","Searching","failure","Failure","_ref","name","animRef","useRef","useEffect","animation","lottie","container","current","renderer","loop","autoplay","animationData","destroy","_jsx","style","width","height","margin","ref","t","useTranslation","_useAppSelector","useAppSelector","store","crypto","shallowEqual","cryptoAccount","selectedAccount","sendResponseData","className","children","_jsxs","MiniBox","heading","showBack","footer","Button","variant","onClick","sendMessage","CRYPTO","SEND_SUCCESS","Box","LottieAnimation","Heading","textAlign","value","concat","quantity","cryptoCurrency","Text","Link","textDecoration","href","color","isExternal","HStack","w","label","destinationCryptoAddress","id","amount","length","estimatedGasFee","description","whiteSpace","mt","pt","fontSize"],"sourceRoot":""}