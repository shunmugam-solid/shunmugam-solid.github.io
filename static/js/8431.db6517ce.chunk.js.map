{"version":3,"file":"static/js/8431.db6517ce.chunk.js","mappings":"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","sources":["views/payments/DomesticWire/DomesticWireAddress.tsx"],"sourcesContent":["import React, { useCallback, useMemo, useState } from 'react';\nimport {\n  Box, Button, FormControl, FormLabel, Input\n} from '@chakra-ui/react';\nimport { shallowEqual } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { useAppAsyncDispatch, useAppSelector } from '../../../hooks/store';\nimport MiniBox from '../../../layout/MiniBox';\nimport AddressSearch from '../../../components/AddressSearch';\nimport { updateSelectedContact } from '../../../store/actionCreators/contact';\nimport { useDrawer } from '../../../hooks/drawer';\n\nconst DomesticWirePayment = React.lazy(() => import('./DomesticWirePayment'));\n\nconst DomesticWireAddress:React.FC = () => {\n  const { t } = useTranslation();\n  const dispatch = useAppAsyncDispatch();\n  const { open } = useDrawer();\n\n  const contactDetails = useAppSelector((store) => store.contact.selectedContact, shallowEqual);\n  const [localContactDetails, updateContactData] = useState({\n    name: contactDetails?.name || '',\n    address: contactDetails?.wire?.domestic?.address || {\n      line1: '',\n      line2: '',\n      city: '',\n      state: '',\n      country: 'US',\n      postalCode: '',\n      addressType: 'legal',\n    }\n  });\n\n  const isValid = useMemo(() => (\n    localContactDetails\n      && !!localContactDetails.address\n      && !!localContactDetails.address.line1\n      && !!localContactDetails.address.city\n      && !!localContactDetails.address.state\n      && !!localContactDetails.address.country\n      && !!localContactDetails.address.postalCode\n      && localContactDetails.address.line1.length !== 0\n      && localContactDetails.address.city.length !== 0\n      && localContactDetails.address.state.length !== 0\n      && localContactDetails.address.country.length !== 0\n      && localContactDetails.address.postalCode.length !== 0\n  ), [localContactDetails]);\n\n  const submit = useCallback(() => {\n    if (contactDetails?.id) {\n      dispatch(updateSelectedContact({\n        ...contactDetails,\n        wire: {\n          ...contactDetails.wire,\n          domestic: {\n            ...contactDetails.wire?.domestic,\n            address: localContactDetails.address\n          }\n        }\n      }));\n\n      open(DomesticWirePayment);\n    }\n  }, [localContactDetails, contactDetails]);\n\n  return (\n    <div className=\"page\">\n      <form onSubmit={(e) => {\n        e.preventDefault();\n        submit();\n      }}\n      >\n        <MiniBox\n          heading={t('payments_domestic_wire_address.title')}\n          footer={(\n            <Button width=\"100%\" variant=\"primary\" disabled={!isValid} onClick={submit}>\n              {t('payments_domestic_wire_address.ctaText')}\n            </Button>\n          )}\n        >\n          <Box width=\"100%\" paddingTop=\"15px\">\n\n            <FormControl variant=\"primary\">\n              <FormLabel variant=\"primary\">\n                {t('payments_domestic_wire_address.name')}\n              </FormLabel>\n              <Input\n                variant=\"primary\"\n                value={localContactDetails?.name || ''}\n                onChange={(e) => {\n                  updateContactData({\n                    ...localContactDetails,\n                    name: e.target.value\n                  });\n                }}\n              />\n            </FormControl>\n\n            <FormControl variant=\"primary\">\n              <FormLabel variant=\"primary\">\n                {t('payments_domestic_wire_address.address1')}\n              </FormLabel>\n              <AddressSearch\n                googleApiKey={process.env.REACT_APP_GMAP_KEY}\n                placeholder={t('payments_domestic_wire_address.address1')}\n                address={localContactDetails?.address || undefined}\n                onChange={(address) => {\n                  updateContactData({\n                    ...localContactDetails,\n                    address: {\n                      ...localContactDetails.address,\n                      ...address,\n                      addressType: 'legal',\n                    }\n                  });\n                }}\n              />\n              {/* <Input variant=\"primary\" value=\"\" /> */}\n            </FormControl>\n\n            <FormControl variant=\"primary\">\n              <FormLabel variant=\"primary\">\n                {t('payments_domestic_wire_address.address2')}\n              </FormLabel>\n              <Input\n                variant=\"primary\"\n                placeholder={t('payments_domestic_wire_address.address2')}\n                value={localContactDetails?.address?.line2}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  updateContactData({\n                    ...localContactDetails,\n                    address: {\n                      ...localContactDetails.address,\n                      line2: e.target.value,\n                    }\n                  });\n                }}\n              />\n            </FormControl>\n\n            <FormControl variant=\"primary\">\n              <FormLabel variant=\"primary\">\n                {t('payments_domestic_wire_address.addressCity')}\n              </FormLabel>\n              <Input\n                variant=\"primary\"\n                placeholder={t('payments_domestic_wire_address.addressCity')}\n                value={localContactDetails?.address?.city}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  updateContactData({\n                    ...localContactDetails,\n                    address: {\n                      ...localContactDetails.address,\n                      city: e.target.value,\n                    }\n                  });\n                }}\n              />\n            </FormControl>\n\n            <FormControl variant=\"primary\">\n              <FormLabel variant=\"primary\">\n                {t('payments_domestic_wire_address.addressState')}\n              </FormLabel>\n              <Input\n                variant=\"primary\"\n                value={localContactDetails?.address?.state}\n                placeholder={t('payments_domestic_wire_address.addressState')}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  updateContactData({\n                    ...localContactDetails,\n                    address: {\n                      ...localContactDetails.address,\n                      state: e.target.value,\n                    }\n                  });\n                }}\n              />\n            </FormControl>\n\n            <FormControl variant=\"primary\">\n              <FormLabel variant=\"primary\">\n                {t('payments_domestic_wire_address.addressZipcode')}\n              </FormLabel>\n              <Input\n                variant=\"primary\"\n                placeholder={t('payments_domestic_wire_address.addressZipcode')}\n                value={localContactDetails?.address?.postalCode}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  updateContactData({\n                    ...localContactDetails,\n                    address: {\n                      ...localContactDetails.address,\n                      postalCode: e.target.value,\n                    }\n                  });\n                }}\n              />\n            </FormControl>\n\n          </Box>\n        </MiniBox>\n      </form>\n    </div>\n  );\n};\n\nexport default DomesticWireAddress;\n"],"names":["DomesticWirePayment","React","_contactDetails$wire","_contactDetails$wire$","_localContactDetails$","_localContactDetails$2","_localContactDetails$3","_localContactDetails$4","t","useTranslation","dispatch","useAppAsyncDispatch","open","useDrawer","contactDetails","useAppSelector","store","contact","selectedContact","shallowEqual","_useState","useState","name","address","wire","domestic","line1","line2","city","state","country","postalCode","addressType","_useState2","_slicedToArray","localContactDetails","updateContactData","isValid","useMemo","length","submit","useCallback","_contactDetails$wire2","id","updateSelectedContact","_objectSpread","_jsx","className","children","onSubmit","e","preventDefault","MiniBox","heading","footer","Button","width","variant","disabled","onClick","_jsxs","Box","paddingTop","FormControl","FormLabel","Input","value","onChange","target","AddressSearch","googleApiKey","process","placeholder","undefined"],"sourceRoot":""}