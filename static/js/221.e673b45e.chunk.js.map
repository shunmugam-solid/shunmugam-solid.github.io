{"version":3,"file":"static/js/221.e673b45e.chunk.js","mappings":"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","sources":["components/LottieAnimation.tsx","webpack://drop-in-ui/./src/views/crypto/buyCrypto/BuySuccess/BuySuccess.module.css?5927","views/crypto/buyCrypto/BuySuccess/BuySuccess.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport lottie from 'lottie-web';\nimport Success from '../assets/images/animated/success.json';\nimport Searching from '../assets/images/animated/searching.json';\nimport Failure from '../assets/images/animated/failure.json';\n\nconst nameMap:any = {\n  success: Success,\n  searching: Searching,\n  failure: Failure\n};\n\ntype Props = {\n  name: string;\n}\n\nconst LottieAnimation = ({ name }: Props) => {\n  const animRef = useRef<any>(null);\n\n  useEffect(() => {\n    const animation = lottie.loadAnimation({\n      container: animRef.current,\n      renderer: 'svg',\n      loop: true,\n      autoplay: true,\n      animationData: nameMap[name]\n    });\n\n    return () => {\n      animation.destroy();\n    };\n  }, []);\n\n  return (\n    <div data-testid=\"lottie-animation-wrapper\" style={{ width: '140px', height: '140px', margin: '0 auto' }} ref={animRef} />\n  );\n};\n\nexport default LottieAnimation;\n","// extracted by mini-css-extract-plugin\nexport default {\"details_label\":\"BuySuccess_details_label__zjvVG\",\"desc\":\"BuySuccess_desc__0dFER\",\"details_value\":\"BuySuccess_details_value__AcVXH\"};","import React, { useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Box, Button, Heading, Text, HStack, Link\n} from '@chakra-ui/react';\nimport { shallowEqual } from 'react-redux';\nimport MiniBox from '../../../../layout/MiniBox';\nimport style from './BuySuccess.module.css';\nimport LottieAnimation from '../../../../components/LottieAnimation';\nimport { useAppSelector } from '../../../../hooks/store';\nimport { sendMessage } from '../../../../utils/sdk';\nimport { currencyFormat } from '../../../../utils/general';\nimport { CRYPTO } from '../../../../const/messages';\n\nconst BuySuccess = () => {\n  const { t } = useTranslation();\n\n  const { buyFormData, buyQuoteData } = useAppSelector((store) => store.crypto, shallowEqual);\n  const cryptoAccount = useAppSelector((store) => store.crypto.selectedAccount, shallowEqual);\n\n  const amount = useMemo(() => {\n    if (buyFormData?.type === 'amount') {\n      return `${buyQuoteData?.amount} ${buyQuoteData?.quotedCurrency}`;\n    }\n\n    const price = parseFloat(buyQuoteData?.price || '') * parseFloat(buyQuoteData?.quantity || '');\n    return currencyFormat(price, buyQuoteData?.quotedCurrency || 'USD');\n  }, [buyFormData, buyQuoteData]);\n\n  return (\n    <div className=\"page\">\n      <MiniBox\n        heading={t('crypto_buy_success.title')}\n        showBack={false}\n        footer={(\n          <Button\n            width=\"100%\"\n            variant=\"primary\"\n            onClick={() => {\n              sendMessage(CRYPTO.BUY_SUCCESS);\n            }}\n          >\n            {t('crypto_buy_success.ctaText')}\n          </Button>\n          )}\n      >\n        <Box width=\"100%\">\n          <LottieAnimation name=\"success\" />\n          <Heading data-testid=\"status-title\" variant=\"primary\" textAlign=\"center\">\n            {t('crypto_buy_success.youBought')}\n            {' '}\n            {buyQuoteData?.quantity}\n            {' '}\n            {buyFormData?.type === 'quantity' ? buyQuoteData?.cryptoCurrency : buyQuoteData?.quotedCurrency}\n          </Heading>\n          <Text className={`${style.desc} text-light`} variant=\"regular\" textAlign=\"center\">\n            {t('crypto_buy_success.anyQuestions')}\n            {' '}\n            <Link textDecoration=\"underline\" href=\"mailto:chat@solidfi.com\" style={{ color: 'inherit', textDecoration: 'underline' }} isExternal>chat@solidfi.com</Link>\n          </Text>\n          <Box className={style.details_label}>\n            <HStack className={style.details_value}>\n              <Text w=\"50%\" variant=\"regular\" textAlign=\"left\" className=\"text-light\">{t('crypto_buy_success.source')}</Text>\n              <Text w=\"50%\" variant=\"regular\" textAlign=\"left\">{buyFormData?.selectedAccountLabel}</Text>\n            </HStack>\n            <HStack className={style.details_value}>\n              <Text w=\"50%\" variant=\"regular\" textAlign=\"left\" className=\"text-light\">{t('crypto_buy_success.destination')}</Text>\n              <Text w=\"50%\" variant=\"regular\" textAlign=\"left\">{cryptoAccount?.label}</Text>\n            </HStack>\n            <HStack className={style.details_value}>\n              <Text w=\"50%\" variant=\"regular\" textAlign=\"left\" className=\"text-light\">{t('crypto_buy_success.quantity')}</Text>\n              <Text w=\"50%\" variant=\"regular\" textAlign=\"left\">{buyQuoteData?.quantity}</Text>\n            </HStack>\n            <HStack className={style.details_value}>\n              <Text w=\"50%\" variant=\"regular\" textAlign=\"left\" className=\"text-light\">{t('crypto_buy_success.amount')}</Text>\n              <Text w=\"50%\" variant=\"regular\" textAlign=\"left\">\n                {amount}\n              </Text>\n            </HStack>\n            <HStack className={style.details_value}>\n              <Text w=\"50%\" variant=\"regular\" textAlign=\"left\" className=\"text-light\">{t('crypto_buy_success.exchangeRate')}</Text>\n              <Text w=\"50%\" variant=\"regular\" textAlign=\"left\">{`1 ${buyQuoteData?.cryptoCurrency} = ${buyQuoteData?.price} ${buyQuoteData?.quotedCurrency}`}</Text>\n            </HStack>\n            <HStack className={style.details_value}>\n              <Text w=\"50%\" variant=\"regular\" textAlign=\"left\" className=\"text-light\">{t('crypto_buy_success.description')}</Text>\n              <Text w=\"50%\" variant=\"regular\" textAlign=\"left\">{buyFormData?.description}</Text>\n            </HStack>\n          </Box>\n          <Text variant=\"small\" whiteSpace=\"pre-line\" fontSize=\"9px\" textAlign=\"left\">{t('crypto_buy_success.poweredBy')}</Text>\n        </Box>\n      </MiniBox>\n    </div>\n  );\n};\n\nexport default BuySuccess;\n"],"names":["nameMap","success","Success","searching","Searching","failure","Failure","_ref","name","animRef","useRef","useEffect","animation","lottie","container","current","renderer","loop","autoplay","animationData","destroy","_jsx","style","width","height","margin","ref","t","useTranslation","_useAppSelector","useAppSelector","store","crypto","shallowEqual","buyFormData","buyQuoteData","cryptoAccount","selectedAccount","amount","useMemo","type","concat","quotedCurrency","price","parseFloat","quantity","currencyFormat","className","children","MiniBox","heading","showBack","footer","Button","variant","onClick","sendMessage","CRYPTO","BUY_SUCCESS","_jsxs","Box","LottieAnimation","Heading","textAlign","cryptoCurrency","Text","Link","textDecoration","href","color","isExternal","HStack","w","selectedAccountLabel","label","description","whiteSpace","fontSize"],"sourceRoot":""}