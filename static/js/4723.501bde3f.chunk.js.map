{"version":3,"file":"static/js/4723.501bde3f.chunk.js","mappings":"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","sources":["webpack://drop-in-ui/./src/views/cards/AtmList/AtmList.module.css?8fe5","views/cards/AtmList/AtmList.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"input_field\":\"AtmList_input_field__dcqln\",\"contactList\":\"AtmList_contactList__FzLfD\",\"contactListItem\":\"AtmList_contactListItem__WIOIG\",\"contactListInitials\":\"AtmList_contactListInitials__fNk2B\",\"contactListName\":\"AtmList_contactListName__oVI7Z\",\"locationDetails\":\"AtmList_locationDetails__V-4KN\"};","import React, { useCallback, useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Box, Text, List, ListItem, Center,\n} from '@chakra-ui/react';\nimport { shallowEqual } from 'react-redux';\nimport MiniBox from '../../../layout/MiniBox';\nimport style from './AtmList.module.css';\nimport { loading } from '../../../utils/general';\nimport { useAppAsyncDispatch, useAppSelector } from '../../../hooks/store';\nimport { findNearATM } from '../../../store/middlewares/card';\n\nconst AtmList = () => {\n  const { t } = useTranslation();\n  const [latlong, setLatLong] = useState({\n    latitude: 0,\n    longitude: 0\n  });\n  const dispatch = useAppAsyncDispatch();\n  const [errorMessage, setErrorMsg] = useState('');\n\n  const cardData = useAppSelector((store) => store.card.selectedCard, shallowEqual);\n  const { atmData } = useAppSelector((store) => store.card, shallowEqual);\n\n  const fetchATMs = useCallback(() => {\n    if (cardData) {\n      dispatch(findNearATM({\n        cardId: cardData.id,\n        lat: `${latlong.latitude}`,\n        long: `${latlong.longitude}`\n        // lat: '41.972424',\n        // long: '-87.660225',\n      }));\n    }\n  }, [cardData, latlong]);\n\n  useEffect(() => {\n    if (navigator.geolocation) {\n      loading(true);\n      navigator.geolocation.getCurrentPosition((position) => {\n        if (position.coords.latitude && position.coords.longitude) {\n          const { latitude, longitude } = position.coords;\n          setLatLong({\n            latitude,\n            longitude\n          });\n          setErrorMsg('');\n          loading(false);\n          setTimeout(() => {\n            fetchATMs();\n          }, 0);\n        }\n      }, () => {\n        setErrorMsg(t('atm_list.locationPermission'));\n        loading(false);\n      });\n    } else {\n      setErrorMsg(t('atm_list.locationNotSupported'));\n      loading(false);\n    }\n  }, []);\n\n  return (\n    <div className=\"page\">\n      <MiniBox\n        heading={t('atm_list.title')}\n      >\n        <Box width=\"100%\" data-total={atmData.total}>\n          {errorMessage !== '' ? <Text variant=\"regular\">{errorMessage}</Text>\n            : atmData.total === 0 ? <Text variant=\"regular\">{t('atm_list.noData')}</Text>\n              : (\n                <List className={style.contactList}>\n                  {atmData.data.map((a, i) => (\n                  // eslint-disable-next-line react/no-array-index-key\n                    <ListItem key={`atm-${a.name}-${i}`} className={style.contactListItem}>\n                      <Center className={style.contactListInitials}>\n                        <Text variant=\"small\" color=\"#141414\">\n                          {a.name.charAt(0)}\n                          {a.name.charAt(1)}\n                        </Text>\n                      </Center>\n                      <Box className={style.locationDetails}>\n                        <Text variant=\"regular\" className={style.contactListName}>\n                          {a.name}\n                        </Text>\n                        <Text variant=\"regular\">\n                          {a.description}\n                        </Text>\n                      </Box>\n                    </ListItem>\n                  ))}\n                </List>\n              ) }\n        </Box>\n      </MiniBox>\n    </div>\n  );\n};\n\nexport default AtmList;\n"],"names":["t","useTranslation","_useState","useState","latitude","longitude","_useState2","_slicedToArray","latlong","setLatLong","dispatch","useAppAsyncDispatch","_useState3","_useState4","errorMessage","setErrorMsg","cardData","useAppSelector","store","card","selectedCard","shallowEqual","atmData","fetchATMs","useCallback","findNearATM","cardId","id","lat","concat","long","useEffect","navigator","geolocation","loading","getCurrentPosition","position","coords","_position$coords","setTimeout","_jsx","className","children","MiniBox","heading","Box","width","total","Text","variant","List","style","data","map","a","i","_jsxs","ListItem","Center","color","name","charAt","description"],"sourceRoot":""}