{"version":3,"file":"static/js/4713.422f3638.chunk.js","mappings":"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","sources":["components/LottieAnimation.tsx","webpack://drop-in-ui/./src/components/Status.module.css?5d70","components/Status.tsx","webpack://drop-in-ui/./src/views/pullfunds/PullFundsSuccess/PullFundsSuccess.module.css?e72e","views/pullfunds/PullFundsSuccess/PullFundsSuccess.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport lottie from 'lottie-web';\nimport Success from '../assets/images/animated/success.json';\nimport Searching from '../assets/images/animated/searching.json';\nimport Failure from '../assets/images/animated/failure.json';\n\nconst nameMap:any = {\n  success: Success,\n  searching: Searching,\n  failure: Failure\n};\n\ntype Props = {\n  name: string;\n}\n\nconst LottieAnimation = ({ name }: Props) => {\n  const animRef = useRef<any>(null);\n\n  useEffect(() => {\n    const animation = lottie.loadAnimation({\n      container: animRef.current,\n      renderer: 'svg',\n      loop: true,\n      autoplay: true,\n      animationData: nameMap[name]\n    });\n\n    return () => {\n      animation.destroy();\n    };\n  }, []);\n\n  return (\n    <div data-testid=\"lottie-animation-wrapper\" style={{ width: '140px', height: '140px', margin: '0 auto' }} ref={animRef} />\n  );\n};\n\nexport default LottieAnimation;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Status_container__TVrXy\",\"containerInner\":\"Status_containerInner__tScEb\",\"footerContainer\":\"Status_footerContainer__+ehXm\"};","import React from 'react';\nimport {\n  Box, Button, Flex, Heading, Text\n} from '@chakra-ui/react';\nimport LottieAnimation from './LottieAnimation';\nimport style from './Status.module.css';\n\ntype Props = {\n    status: 'success' | 'searching' | 'failure';\n    title: string;\n    description?: string;\n    ctaText?: string;\n    children?: React.ReactNode;\n    footer?: React.ReactNode;\n    showFooter?: boolean;\n    showCTA?: boolean;\n    onNext?: () => void;\n}\n\nconst Status:React.FC<Props> = ({\n  ctaText, title, description, status, children, footer,\n  onNext, showFooter = true, showCTA = true\n}) => (\n  <Flex className={style.container}>\n    <Flex className={style.containerInner}>\n      <Box w=\"100%\">\n        <LottieAnimation name={status} />\n        <Heading mt={20} data-testid=\"status-title\" variant=\"primary\">{title}</Heading>\n        {description ? (\n          <Text data-testid=\"status-description\" variant=\"regular\" marginTop=\"10px\" className=\"text-light\">\n            {description}\n          </Text>\n        ) : null }\n        {children}\n      </Box>\n      {footer\n      && <Box>{footer}</Box> }\n      {showFooter\n        ? (\n          <Box className={`default-bg ${style.footerContainer}`}>\n            {showCTA\n              ? <Button data-testid=\"status-action\" variant=\"primary\" width=\"100%\" onClick={onNext}>{ctaText}</Button> : null }\n          </Box>\n        ) : null }\n    </Flex>\n  </Flex>\n);\n\nStatus.defaultProps = {\n  description: undefined\n};\n\nexport default Status;\n","// extracted by mini-css-extract-plugin\nexport default {\"card_info\":\"PullFundsSuccess_card_info__LH1kw\",\"card_info_item\":\"PullFundsSuccess_card_info_item__Ke5DJ\",\"transfer_initiated\":\"PullFundsSuccess_transfer_initiated__9el8H\"};","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Box, Text, HStack\n} from '@chakra-ui/react';\nimport { useParams } from 'react-router-dom';\nimport { shallowEqual } from 'react-redux';\nimport MiniBox from '../../../layout/MiniBox';\nimport Status from '../../../components/Status';\nimport style from './PullFundsSuccess.module.css';\nimport { useAppAsyncDispatch, useAppSelector } from '../../../hooks/store';\nimport { currencyFormat } from '../../../utils/general';\nimport { updatePullFundData } from '../../../store/actionCreators/account';\nimport { sendMessage } from '../../../utils/sdk';\nimport { useModuleData } from '../../../hooks/module';\nimport { MOVE_FUNDS } from '../../../const/messages';\nimport { useDrawer } from '../../../hooks/drawer';\n\n/**\n * Pull funds success screen\n * @returns {React.ReactNode}\n */\nfunction PullFundsSuccess() {\n  const { t } = useTranslation();\n  const { close } = useDrawer();\n  const { startScreen } = useModuleData();\n  const dispatch = useAppAsyncDispatch();\n\n  const { option } = useParams<{option: 'bank' | 'card'}>();\n\n  const { selectedAccount: account, pullFundData } = useAppSelector((store) => store.account, shallowEqual);\n\n  return (\n    <div className=\"page\">\n      <MiniBox>\n        <Status\n          status=\"success\"\n          title={`${currencyFormat(pullFundData?.amount || 0)} Transferred`}\n          ctaText={t('pull_funds_success.ctaText')}\n          onNext={() => {\n            if (startScreen) {\n              sendMessage(MOVE_FUNDS.PULL_FUND_SUCCESS, {\n                from: option || 'bank'\n              });\n            } else {\n              dispatch(updatePullFundData(null));\n              close();\n            }\n          }}\n        >\n          <Box>\n            <Text variant=\"regular\" className={`${style.transfer_initiated} text-light`} pt=\"16px\">{t('pull_funds_success.info')}</Text>\n            <Box className={style.card_info}>\n              <HStack className={style.card_info_item}>\n                <Text w=\"50%\" variant=\"regular\" className=\"text-light\" textAlign=\"left\">{t('pull_funds_success.source')}</Text>\n                <Text w=\"50%\" variant=\"regular\" textAlign=\"left\">{pullFundData?.label}</Text>\n              </HStack>\n              <HStack className={style.card_info_item}>\n                <Text w=\"50%\" variant=\"regular\" className=\"text-light\" textAlign=\"left\">{t('pull_funds_success.destination')}</Text>\n                <Text w=\"50%\" variant=\"regular\" textAlign=\"left\">\n                  {account?.label}\n                  {' '}\n                </Text>\n              </HStack>\n              <HStack className={style.card_info_item}>\n                <Text w=\"50%\" variant=\"regular\" className=\"text-light\" textAlign=\"left\">{t('pull_funds_success.description')}</Text>\n                <Text w=\"50%\" variant=\"regular\" textAlign=\"left\">{pullFundData?.description}</Text>\n              </HStack>\n            </Box>\n          </Box>\n        </Status>\n      </MiniBox>\n    </div>\n  );\n}\n\nexport default PullFundsSuccess;\n"],"names":["nameMap","success","Success","searching","Searching","failure","Failure","_ref","name","animRef","useRef","useEffect","animation","lottie","container","current","renderer","loop","autoplay","animationData","destroy","_jsx","style","width","height","margin","ref","Status","ctaText","title","description","status","children","footer","onNext","_ref$showFooter","showFooter","_ref$showCTA","showCTA","Flex","className","_jsxs","Box","w","LottieAnimation","Heading","mt","variant","Text","marginTop","concat","Button","onClick","defaultProps","undefined","t","useTranslation","close","useDrawer","startScreen","useModuleData","dispatch","useAppAsyncDispatch","option","useParams","_useAppSelector","useAppSelector","store","account","shallowEqual","selectedAccount","pullFundData","MiniBox","currencyFormat","amount","sendMessage","MOVE_FUNDS","PULL_FUND_SUCCESS","from","updatePullFundData","pt","HStack","textAlign","label"],"sourceRoot":""}