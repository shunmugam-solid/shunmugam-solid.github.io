{"version":3,"file":"static/js/6392.df0a5c36.chunk.js","mappings":"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","sources":["components/CurrencyInput.tsx","store/actionCreators/payment.ts","store/middlewares/payment.ts","views/payments/Intrabank/Intrabank.tsx"],"sourcesContent":["import React, { useLayoutEffect, useRef } from 'react';\nimport { Input } from '@chakra-ui/react';\nimport Inputmask from 'inputmask';\n\ntype Props = {\n    value: string;\n    placeholder?: string;\n    prefix?: string;\n    digits?: number;\n    onChange: (v: string) => void;\n}\n\nconst CurrencyInput:React.FC<Props> = ({\n  onChange, value, placeholder, prefix, digits\n}) => {\n  const input = useRef(null);\n\n  useLayoutEffect(() => {\n    if (input.current) {\n      Inputmask('currency', {\n        autoUnmask: true,\n        allowMinus: false,\n        prefix: prefix ?? '$ ',\n        placeholder,\n        rightAlign: false,\n        digits,\n        numericInput: true,\n        // positionCaretOnClick: 'ignore'\n      }).mask(input.current);\n    }\n  }, [prefix, digits, placeholder]);\n\n  return (\n  // eslint-disable-next-line react/jsx-props-no-spreading\n    <Input\n      data-testid=\"currency-input\"\n      variant=\"primary\"\n      placeholder={placeholder || '$ 0.00'}\n      ref={input}\n      onChange={(e:any) => {\n        const v = e.target.value;\n        onChange(v);\n      }}\n      value={value}\n    />\n  );\n};\n\nexport default CurrencyInput;\n","/* eslint-disable import/prefer-default-export */\nimport { actionCreator } from '..';\nimport { paymentResponse } from '../../types/payment';\nimport { UPDATE_PAYMENT_RESPONSE } from '../actionTypes/payment';\n\n/**\n * update core state\n * @param {*} payload\n * @returns {Action<string, any>}\n */\nexport const updatePaymentResponse: actionCreator<paymentResponse> = (payload) => ({\n  type: UPDATE_PAYMENT_RESPONSE,\n  payload\n});\n","import http from '../../utils/http';\nimport { loading } from '../../utils/general';\nimport { AsyncAppAction } from '..';\nimport { updatePaymentResponse } from '../actionCreators/payment';\nimport { paymentResponse } from '../../types/payment';\n\n/**\n * intrabank\n * @param payload\n * @returns\n */\nexport const intrabankPay = (payload: {\n    accountId: string,\n    contactId: string,\n    amount: string,\n    description: string\n  }): AsyncAppAction<paymentResponse> => (dispatch) => new Promise((resolve, reject) => {\n  /* */\n  loading(true);\n  http\n    .post<paymentResponse>('v1/send/intrabank', payload)\n    .then(({ data }) => {\n      dispatch(updatePaymentResponse(data));\n      resolve(data);\n    })\n    .catch(reject)\n    .finally(() => {\n      loading(false);\n    });\n});\n\n/**\n * ach\n * @param payload\n * @returns\n */\nexport const achPay = (payload: {\n  accountId: string,\n  contactId: string,\n  amount: string,\n  description: string\n}): AsyncAppAction<paymentResponse> => (dispatch) => new Promise((resolve, reject) => {\n/* */\n  loading(true);\n  http\n    .post<paymentResponse>('v1/send/ach', payload)\n    .then(({ data }) => {\n      dispatch(updatePaymentResponse(data));\n      resolve(data);\n    })\n    .catch(reject)\n    .finally(() => {\n      loading(false);\n    });\n});\n\n/**\n * wire\n * @param payload\n * @returns\n */\nexport const wirePay = (payload: {\n  accountId: string,\n  contactId: string,\n  amount: string,\n  description: string\n  type: 'domestic' | 'international'\n}): AsyncAppAction<paymentResponse> => (dispatch) => new Promise((resolve, reject) => {\n/* */\n  loading(true);\n  http\n    .post<paymentResponse>('v1/send/wire', payload)\n    .then(({ data }) => {\n      dispatch(updatePaymentResponse(data));\n      resolve(data);\n    })\n    .catch(reject)\n    .finally(() => {\n      loading(false);\n    });\n});\n\n/**\n * send a card\n * @param payload\n * @returns\n */\nexport const sendCardPay = (payload: {\n  accountId: string,\n  contactId: string,\n  amount: string,\n  description: string\n  type: 'virtual'\n}): AsyncAppAction<paymentResponse> => (dispatch) => new Promise((resolve, reject) => {\n/* */\n  loading(true);\n  http\n    .post<paymentResponse>('v1/send/card', payload)\n    .then(({ data }) => {\n      dispatch(updatePaymentResponse(data));\n      resolve(data);\n    })\n    .catch(reject)\n    .finally(() => {\n      loading(false);\n    });\n});\n\n/**\n * ach\n * @param payload\n * @returns\n */\nexport const checkPay = (payload: {\n  accountId: string,\n  contactId: string,\n  amount: string,\n  type: 'physical',\n  description: string\n}): AsyncAppAction<paymentResponse> => (dispatch) => new Promise((resolve, reject) => {\n/* */\n  loading(true);\n  http\n    .post<paymentResponse>('v1/send/check', payload)\n    .then(({ data }) => {\n      dispatch(updatePaymentResponse(data));\n      resolve(data);\n    })\n    .catch(reject)\n    .finally(() => {\n      loading(false);\n    });\n});\n","import React, { useCallback, useMemo, useState } from 'react';\nimport {\n  Box, Button, FormControl, FormLabel, Input\n} from '@chakra-ui/react';\nimport { useTranslation } from 'react-i18next';\nimport { shallowEqual } from 'react-redux';\nimport MiniBox from '../../../layout/MiniBox';\nimport { useAppAsyncDispatch, useAppSelector } from '../../../hooks/store';\nimport { intrabankPay } from '../../../store/middlewares/payment';\nimport { updateContact } from '../../../store/middlewares/contact';\nimport { apiErrorHandler } from '../../../utils/general';\nimport CurrencyInput from '../../../components/CurrencyInput';\nimport { useDrawer } from '../../../hooks/drawer';\n\nconst PaymentSuccess = React.lazy(() => import('../PaymentSuccess/PaymentSuccess'));\n\nconst Intrabank:React.FC = () => {\n  const { t } = useTranslation();\n  const dispatch = useAppAsyncDispatch();\n  const { open } = useDrawer();\n\n  const accountDetails = useAppSelector((store) => store.account.selectedAccount, shallowEqual);\n  const contactDetails = useAppSelector((store) => store.contact.selectedContact, shallowEqual);\n  const [localContactDetails, updateContactData] = useState({\n    name: contactDetails?.name || '',\n    accountNumber: contactDetails?.intrabank?.accountNumber || ''\n  });\n\n  const [paymentData, updatePaymentData] = useState({\n    amount: '',\n    description: '',\n    contactId: contactDetails?.id || '',\n    accountId: accountDetails?.id || ''\n  });\n\n  const isValid = useMemo(() => localContactDetails.name.length !== 0 && localContactDetails.accountNumber.length !== 0 && paymentData.amount.length !== 0 && parseFloat(paymentData.amount) >= 0.01 && paymentData.description.length !== 0, [localContactDetails, paymentData]);\n\n  const onSubmit = useCallback(() => {\n    if (contactDetails?.id && isValid) {\n      dispatch(updateContact(contactDetails.id, {\n        accountId: contactDetails.accountId,\n        name: localContactDetails.name,\n        intrabank: {\n          accountNumber: localContactDetails.accountNumber\n        }\n      })).then(() => {\n        dispatch(intrabankPay(paymentData))\n          .then(() => {\n            open(PaymentSuccess);\n          }).catch(apiErrorHandler);\n      }).catch(apiErrorHandler);\n    }\n  }, [isValid, paymentData, localContactDetails]);\n\n  return (\n    <div className=\"page\">\n      <MiniBox\n        heading={t('payments_intrabank.title')}\n        footer={(\n          <Button width=\"100%\" variant=\"primary\" disabled={!isValid} onClick={onSubmit}>\n            {t('payments_intrabank.ctaText')}\n          </Button>\n        )}\n      >\n        <Box width=\"100%\" paddingTop=\"15px\">\n          <FormControl variant=\"primary\">\n            <FormLabel variant=\"primary\">\n              {t('payments_intrabank.name')}\n            </FormLabel>\n            <Input\n              variant=\"primary\"\n              value={localContactDetails?.name || ''}\n              onChange={(e) => {\n                updateContactData({\n                  ...localContactDetails,\n                  name: e.target.value\n                });\n              }}\n            />\n          </FormControl>\n          <FormControl variant=\"primary\">\n            <FormLabel variant=\"primary\">\n              {t('payments_intrabank.accountNumber')}\n            </FormLabel>\n            <Input\n              variant=\"primary\"\n              value={localContactDetails.accountNumber}\n              onChange={(e) => {\n                updateContactData({\n                  ...localContactDetails,\n                  accountNumber: e.target.value\n\n                });\n              }}\n            />\n          </FormControl>\n\n          <FormControl variant=\"primary\">\n            <FormLabel variant=\"primary\">\n              {t('payments_intrabank.amount')}\n            </FormLabel>\n            <CurrencyInput\n              value={paymentData.amount}\n              onChange={(value) => {\n                updatePaymentData({\n                  ...paymentData,\n                  amount: value || ''\n                });\n              }}\n            />\n          </FormControl>\n\n          <FormControl variant=\"primary\">\n            <FormLabel variant=\"primary\">\n              {t('payments_intrabank.purpose')}\n            </FormLabel>\n            <Input\n              variant=\"primary\"\n              value={paymentData.description}\n              onChange={(e) => {\n                updatePaymentData({\n                  ...paymentData,\n                  description: e.target.value\n                });\n              }}\n            />\n          </FormControl>\n        </Box>\n      </MiniBox>\n    </div>\n  );\n};\n\nexport default Intrabank;\n"],"names":["_ref","onChange","value","placeholder","prefix","digits","input","useRef","useLayoutEffect","current","Inputmask","autoUnmask","allowMinus","rightAlign","numericInput","mask","_jsx","Input","variant","ref","e","v","target","updatePaymentResponse","payload","type","UPDATE_PAYMENT_RESPONSE","intrabankPay","dispatch","Promise","resolve","reject","loading","http","post","then","data","catch","finally","achPay","_ref2","wirePay","_ref3","sendCardPay","_ref4","checkPay","_ref5","PaymentSuccess","React","_contactDetails$intra","t","useTranslation","useAppAsyncDispatch","open","useDrawer","accountDetails","useAppSelector","store","account","selectedAccount","shallowEqual","contactDetails","contact","selectedContact","_useState","useState","name","accountNumber","intrabank","_useState2","_slicedToArray","localContactDetails","updateContactData","_useState3","amount","description","contactId","id","accountId","_useState4","paymentData","updatePaymentData","isValid","useMemo","length","parseFloat","onSubmit","useCallback","updateContact","apiErrorHandler","className","children","MiniBox","heading","footer","Button","width","disabled","onClick","_jsxs","Box","paddingTop","FormControl","FormLabel","_objectSpread","CurrencyInput"],"sourceRoot":""}