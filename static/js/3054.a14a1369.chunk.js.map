{"version":3,"file":"static/js/3054.a14a1369.chunk.js","mappings":"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","sources":["components/LottieAnimation.tsx","webpack://drop-in-ui/./src/components/Status.module.css?5d70","components/Status.tsx","utils/events.ts","webpack://drop-in-ui/./src/views/cards/CardCreation/CardCreated/CardCreated.module.css?b002","views/cards/CardCreation/CardCreated/CardCreated.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport lottie from 'lottie-web';\nimport Success from '../assets/images/animated/success.json';\nimport Searching from '../assets/images/animated/searching.json';\nimport Failure from '../assets/images/animated/failure.json';\n\nconst nameMap:any = {\n  success: Success,\n  searching: Searching,\n  failure: Failure\n};\n\ntype Props = {\n  name: string;\n}\n\nconst LottieAnimation = ({ name }: Props) => {\n  const animRef = useRef<any>(null);\n\n  useEffect(() => {\n    const animation = lottie.loadAnimation({\n      container: animRef.current,\n      renderer: 'svg',\n      loop: true,\n      autoplay: true,\n      animationData: nameMap[name]\n    });\n\n    return () => {\n      animation.destroy();\n    };\n  }, []);\n\n  return (\n    <div data-testid=\"lottie-animation-wrapper\" style={{ width: '140px', height: '140px', margin: '0 auto' }} ref={animRef} />\n  );\n};\n\nexport default LottieAnimation;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Status_container__TVrXy\",\"containerInner\":\"Status_containerInner__tScEb\",\"footerContainer\":\"Status_footerContainer__+ehXm\"};","import React from 'react';\nimport {\n  Box, Button, Flex, Heading, Text\n} from '@chakra-ui/react';\nimport LottieAnimation from './LottieAnimation';\nimport style from './Status.module.css';\n\ntype Props = {\n    status: 'success' | 'searching' | 'failure';\n    title: string;\n    description?: string;\n    ctaText?: string;\n    children?: React.ReactNode;\n    footer?: React.ReactNode;\n    showFooter?: boolean;\n    showCTA?: boolean;\n    onNext?: () => void;\n}\n\nconst Status:React.FC<Props> = ({\n  ctaText, title, description, status, children, footer,\n  onNext, showFooter = true, showCTA = true\n}) => (\n  <Flex className={style.container}>\n    <Flex className={style.containerInner}>\n      <Box w=\"100%\">\n        <LottieAnimation name={status} />\n        <Heading mt={10} data-testid=\"status-title\" variant=\"primary\">{title}</Heading>\n        {description ? (\n          <Text data-testid=\"status-description\" variant=\"regular\" marginTop=\"10px\" className=\"text-light\">\n            {description}\n          </Text>\n        ) : null }\n        {children}\n      </Box>\n      {footer\n      && <Box>{footer}</Box> }\n      {showFooter\n        ? (\n          <Box className={`default-bg ${style.footerContainer}`}>\n            {showCTA\n              ? <Button data-testid=\"status-action\" variant=\"primary\" width=\"100%\" onClick={onNext}>{ctaText}</Button> : null }\n          </Box>\n        ) : null }\n    </Flex>\n  </Flex>\n);\n\nStatus.defaultProps = {\n  description: undefined\n};\n\nexport default Status;\n","/* eslint-disable no-underscore-dangle */\n\nexport enum Events {\n    LOGOUT = 'logout',\n    CARD_REFRESH = 'card_refresh',\n    TRANSACTION_REFRESH = 'transaction_refresh',\n    CONTACT_REFRESH = 'contact_refresh',\n}\n\ntype callbackFn = (data: any) => any;\n\ntype Emitter = {\n    _events: {\n        [key: string]: Array<callbackFn>\n    },\n    dispatch: (event: Events, data: any) => void\n    subscribe: (event: Events, cb: callbackFn) => () => void;\n    unsubscribe: (event: Events, index?: number) => void;\n}\n\nexport const eventEmitter:Emitter = {\n  /**\n     * events store\n     */\n  _events: {},\n  /**\n   * dispatcher\n   * @param event\n   * @param data\n   * @returns\n   */\n  dispatch(event, data) {\n    if (!this._events[event]) return;\n    this._events[event].forEach((callback: any) => callback(data));\n  },\n  /**\n   * subscriber\n   * @param event\n   * @param callback\n   */\n  subscribe(event, callback) {\n    if (!this._events[event]) this._events[event] = [];\n    const length = this._events[event].push(callback);\n    return () => {\n      this.unsubscribe(event, length - 1);\n    };\n  },\n  /**\n   * unsubscriber\n   * @param event\n   * @returns\n   */\n  unsubscribe(event, index?) {\n    if (!this._events[event]) return;\n    if (index !== undefined && this._events[event][index]) {\n      this._events[event].splice(index, 1, () => {});\n    } else {\n      delete this._events[event];\n    }\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"card_info\":\"CardCreated_card_info__Y6nAF\",\"card_info_item\":\"CardCreated_card_info_item__xOCUA\"};","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Box, Text, HStack\n} from '@chakra-ui/react';\nimport { shallowEqual } from 'react-redux';\nimport MiniBox from '../../../../layout/MiniBox';\nimport Status from '../../../../components/Status';\nimport style from './CardCreated.module.css';\nimport { useAppSelector } from '../../../../hooks/store';\nimport { camel2title } from '../../../../utils/general';\nimport { useDrawer } from '../../../../hooks/drawer';\nimport { eventEmitter, Events } from '../../../../utils/events';\n\nfunction CardCreated() {\n  const { t } = useTranslation();\n  const { close } = useDrawer();\n\n  const cardPayloadData = useAppSelector((store) => store.card.selectedCard, shallowEqual);\n  const replaceCardId = useAppSelector((store) => store.card.replaceCardId);\n\n  return (\n    <div className=\"page\">\n      <MiniBox>\n        <Status\n          status=\"success\"\n          title={t(!replaceCardId ? (cardPayloadData?.cardType === 'physical' ? 'create_card_success.title_physical' : 'create_card_success.title_virtual') : 'create_card_success.replace_title')}\n          ctaText={t('create_card_success.ctaText')}\n          onNext={() => {\n            close();\n\n            eventEmitter.dispatch(Events.CARD_REFRESH, {});\n          }}\n        >\n          <Box className={style.card_info}>\n            <HStack className={style.card_info_item}>\n              <Text w=\"50%\" variant=\"info\">{t('create_card_success.cardLabel')}</Text>\n              <Text w=\"50%\" variant=\"regular\">{cardPayloadData?.label}</Text>\n            </HStack>\n            <HStack className={style.card_info_item}>\n              <Text w=\"50%\" variant=\"info\">{t('create_card_success.spendingLimit')}</Text>\n              <Text w=\"50%\" variant=\"regular\">\n                $\n                {cardPayloadData?.limitAmount}\n                {' '}\n                {cardPayloadData?.limitInterval}\n              </Text>\n            </HStack>\n            <HStack className={style.card_info_item}>\n              <Text w=\"50%\" variant=\"info\">{t('create_card_success.status')}</Text>\n              <Text w=\"50%\" variant=\"regular\">{camel2title(cardPayloadData?.cardStatus || '')}</Text>\n            </HStack>\n          </Box>\n        </Status>\n      </MiniBox>\n    </div>\n  );\n}\n\nexport default CardCreated;\n"],"names":["nameMap","success","Success","searching","Searching","failure","Failure","_ref","name","animRef","useRef","useEffect","animation","lottie","container","current","renderer","loop","autoplay","animationData","destroy","_jsx","style","width","height","margin","ref","Status","ctaText","title","description","status","children","footer","onNext","_ref$showFooter","showFooter","_ref$showCTA","showCTA","Flex","className","_jsxs","Box","w","LottieAnimation","Heading","mt","variant","Text","marginTop","concat","Button","onClick","defaultProps","undefined","Events","eventEmitter","_events","dispatch","event","data","this","forEach","callback","subscribe","_this","length","push","unsubscribe","index","splice","t","useTranslation","close","useDrawer","cardPayloadData","useAppSelector","store","card","selectedCard","shallowEqual","replaceCardId","MiniBox","cardType","CARD_REFRESH","HStack","label","limitAmount","limitInterval","camel2title","cardStatus"],"sourceRoot":""}