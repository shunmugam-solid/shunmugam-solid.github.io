{"version":3,"file":"static/js/9355.b36a9a77.chunk.js","mappings":"2NACA,EAA4Q,yBAA5Q,EAAgW,yC,mECc1VA,EAASC,EAAAA,MAAW,kBAAM,8BAA0B,IACpDC,EAAUD,EAAAA,MAAW,kBAAM,8BAA4B,IAyD7D,EAvDgB,WACd,IAAQE,GAAMC,EAAAA,EAAAA,KAAND,EACRE,GAAgCC,EAAAA,EAAAA,KAAxBC,EAAIF,EAAJE,KAAMC,EAAKH,EAALG,MAAOC,EAAMJ,EAANI,OACfC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,KAAe,SAACC,GAAK,OAAKA,EAAMC,KAAKC,YAAY,GAAEC,EAAAA,KAEpEC,EAAAA,EAAAA,YAAU,WACS,OAAbN,GACFJ,GAEJ,GAAG,CAACI,IAEJ,IAAMO,GAAkBC,EAAAA,EAAAA,cAAY,WAC9BR,GACFF,GAASW,EAAAA,EAAAA,IAAWT,EAASU,GAAI,CAC/BC,WAAYX,EAASW,aACnBC,MAAK,SAACC,GACRf,GAASgB,EAAAA,EAAAA,IAAmBD,GAC9B,IAAGE,MAAMC,EAAAA,GAEb,GAAG,CAAChB,IAEJ,OACEiB,EAAAA,EAAAA,KAACC,EAAAA,GAAG,CAACC,UAAU,OAAMC,UACnBH,EAAAA,EAAAA,KAACI,EAAAA,EAAO,CACNC,OAAQ,WACNzB,GACF,EACA0B,QAAShC,EAAE,kBAAkB6B,UAE7BI,EAAAA,EAAAA,MAACN,EAAAA,GAAG,CAACO,MAAM,OAAML,SAAA,EACfI,EAAAA,EAAAA,MAACN,EAAAA,GAAG,CAACC,UAAWO,EAA8BN,SAAA,EAC5CH,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACC,QAAQ,UAAUC,UAAU,OAAMT,SAAE7B,EAAE,yBAC5C0B,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACG,MAAM,UAAUC,GAAG,MAAMH,QAAQ,UAAUC,UAAU,OAAMT,SAAU,OAARpB,QAAQ,IAARA,GAAAA,EAAUW,UAAYpB,EAAE,eAAiBA,EAAE,eAAgB,UAC9H0B,EAAAA,EAAAA,KAACe,EAAAA,EAAM,CAACC,eAAwB,OAARjC,QAAQ,IAARA,OAAQ,EAARA,EAAUW,UAAWuB,SAAU3B,EAAiB4B,GAAG,OAAOP,QAAQ,UAAUlB,GAAG,sBAGzGc,EAAAA,EAAAA,MAACY,EAAAA,GAAM,CAACjB,UAAS,GAAAkB,OAAKX,EAA6B,KAAAW,OAAIX,GAAiBY,QAAS,kBAAM3C,EAAKP,EAAO,EAACgC,SAAA,EAClGH,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACC,QAAQ,UAAUW,GAAG,OAAOV,UAAU,OAAMT,SAAE7B,EAAE,yBACtD0B,EAAAA,EAAAA,KAACuB,EAAAA,EAAI,CAACC,KAAK,oBAAoBC,KAAM,GAAIvB,UAAU,wBAE7B,cAAf,OAARnB,QAAQ,IAARA,OAAQ,EAARA,EAAU2C,WAEPnB,EAAAA,EAAAA,MAACY,EAAAA,GAAM,CAACjB,UAAS,GAAAkB,OAAKX,EAA6B,KAAAW,OAAIX,GAAiBY,QAAS,kBAAM3C,EAAKL,EAAQ,EAAC8B,SAAA,EACnGH,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACC,QAAQ,UAAUW,GAAG,OAAOV,UAAU,OAAMT,SAAE7B,EAAE,uBACtD0B,EAAAA,EAAAA,KAACuB,EAAAA,EAAI,CAACC,KAAK,oBAAoBC,KAAM,GAAIvB,UAAU,wBAEnD,WAMhB,C","sources":["webpack://drop-in-ui/./src/views/cards/AtmInfo/AtmInfo.module.css?3080","views/cards/AtmInfo/AtmInfo.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"atmInfo__card_image_info\":\"AtmInfo_atmInfo__card_image_info__pHvtR\",\"atmInfo__card_image\":\"AtmInfo_atmInfo__card_image__zSys0\",\"atmInfo__card_details\":\"AtmInfo_atmInfo__card_details__Ai9Hv\",\"atmInfo__action\":\"AtmInfo_atmInfo__action__+5IAq\",\"pointer\":\"AtmInfo_pointer__GNP7l\",\"wallet\":\"AtmInfo_wallet__4IL1N\",\"atmInfo__action_in_list\":\"AtmInfo_atmInfo__action_in_list__kgOLK\"};","import React, { useCallback, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Box, Text, HStack, Switch\n} from '@chakra-ui/react';\nimport { shallowEqual } from 'react-redux';\nimport Icon from '../../../components/Icon';\nimport style from './AtmInfo.module.css';\nimport { useAppAsyncDispatch, useAppSelector } from '../../../hooks/store';\nimport { updateCard } from '../../../store/middlewares/card';\nimport { updateSelectedCard } from '../../../store/actionCreators/card';\nimport { apiErrorHandler } from '../../../utils/general';\nimport MiniBox from '../../../layout/MiniBox';\nimport { useDrawer } from '../../../hooks/drawer';\n\nconst AtmPin = React.lazy(() => import('../AtmPin/AtmPin'));\nconst AtmList = React.lazy(() => import('../AtmList/AtmList'));\n\nconst ATMInfo = () => {\n  const { t } = useTranslation();\n  const { open, close, goBack } = useDrawer();\n  const dispatch = useAppAsyncDispatch();\n  const cardData = useAppSelector((store) => store.card.selectedCard, shallowEqual);\n\n  useEffect(() => {\n    if (cardData === null) {\n      close();\n    }\n  }, [cardData]);\n\n  const togglrATMAccess = useCallback(() => {\n    if (cardData) {\n      dispatch(updateCard(cardData.id, {\n        atmAccess: !cardData.atmAccess\n      })).then((c) => {\n        dispatch(updateSelectedCard(c));\n      }).catch(apiErrorHandler);\n    }\n  }, [cardData]);\n\n  return (\n    <Box className=\"page\">\n      <MiniBox\n        onBack={() => {\n          goBack();\n        }}\n        heading={t('atm_info.title')}\n      >\n        <Box width=\"100%\">\n          <Box className={style.atmInfo__action_in_list}>\n            <Text variant=\"regular\" textAlign=\"left\">{t('atm_info.atmAccess')}</Text>\n            <Text color=\"#2EC193\" pl=\"4px\" variant=\"regular\" textAlign=\"left\">{cardData?.atmAccess ? t('atm_info.on') : t('atm_info.off', 'Off')}</Text>\n            <Switch defaultChecked={cardData?.atmAccess} onChange={togglrATMAccess} ml=\"auto\" variant=\"primary\" id=\"send-by-email\" />\n          </Box>\n\n          <HStack className={`${style.atmInfo__action_in_list} ${style.pointer}`} onClick={() => open(AtmPin)}>\n            <Text variant=\"regular\" mr=\"auto\" textAlign=\"left\">{t('atm_info.changePin')}</Text>\n            <Icon icon=\"Arrow-small-right\" size={12} className=\"svg-light-grey-1\" />\n          </HStack>\n          {cardData?.cardType === 'physical'\n            ? (\n              <HStack className={`${style.atmInfo__action_in_list} ${style.pointer}`} onClick={() => open(AtmList)}>\n                <Text variant=\"regular\" mr=\"auto\" textAlign=\"left\">{t('atm_info.findAtm')}</Text>\n                <Icon icon=\"Arrow-small-right\" size={12} className=\"svg-light-grey-1\" />\n              </HStack>\n            ) : null }\n        </Box>\n\n      </MiniBox>\n    </Box>\n  );\n};\n\nexport default ATMInfo;\n"],"names":["AtmPin","React","AtmList","t","useTranslation","_useDrawer","useDrawer","open","close","goBack","dispatch","useAppAsyncDispatch","cardData","useAppSelector","store","card","selectedCard","shallowEqual","useEffect","togglrATMAccess","useCallback","updateCard","id","atmAccess","then","c","updateSelectedCard","catch","apiErrorHandler","_jsx","Box","className","children","MiniBox","onBack","heading","_jsxs","width","style","Text","variant","textAlign","color","pl","Switch","defaultChecked","onChange","ml","HStack","concat","onClick","mr","Icon","icon","size","cardType"],"sourceRoot":""}