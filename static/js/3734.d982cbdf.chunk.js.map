{"version":3,"file":"static/js/3734.d982cbdf.chunk.js","mappings":"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","sources":["store/actionCreators/business.ts","store/middlewares/business.ts","webpack://drop-in-ui/./src/views/ao/Account/AccountType/AccountType.module.css?0f91","views/ao/Account/AccountType/AccountType.tsx"],"sourcesContent":["import { actionCreator } from '..';\nimport { business, businessOwner } from '../../types/business';\nimport {\n  UPDATE_BUSINESS_LIST, UPDATE_OWNERS_LIST, UPDATE_SELECTED_BUSINESS, UPDATE_SELECTED_BUSINESS_OWNER\n} from '../actionTypes/business';\n\nexport const updateBusinessList: actionCreator<business[]> = (payload) => ({\n  type: UPDATE_BUSINESS_LIST,\n  payload,\n});\n\nexport const updateSelectedBusiness: actionCreator<business> = (payload) => ({\n  type: UPDATE_SELECTED_BUSINESS,\n  payload,\n});\n\nexport const updateOwnersList: actionCreator<businessOwner[]> = (payload) => ({\n  type: UPDATE_OWNERS_LIST,\n  payload,\n});\n\nexport const updateSelectedBusinessOwner: actionCreator<businessOwner | null> = (payload) => ({\n  type: UPDATE_SELECTED_BUSINESS_OWNER,\n  payload,\n});\n","import { AsyncAppAction } from '..';\nimport { business, businessOwner } from '../../types/business';\nimport { loading } from '../../utils/general';\nimport http from '../../utils/http';\nimport { updateSelectedBusiness, updateBusinessList, updateOwnersList } from '../actionCreators/business';\n\n/**\n * list all business\n * @returns {Array<business>}\n */\nexport const listAllbusiness = (\n  limit = 50,\n  offset = 0\n): AsyncAppAction<{data: business[], total: number}> => (dispatch) => new Promise((resolve, reject) => {\n  loading(true);\n  const url = `v1/business?include=accounts&limit=${limit}&offset=${offset}`;\n\n  http\n    .get<{data: business[], total: number}>(url)\n    .then(({ data }) => {\n      dispatch(updateBusinessList(data.data));\n      resolve(data);\n    })\n    .catch((e) => {\n      if (e.response && e.response.data) {\n        reject(e.response.data);\n      } else {\n        reject(e);\n      }\n    })\n    .finally(() => {\n      loading(false);\n    });\n});\n\n/**\n * create business\n * @returns {Array<business>}\n */\nexport const createbusiness = (payload: {\n  legalName: string\n  entityType: string\n  dba?: string\n  email: string\n  idType: string\n  idNumber: string\n}): AsyncAppAction<business> => (dispatch) => new Promise((resolve, reject) => {\n  loading(true);\n  http\n    .post<business>('v1/business', payload)\n    .then(({ data }) => {\n      dispatch(updateSelectedBusiness(data));\n      resolve(data);\n    })\n    .catch((e) => {\n      if (e.response && e.response.data) {\n        reject(e.response.data);\n      } else {\n        reject(e);\n      }\n    })\n    .finally(() => {\n      loading(false);\n    });\n});\n\n/**\n * update business\n * @returns {Array<business>}\n */\nexport const updatebusiness = (businessId: string, payload: {\n  legalName?: string\n  entityType?: string\n  dba?: string\n  email?: string\n  idType?: string\n  idNumber?: string,\n  address?: {\n    line1: string,\n    line2: string,\n    city: string,\n    postalCode: string,\n    country: string,\n    addressType: string,\n    state: string,\n  }\n}): AsyncAppAction<business> => (dispatch) => new Promise((resolve, reject) => {\n  loading(true);\n  http\n    .patch<business>(`v1/business/${businessId}`, payload)\n    .then(({ data }) => {\n      dispatch(updateSelectedBusiness(data));\n      resolve(data);\n    })\n    .catch((e) => {\n      if (e.response && e.response.data) {\n        reject(e.response.data);\n      } else {\n        reject(e);\n      }\n    })\n    .finally(() => {\n      loading(false);\n    });\n});\n\n/**\n * get business by od\n * @returns {Array<business>}\n */\nexport const getbusinessById = (id: string, showLoader = true): AsyncAppAction<business> => () => new Promise((resolve, reject) => {\n  if (showLoader) { loading(true); }\n  const url = `v1/business/${id}`;\n\n  http\n    .get<business>(url)\n    .then(({ data }) => {\n      resolve(data);\n    })\n    .catch((e) => {\n      if (e.response && e.response.data) {\n        reject(e.response.data);\n      } else {\n        reject(e);\n      }\n    })\n    .finally(() => {\n      if (showLoader) { loading(false); }\n    });\n});\n\n/**\n * get business by od\n * @returns {Array<business>}\n */\nexport const getAllOwners = (businessId: string): AsyncAppAction<{\n  data: businessOwner[],\n  total: number\n}> => (dispatch) => new Promise((resolve, reject) => {\n  loading(true);\n\n  http\n    .get<{\n      data: businessOwner[],\n      total: number\n    }>(`v1/owner?businessId=${businessId}`)\n    .then(({ data }) => {\n      dispatch(updateOwnersList(data.data));\n      resolve(data);\n    })\n    .catch((e) => {\n      if (e.response && e.response.data) {\n        reject(e.response.data);\n      } else {\n        reject(e);\n      }\n    })\n    .finally(() => {\n      loading(false);\n    });\n});\n\n/**\n * submit kyb\n * @returns {Array<business>}\n */\nexport const submitKyb = (businessId: string): AsyncAppAction<business> => () => new Promise((resolve, reject) => {\n  loading(true);\n  http\n    .post(`v1/business/${businessId}/kyb`, { businessId })\n    .then(({ data }) => {\n      resolve(data);\n    })\n    .catch((e) => {\n      if (e.response && e.response.data) {\n        reject(e.response.data);\n      } else {\n        reject(e);\n      }\n    })\n    .finally(() => {\n      loading(false);\n    });\n});\n\n/**\n * update owner\n * @returns {Array<businessOwner>}\n */\nexport const updateOwner = (ownerId: string, details: {\n  ownership: string,\n  person?: {\n    firstName: string;\n    lastName: string;\n    email: string;\n    phone: string;\n    dateOfBirth: string;\n    idNumber: string;\n    idType: string;\n    address: {\n      line1: string;\n      line2: string;\n      city: string;\n      state: string;\n      country: string;\n      postalCode: string;\n      addressType: string;\n    }\n  }\n}): AsyncAppAction<business> => () => new Promise((resolve, reject) => {\n  loading(true);\n  http\n    .patch(`v1/owner/${ownerId}`, details)\n    .then(({ data }) => {\n      resolve(data);\n    })\n    .catch((e) => {\n      if (e.response && e.response.data) {\n        reject(e.response.data);\n      } else {\n        reject(e);\n      }\n    })\n    .finally(() => {\n      loading(false);\n    });\n});\n\n/**\n * create owner\n * @returns {Array<businessOwner>}\n */\nexport const createOwner = (details: {\n  businessId: string\n  ownership: string,\n  person?: {\n    firstName: string;\n    lastName: string;\n    phone: string;\n    email: string;\n    dateOfBirth: string;\n    idNumber: string;\n    idType: string;\n    address: {\n      line1: string;\n      line2: string;\n      city: string;\n      state: string;\n      country: string;\n      postalCode: string;\n      addressType: string;\n    }\n  }\n}): AsyncAppAction<business> => () => new Promise((resolve, reject) => {\n  loading(true);\n  http\n    .post('v1/owner', details)\n    .then(({ data }) => {\n      resolve(data);\n    })\n    .catch((e) => {\n      if (e.response && e.response.data) {\n        reject(e.response.data);\n      } else {\n        reject(e);\n      }\n    })\n    .finally(() => {\n      loading(false);\n    });\n});\n\n/**\n * Submit owner kyc\n * @param ownerId\n * @returns\n */\nexport const submitOwnerKyc = (ownerId: string) : AsyncAppAction<business> => () => new Promise((resolve, reject) => {\n  loading(true);\n  http\n    .post(`v1/owner/${ownerId}/kyc`)\n    .then(({ data }) => {\n      resolve(data);\n    })\n    .catch((e) => {\n      if (e.response && e.response.data) {\n        reject(e.response.data);\n      } else {\n        reject(e);\n      }\n    })\n    .finally(() => {\n      loading(false);\n    });\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"actionBox\":\"AccountType_actionBox__TQkIm\"};","import React, { useCallback } from 'react';\nimport {\n  Box, HStack, Image, List, ListItem, Text\n} from '@chakra-ui/react';\nimport { useTranslation } from 'react-i18next';\nimport { shallowEqual } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport MiniBox from '../../../../layout/MiniBox';\nimport style from './AccountType.module.css';\nimport { useAppAsyncDispatch, useAppSelector } from '../../../../hooks/store';\nimport Icon from '../../../../components/Icon';\nimport { listAllbusiness } from '../../../../store/middlewares/business';\nimport { updateSelectedBusiness } from '../../../../store/actionCreators/business';\nimport { updateSetupWalletOptions } from '../../../../store/actionCreators/account';\n\nconst SetupWallet = () => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const dispatch = useAppAsyncDispatch();\n\n  const logo = useAppSelector((store) => store.core.programConfig?.brand.landscapeLogo, shallowEqual);\n\n  const onPress = useCallback((accountType: 'personal' | 'business') => {\n    if (accountType === 'business') {\n      dispatch(listAllbusiness())\n        .then(({ data }) => {\n          if (data.length !== 0) {\n            const b = data[0];\n            if (b.kyb.status === 'approved') {\n              dispatch(updateSetupWalletOptions({\n                accountType: 'cash',\n                businessId: b.id,\n              }));\n              navigate('/ao/account/setup');\n            } else if ((b.kyb.status === 'submitted' || b.kyb.status === 'inReview')) {\n              dispatch(updateSelectedBusiness(data[0]));\n              navigate('/ao/kyb/review');\n            } else {\n              dispatch(updateSelectedBusiness(data[0]));\n              navigate('/ao/kyb/declined');\n            }\n          } else {\n            navigate('/ao/kyb/businessDetails');\n          }\n        });\n    } else {\n      dispatch(updateSetupWalletOptions({\n        accountType: 'cash',\n        businessId: null,\n      }));\n      navigate('/ao/account/setup');\n    }\n  }, []);\n\n  return (\n    <Box className=\"page\">\n      <form onSubmit={(e) => {\n        e.preventDefault();\n      }}\n      >\n        <MiniBox\n          varient=\"box\"\n          showBack={false}\n        >\n          <Box width=\"100%\" paddingTop=\"15px\">\n            {logo\n              ? (\n                <Box>\n                  <Image maxWidth=\"250px\" margin=\"90px auto 46px auto\" src={logo} />\n                </Box>\n              ) : null }\n\n            <Box>\n              <Text className=\"text-light\" variant=\"regular\" textAlign=\"center\" marginBottom=\"40px\">\n                {t('account_type.desc')}\n              </Text>\n              <Text fontWeight=\"600\" variant=\"regular\" textAlign=\"center\" color=\"#000000\" marginBottom=\"40px\">\n                {t('account_type.option_title')}\n              </Text>\n              <List>\n                <ListItem>\n                  <HStack className={style.actionBox} onClick={() => onPress('personal')}>\n                    <Text variant=\"regular\">{t('account_type.option1')}</Text>\n                    <Icon icon=\"Arrow-small-right\" size={12} />\n                  </HStack>\n                  <HStack className={style.actionBox} onClick={() => onPress('business')}>\n                    <Text variant=\"regular\">{t('account_type.option2')}</Text>\n                    <Icon icon=\"Arrow-small-right\" size={12} />\n                  </HStack>\n                </ListItem>\n              </List>\n            </Box>\n          </Box>\n        </MiniBox>\n      </form>\n    </Box>\n  );\n};\n\nexport default SetupWallet;\n"],"names":["updateBusinessList","payload","type","UPDATE_BUSINESS_LIST","updateSelectedBusiness","UPDATE_SELECTED_BUSINESS","updateOwnersList","UPDATE_OWNERS_LIST","updateSelectedBusinessOwner","UPDATE_SELECTED_BUSINESS_OWNER","listAllbusiness","limit","arguments","length","undefined","offset","dispatch","Promise","resolve","reject","loading","url","concat","http","get","then","_ref","data","catch","e","response","finally","createbusiness","post","_ref2","updatebusiness","businessId","patch","_ref3","getbusinessById","id","showLoader","_ref4","getAllOwners","_ref5","submitKyb","_ref6","updateOwner","ownerId","details","_ref7","createOwner","_ref8","submitOwnerKyc","_ref9","t","useTranslation","navigate","useNavigate","useAppAsyncDispatch","logo","useAppSelector","store","_store$core$programCo","core","programConfig","brand","landscapeLogo","shallowEqual","onPress","useCallback","accountType","b","kyb","status","updateSetupWalletOptions","_jsx","Box","className","children","onSubmit","preventDefault","MiniBox","varient","showBack","_jsxs","width","paddingTop","Image","maxWidth","margin","src","Text","variant","textAlign","marginBottom","fontWeight","color","List","ListItem","HStack","style","onClick","Icon","icon","size"],"sourceRoot":""}