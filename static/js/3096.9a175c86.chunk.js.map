{"version":3,"file":"static/js/3096.9a175c86.chunk.js","mappings":"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","sources":["components/CurrencyInput.tsx","views/cards/CardCreation/CardInfo/CardInfo.tsx"],"sourcesContent":["import React, { useLayoutEffect, useRef } from 'react';\nimport { Input } from '@chakra-ui/react';\nimport Inputmask from 'inputmask';\n\ntype Props = {\n    value: string;\n    placeholder?: string;\n    prefix?: string;\n    digits?: number;\n    onChange: (v: string) => void;\n}\n\nconst CurrencyInput:React.FC<Props> = ({\n  onChange, value, placeholder, prefix, digits\n}) => {\n  const input = useRef(null);\n\n  useLayoutEffect(() => {\n    if (input.current) {\n      Inputmask('currency', {\n        autoUnmask: true,\n        allowMinus: false,\n        prefix: prefix ?? '$ ',\n        placeholder,\n        rightAlign: false,\n        digits,\n        numericInput: true,\n        // positionCaretOnClick: 'ignore'\n      }).mask(input.current);\n    }\n  }, [prefix, digits, placeholder]);\n\n  return (\n  // eslint-disable-next-line react/jsx-props-no-spreading\n    <Input\n      data-testid=\"currency-input\"\n      variant=\"primary\"\n      placeholder={placeholder || '$ 0.00'}\n      ref={input}\n      onChange={(e:any) => {\n        const v = e.target.value;\n        onChange(v);\n      }}\n      value={value}\n    />\n  );\n};\n\nexport default CurrencyInput;\n","import React, { useCallback, useEffect, useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Box, Text, FormControl, FormLabel, Input, VStack,\n  Button,\n  RadioGroup,\n  Radio\n} from '@chakra-ui/react';\nimport { shallowEqual } from 'react-redux';\nimport MiniBox from '../../../../layout/MiniBox';\nimport { useAppAsyncDispatch, useAppSelector } from '../../../../hooks/store';\nimport { cardPayload } from '../../../../types/card';\nimport { updateCardPayload } from '../../../../store/actionCreators/card';\nimport CurrencyInput from '../../../../components/CurrencyInput';\nimport { useDrawer } from '../../../../hooks/drawer';\n\nconst CardCreateAddress = React.lazy(() => import('../CardAddress/CardAddress'));\n\nconst CardInfo = () => {\n  const { t } = useTranslation();\n  const { open, goBack } = useDrawer();\n  const dispatch = useAppAsyncDispatch();\n\n  const cardPayloadData = useAppSelector((store) => store.card.cardPayload, shallowEqual);\n  const replaceCardId = useAppSelector((store) => store.card.replaceCardId);\n  const selectedAccount = useAppSelector((store) => store.account.selectedAccount, shallowEqual);\n\n  const setPayload = useCallback((key: keyof cardPayload, value: any) => {\n    if (cardPayloadData) {\n      const copiedData:cardPayload = {\n        ...cardPayloadData,\n        [key]: value\n      };\n      dispatch(updateCardPayload(copiedData));\n    }\n  }, [cardPayloadData]);\n\n  const isValid = useMemo(() => cardPayloadData?.limitInterval && cardPayloadData?.label?.length !== 0 && cardPayloadData?.limitAmount, [cardPayloadData]);\n\n  useEffect(() => {\n    if (!cardPayloadData || !cardPayloadData.limitAmount || cardPayloadData.limitAmount === '') {\n      setPayload('limitAmount', '0.00');\n    }\n  }, [cardPayloadData]);\n\n  return (\n    <div className=\"page\">\n      <MiniBox\n        onBack={goBack}\n        heading={t(replaceCardId ? `create_card_info.replace_title_${cardPayloadData?.cardType}` : `create_card_info.title_${cardPayloadData?.cardType}`)}\n        footer={(\n          <Button width=\"100%\" variant=\"primary\" disabled={!isValid} onClick={() => open(CardCreateAddress)}>\n            {t('create_card_info.ctaText')}\n          </Button>\n)}\n      >\n        <Box width=\"100%\" paddingTop=\"15px\">\n          <FormControl variant=\"primary\">\n            <FormLabel variant=\"primary\">\n              {t('create_card_info.cardLabel')}\n            </FormLabel>\n            <Input\n              value={cardPayloadData?.label}\n              variant=\"primary\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => setPayload('label', e.target.value)}\n            />\n          </FormControl>\n          {cardPayloadData?.cardType === 'physical'\n            ? (\n              <>\n                <FormControl variant=\"primary\">\n                  <FormLabel variant=\"primary\">\n                    {t('create_card_info.embossingPerson')}\n                  </FormLabel>\n                  <Input\n                    maxLength={21}\n                    value={cardPayloadData?.embossingPerson}\n                    variant=\"primary\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => setPayload('embossingPerson', e.target.value)}\n                  />\n                </FormControl>\n                {selectedAccount?.businessId !== ''\n                  ? (\n                    <FormControl variant=\"primary\">\n                      <FormLabel variant=\"primary\">\n                        {t('create_card_info.embossingBusiness')}\n                      </FormLabel>\n                      <Input\n                        maxLength={21}\n                        value={cardPayloadData?.embossingBusiness}\n                        variant=\"primary\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => setPayload('embossingBusiness', e.target.value)}\n                      />\n                    </FormControl>\n                  ) : null }\n              </>\n            ) : null }\n          <FormControl variant=\"primary\">\n            <FormLabel variant=\"primary\">\n              {t('create_card_info.setSpendingLimit')}\n            </FormLabel>\n            <CurrencyInput\n              value={cardPayloadData?.limitAmount || ''}\n              onChange={(value) => {\n                setPayload('limitAmount', value);\n              }}\n            />\n          </FormControl>\n\n          <RadioGroup onChange={(v:string) => v && setPayload('limitInterval', v)} value={cardPayloadData?.limitInterval}>\n\n            <VStack alignItems=\"flex-start\" py=\"24px\">\n              <Radio value=\"daily\" variant=\"primary\">\n                <Text variant=\"regular\" fontSize=\"14px\">{t('create_card_info.daily')}</Text>\n              </Radio>\n\n              <Radio value=\"weekly\" variant=\"primary\">\n                <Text variant=\"regular\" fontSize=\"14px\">{t('create_card_info.perWeek')}</Text>\n              </Radio>\n\n              <Radio value=\"monthly\" variant=\"primary\">\n                <Text variant=\"regular\" fontSize=\"14px\">{t('create_card_info.perMonth')}</Text>\n              </Radio>\n\n              <Radio value=\"yearly\" variant=\"primary\">\n                <Text variant=\"regular\" fontSize=\"14px\">{t('create_card_info.perYear')}</Text>\n              </Radio>\n\n              <Radio value=\"allTime\" variant=\"primary\">\n                <Text variant=\"regular\" fontSize=\"14px\">{t('create_card_info.allTime')}</Text>\n              </Radio>\n\n              <Radio value=\"perTransaction\" variant=\"primary\">\n                <Text variant=\"regular\" fontSize=\"14px\">{t('create_card_info.perTransaction')}</Text>\n              </Radio>\n\n            </VStack>\n          </RadioGroup>\n\n          {/* <Box>\n            <Text variant=\"info\" pb=\"16px\">{t('create_card_info.allowBlockcategories')}</Text>\n            <Box className={style.categories}>\n              <HStack className={style.category}>\n                <Box>\n                  <Text variant=\"branding\">{t('create_card_info.allowedCategories')}</Text>\n                  <Text variant=\"info\">{t('create_card_info.allCategories')}</Text>\n                </Box>\n                <Text className={style.edit}>{t('create_card_info.edit')}</Text>\n              </HStack>\n              <HStack className={style.category}>\n                <Box>\n                  <Text variant=\"branding\">{t('create_card_info.blockedCategories')}</Text>\n                  <Text variant=\"info\">{t('create_card_info.none')}</Text>\n                </Box>\n                <Text className={style.edit}>{t('create_card_info.edit')}</Text>\n              </HStack>\n            </Box>\n          </Box> */}\n\n        </Box>\n      </MiniBox>\n\n    </div>\n  );\n};\n\nexport default CardInfo;\n"],"names":["_ref","onChange","value","placeholder","prefix","digits","input","useRef","useLayoutEffect","current","Inputmask","autoUnmask","allowMinus","rightAlign","numericInput","mask","_jsx","Input","variant","ref","e","v","target","CardCreateAddress","React","t","useTranslation","_useDrawer","useDrawer","open","goBack","dispatch","useAppAsyncDispatch","cardPayloadData","useAppSelector","store","card","cardPayload","shallowEqual","replaceCardId","selectedAccount","account","setPayload","useCallback","key","copiedData","_objectSpread","_defineProperty","updateCardPayload","isValid","useMemo","_cardPayloadData$labe","limitInterval","label","length","limitAmount","useEffect","className","children","MiniBox","onBack","heading","concat","cardType","footer","Button","width","disabled","onClick","_jsxs","Box","paddingTop","FormControl","FormLabel","_Fragment","maxLength","embossingPerson","businessId","embossingBusiness","CurrencyInput","RadioGroup","VStack","alignItems","py","Radio","Text","fontSize"],"sourceRoot":""}