{"version":3,"file":"static/js/3474.0d582df4.chunk.js","mappings":"wlbAMMA,EAAc,CAClBC,QAASC,EACTC,UAAWC,EACXC,QAASC,GA6BX,EAtBwB,SAAHC,GAAyB,IAAnBC,EAAID,EAAJC,KACnBC,GAAUC,EAAAA,EAAAA,QAAY,MAgB5B,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAYC,IAAAA,cAAqB,CACrCC,UAAWL,EAAQM,QACnBC,SAAU,MACVC,MAAM,EACNC,UAAU,EACVC,cAAenB,EAAQQ,KAGzB,OAAO,WACLI,EAAUQ,SACZ,CACF,GAAG,KAGDC,EAAAA,EAAAA,KAAA,OAAK,cAAY,2BAA2BC,MAAO,CAAEC,MAAO,QAASC,OAAQ,QAASC,OAAQ,UAAYC,IAAKjB,GAEnH,ECnCA,EAA4B,0BAA5B,EAAuE,+BAAvE,EAAwH,gCCkBlHkB,EAAyB,SAAHpB,GAAA,IAC1BqB,EAAOrB,EAAPqB,QAASC,EAAKtB,EAALsB,MAAOC,EAAWvB,EAAXuB,YAAaC,EAAMxB,EAANwB,OAAQC,EAAQzB,EAARyB,SAAUC,EAAM1B,EAAN0B,OAC/CC,EAAM3B,EAAN2B,OAAMC,EAAA5B,EAAE6B,WAAAA,OAAU,IAAAD,GAAOA,EAAAE,EAAA9B,EAAE+B,QAAAA,OAAO,IAAAD,GAAOA,EAAA,OAEzChB,EAAAA,EAAAA,KAACkB,EAAAA,GAAI,CAACC,UAAWlB,EAAgBU,UAC/BS,EAAAA,EAAAA,MAACF,EAAAA,GAAI,CAACC,UAAWlB,EAAqBU,SAAA,EACpCS,EAAAA,EAAAA,MAACC,EAAAA,GAAG,CAACC,EAAE,OAAMX,SAAA,EACXX,EAAAA,EAAAA,KAACuB,EAAe,CAACpC,KAAMuB,KACvBV,EAAAA,EAAAA,KAACwB,EAAAA,GAAO,CAACC,GAAI,GAAI,cAAY,eAAeC,QAAQ,UAASf,SAAEH,IAC9DC,GACCT,EAAAA,EAAAA,KAAC2B,EAAAA,GAAI,CAAC,cAAY,qBAAqBD,QAAQ,UAAUE,UAAU,OAAOT,UAAU,aAAYR,SAC7FF,IAED,KACHE,KAEFC,IACEZ,EAAAA,EAAAA,KAACqB,EAAAA,GAAG,CAAAV,SAAEC,IACRG,GAEGf,EAAAA,EAAAA,KAACqB,EAAAA,GAAG,CAACF,UAAS,cAAAU,OAAgB5B,GAAwBU,SACnDM,GACGjB,EAAAA,EAAAA,KAAC8B,EAAAA,GAAM,CAAC,cAAY,gBAAgBJ,QAAQ,UAAUxB,MAAM,OAAO6B,QAASlB,EAAOF,SAAEJ,IAAoB,OAE7G,SAEH,EAGTD,EAAO0B,aAAe,CACpBvB,iBAAawB,GAGf,O,8IC9CaC,EAAgD,SAACC,GAAO,MAAM,CACzEC,KAAMC,EAAAA,GACNF,QAAAA,EACD,EAEYG,EAAkD,SAACH,GAAO,MAAM,CAC3EC,KAAMG,EAAAA,GACNJ,QAAAA,EACD,EAEYK,EAAmD,SAACL,GAAO,MAAM,CAC5EC,KAAMK,EAAAA,GACNN,QAAAA,EACD,EAEYO,EAAmE,SAACP,GAAO,MAAM,CAC5FC,KAAMO,EAAAA,GACNR,QAAAA,EACD,C,uRCdYS,EAAkB,WAAH,IAC1BC,EAAKC,UAAAC,OAAA,QAAAd,IAAAa,UAAA,GAAAA,UAAA,GAAG,GACRE,EAAMF,UAAAC,OAAA,QAAAd,IAAAa,UAAA,GAAAA,UAAA,GAAG,EAAC,OAC4C,SAACG,GAAQ,OAAK,IAAIC,SAAQ,SAACC,EAASC,IAC1FC,EAAAA,EAAAA,KAAQ,GACR,IAAMC,EAAG,sCAAAzB,OAAyCgB,EAAK,YAAAhB,OAAWmB,GAElEO,EAAAA,EACGC,IAAuCF,GACvCG,MAAK,SAAAvE,GAAe,IAAZwE,EAAIxE,EAAJwE,KACPT,GAASf,EAAAA,EAAAA,IAAmBwB,EAAKA,OACjCP,EAAQO,EACV,IACCC,OAAM,SAACC,GACFA,EAAEC,UAAYD,EAAEC,SAASH,KAC3BN,EAAOQ,EAAEC,SAASH,MAElBN,EAAOQ,EAEX,IACCE,SAAQ,YACPT,EAAAA,EAAAA,KAAQ,EACV,GACJ,GAAG,CAAD,EAMWU,EAAiB,SAAC5B,GAO9B,OAA+B,SAACc,GAAQ,OAAK,IAAIC,SAAQ,SAACC,EAASC,IAClEC,EAAAA,EAAAA,KAAQ,GACRE,EAAAA,EACGS,KAAe,cAAe7B,GAC9BsB,MAAK,SAAAQ,GAAe,IAAZP,EAAIO,EAAJP,KACPT,GAASX,EAAAA,EAAAA,IAAuBoB,IAChCP,EAAQO,EACV,IACCC,OAAM,SAACC,GACFA,EAAEC,UAAYD,EAAEC,SAASH,KAC3BN,EAAOQ,EAAEC,SAASH,MAElBN,EAAOQ,EAEX,IACCE,SAAQ,YACPT,EAAAA,EAAAA,KAAQ,EACV,GACJ,GAAG,CAAD,EAMWa,EAAiB,SAACC,EAAoBhC,GAgBlD,OAA+B,SAACc,GAAQ,OAAK,IAAIC,SAAQ,SAACC,EAASC,IAClEC,EAAAA,EAAAA,KAAQ,GACRE,EAAAA,EACGa,MAAK,eAAAvC,OAA0BsC,GAAchC,GAC7CsB,MAAK,SAAAY,GAAe,IAAZX,EAAIW,EAAJX,KACPT,GAASX,EAAAA,EAAAA,IAAuBoB,IAChCP,EAAQO,EACV,IACCC,OAAM,SAACC,GACFA,EAAEC,UAAYD,EAAEC,SAASH,KAC3BN,EAAOQ,EAAEC,SAASH,MAElBN,EAAOQ,EAEX,IACCE,SAAQ,YACPT,EAAAA,EAAAA,KAAQ,EACV,GACJ,GAAG,CAAD,EAMWiB,EAAkB,SAACC,GAAU,IAAEC,IAAU1B,UAAAC,OAAA,QAAAd,IAAAa,UAAA,KAAAA,UAAA,GAAO,OAA+B,kBAAM,IAAII,SAAQ,SAACC,EAASC,GAClHoB,IAAcnB,EAAAA,EAAAA,KAAQ,GAC1B,IAAMC,EAAG,eAAAzB,OAAkB0C,GAE3BhB,EAAAA,EACGC,IAAcF,GACdG,MAAK,SAAAgB,GAAe,IAAZf,EAAIe,EAAJf,KACPP,EAAQO,EACV,IACCC,OAAM,SAACC,GACFA,EAAEC,UAAYD,EAAEC,SAASH,KAC3BN,EAAOQ,EAAEC,SAASH,MAElBN,EAAOQ,EAEX,IACCE,SAAQ,WACHU,IAAcnB,EAAAA,EAAAA,KAAQ,EAC5B,GACJ,GAAG,CAAD,EAMWqB,EAAe,SAACP,GAAkB,OAGzC,SAAClB,GAAQ,OAAK,IAAIC,SAAQ,SAACC,EAASC,IACxCC,EAAAA,EAAAA,KAAQ,GAERE,EAAAA,EACGC,IAAG,uBAAA3B,OAGsBsC,IACzBV,MAAK,SAAAkB,GAAe,IAAZjB,EAAIiB,EAAJjB,KACPT,GAAST,EAAAA,EAAAA,IAAiBkB,EAAKA,OAC/BP,EAAQO,EACV,IACCC,OAAM,SAACC,GACFA,EAAEC,UAAYD,EAAEC,SAASH,KAC3BN,EAAOQ,EAAEC,SAASH,MAElBN,EAAOQ,EAEX,IACCE,SAAQ,YACPT,EAAAA,EAAAA,KAAQ,EACV,GACJ,GAAG,CAAD,EAMWuB,EAAY,SAACT,GAAkB,OAA+B,kBAAM,IAAIjB,SAAQ,SAACC,EAASC,IACrGC,EAAAA,EAAAA,KAAQ,GACRE,EAAAA,EACGS,KAAK,eAADnC,OAAgBsC,EAAU,QAAQ,CAAEA,WAAAA,IACxCV,MAAK,SAAAoB,GAAe,IAAZnB,EAAImB,EAAJnB,KACPP,EAAQO,EACV,IACCC,OAAM,SAACC,GACFA,EAAEC,UAAYD,EAAEC,SAASH,KAC3BN,EAAOQ,EAAEC,SAASH,MAElBN,EAAOQ,EAEX,IACCE,SAAQ,YACPT,EAAAA,EAAAA,KAAQ,EACV,GACJ,GAAG,CAAD,EAMWyB,EAAc,SAACC,EAAiBC,GAoB5C,OAA+B,kBAAM,IAAI9B,SAAQ,SAACC,EAASC,IAC1DC,EAAAA,EAAAA,KAAQ,GACRE,EAAAA,EACGa,MAAM,YAADvC,OAAakD,GAAWC,GAC7BvB,MAAK,SAAAwB,GAAe,IAAZvB,EAAIuB,EAAJvB,KACPP,EAAQO,EACV,IACCC,OAAM,SAACC,GACFA,EAAEC,UAAYD,EAAEC,SAASH,KAC3BN,EAAOQ,EAAEC,SAASH,MAElBN,EAAOQ,EAEX,IACCE,SAAQ,YACPT,EAAAA,EAAAA,KAAQ,EACV,GACJ,GAAG,CAAD,EAMW6B,EAAc,SAACF,GAqB3B,OAA+B,kBAAM,IAAI9B,SAAQ,SAACC,EAASC,IAC1DC,EAAAA,EAAAA,KAAQ,GACRE,EAAAA,EACGS,KAAK,WAAYgB,GACjBvB,MAAK,SAAA0B,GAAe,IAAZzB,EAAIyB,EAAJzB,KACPP,EAAQO,EACV,IACCC,OAAM,SAACC,GACFA,EAAEC,UAAYD,EAAEC,SAASH,KAC3BN,EAAOQ,EAAEC,SAASH,MAElBN,EAAOQ,EAEX,IACCE,SAAQ,YACPT,EAAAA,EAAAA,KAAQ,EACV,GACJ,GAAG,CAAD,EAOW+B,EAAiB,SAACL,GAAe,OAAgC,kBAAM,IAAI7B,SAAQ,SAACC,EAASC,IACxGC,EAAAA,EAAAA,KAAQ,GACRE,EAAAA,EACGS,KAAK,YAADnC,OAAakD,EAAO,SACxBtB,MAAK,SAAA4B,GAAe,IAAZ3B,EAAI2B,EAAJ3B,KACPP,EAAQO,EACV,IACCC,OAAM,SAACC,GACFA,EAAEC,UAAYD,EAAEC,SAASH,KAC3BN,EAAOQ,EAAEC,SAASH,MAElBN,EAAOQ,EAEX,IACCE,SAAQ,YACPT,EAAAA,EAAAA,KAAQ,EACV,GACJ,GAAG,CAAD,C,6ICrNF,UAlE4B,WAC1B,IAAMJ,GAAWqC,EAAAA,EAAAA,MACTC,GAAMC,EAAAA,EAAAA,KAAND,EACFE,GAAapG,EAAAA,EAAAA,QAAO,GACpBqG,GAAQrG,EAAAA,EAAAA,QAAY,MACpBsG,GAAWC,EAAAA,EAAAA,MAEjBC,GAAiEC,EAAAA,EAAAA,KAAe,SAACC,GAAK,OAAKA,EAAMC,QAAQ,GAAEC,EAAAA,IAAjFD,EAAQH,EAA1BK,iBAAwCC,EAAYN,EAAxBO,WAK9BC,GAAcC,EAAAA,EAAAA,cAAY,WAA6C,IAA5C9B,EAAU1B,UAAAC,OAAA,QAAAd,IAAAa,UAAA,IAAAA,UAAA,GAAUyD,IAAWzD,UAAAC,OAAA,QAAAd,IAAAa,UAAA,KAAAA,UAAA,GAClD,OAARkD,QAAQ,IAARA,GAAAA,EAAUzB,IACZtB,GAASqB,EAAAA,EAAAA,IAAwB,OAAR0B,QAAQ,IAARA,OAAQ,EAARA,EAAUzB,GAAIC,IACpCf,MAAK,SAAC+C,GACgB,aAAjBA,EAAEC,IAAI/F,OACJ,CAAC,iBAAkB,mBAAmBgG,SAASV,EAASW,YAC1DhB,EAAS,oBAETA,EAAS,qBAEgB,cAAjBa,EAAEC,IAAI/F,QAA2C,aAAjB8F,EAAEC,IAAI/F,OAC5C6F,IACFd,EAAW/F,SAAW,EACtBgG,EAAMhG,QAAUkH,YAAW,WACzBP,EAAYZ,EAAW/F,QAAU,EACnC,GAAG,MAGLiG,EAAS,mBAEb,IACChC,MAAMkD,EAAAA,GAEb,GAAG,CAACpB,EAAW/F,QAASsG,KAExB1G,EAAAA,EAAAA,YAAU,WAGR,OAFA+G,GAAY,GACZpD,GAASL,EAAAA,EAAAA,OACF,WACLkE,aAAapB,EAAMhG,QACrB,CACF,GAAG,IAEH,IAAMmB,GAASyF,EAAAA,EAAAA,cAAY,WACzBD,GAAY,GAAM,EACpB,GAAG,IAEH,OACErG,EAAAA,EAAAA,KAAA,OAAKmB,UAAU,OAAMR,UACnBX,EAAAA,EAAAA,KAAC+G,EAAAA,EAAO,CACNC,QAAQ,MACRC,UAAWC,EAAAA,EAAYC,uBACvBC,QAAQ,IACRC,OAAQ,WACN1B,EAAS,4BACX,EACA2B,SAAUnB,EAAapD,OAAS,EAAEpC,UAElCX,EAAAA,EAAAA,KAACM,EAAAA,EAAM,CAACI,OAAO,YAAYF,MAAO+E,EAAE,yBAA0B9E,YAAa8E,EAAE,+BAAgC1E,OAAQA,EAAQN,QAASgF,EAAE,gCAIhJ,C,qBC9EA,KAAgB,uBAAyB,uC","sources":["components/LottieAnimation.tsx","webpack://drop-in-ui/./src/components/Status.module.css?5d70","components/Status.tsx","store/actionCreators/business.ts","store/middlewares/business.ts","views/ao/Kyb/Review/Review.tsx","webpack://drop-in-ui/./src/Global.module.css?a1f3"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport lottie from 'lottie-web';\nimport Success from '../assets/images/animated/success.json';\nimport Searching from '../assets/images/animated/searching.json';\nimport Failure from '../assets/images/animated/failure.json';\n\nconst nameMap:any = {\n  success: Success,\n  searching: Searching,\n  failure: Failure\n};\n\ntype Props = {\n  name: string;\n}\n\nconst LottieAnimation = ({ name }: Props) => {\n  const animRef = useRef<any>(null);\n\n  useEffect(() => {\n    const animation = lottie.loadAnimation({\n      container: animRef.current,\n      renderer: 'svg',\n      loop: true,\n      autoplay: true,\n      animationData: nameMap[name]\n    });\n\n    return () => {\n      animation.destroy();\n    };\n  }, []);\n\n  return (\n    <div data-testid=\"lottie-animation-wrapper\" style={{ width: '140px', height: '140px', margin: '0 auto' }} ref={animRef} />\n  );\n};\n\nexport default LottieAnimation;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Status_container__TVrXy\",\"containerInner\":\"Status_containerInner__tScEb\",\"footerContainer\":\"Status_footerContainer__+ehXm\"};","import React from 'react';\nimport {\n  Box, Button, Flex, Heading, Text\n} from '@chakra-ui/react';\nimport LottieAnimation from './LottieAnimation';\nimport style from './Status.module.css';\n\ntype Props = {\n    status: 'success' | 'searching' | 'failure';\n    title: string;\n    description?: string;\n    ctaText?: string;\n    children?: React.ReactNode;\n    footer?: React.ReactNode;\n    showFooter?: boolean;\n    showCTA?: boolean;\n    onNext?: () => void;\n}\n\nconst Status:React.FC<Props> = ({\n  ctaText, title, description, status, children, footer,\n  onNext, showFooter = true, showCTA = true\n}) => (\n  <Flex className={style.container}>\n    <Flex className={style.containerInner}>\n      <Box w=\"100%\">\n        <LottieAnimation name={status} />\n        <Heading mt={10} data-testid=\"status-title\" variant=\"primary\">{title}</Heading>\n        {description ? (\n          <Text data-testid=\"status-description\" variant=\"regular\" marginTop=\"10px\" className=\"text-light\">\n            {description}\n          </Text>\n        ) : null }\n        {children}\n      </Box>\n      {footer\n      && <Box>{footer}</Box> }\n      {showFooter\n        ? (\n          <Box className={`default-bg ${style.footerContainer}`}>\n            {showCTA\n              ? <Button data-testid=\"status-action\" variant=\"primary\" width=\"100%\" onClick={onNext}>{ctaText}</Button> : null }\n          </Box>\n        ) : null }\n    </Flex>\n  </Flex>\n);\n\nStatus.defaultProps = {\n  description: undefined\n};\n\nexport default Status;\n","import { actionCreator } from '..';\nimport { business, businessOwner } from '../../types/business';\nimport {\n  UPDATE_BUSINESS_LIST, UPDATE_OWNERS_LIST, UPDATE_SELECTED_BUSINESS, UPDATE_SELECTED_BUSINESS_OWNER\n} from '../actionTypes/business';\n\nexport const updateBusinessList: actionCreator<business[]> = (payload) => ({\n  type: UPDATE_BUSINESS_LIST,\n  payload,\n});\n\nexport const updateSelectedBusiness: actionCreator<business> = (payload) => ({\n  type: UPDATE_SELECTED_BUSINESS,\n  payload,\n});\n\nexport const updateOwnersList: actionCreator<businessOwner[]> = (payload) => ({\n  type: UPDATE_OWNERS_LIST,\n  payload,\n});\n\nexport const updateSelectedBusinessOwner: actionCreator<businessOwner | null> = (payload) => ({\n  type: UPDATE_SELECTED_BUSINESS_OWNER,\n  payload,\n});\n","import { AsyncAppAction } from '..';\nimport { business, businessOwner } from '../../types/business';\nimport { loading } from '../../utils/general';\nimport http from '../../utils/http';\nimport { updateSelectedBusiness, updateBusinessList, updateOwnersList } from '../actionCreators/business';\n\n/**\n * list all business\n * @returns {Array<business>}\n */\nexport const listAllbusiness = (\n  limit = 50,\n  offset = 0\n): AsyncAppAction<{data: business[], total: number}> => (dispatch) => new Promise((resolve, reject) => {\n  loading(true);\n  const url = `v1/business?include=accounts&limit=${limit}&offset=${offset}`;\n\n  http\n    .get<{data: business[], total: number}>(url)\n    .then(({ data }) => {\n      dispatch(updateBusinessList(data.data));\n      resolve(data);\n    })\n    .catch((e) => {\n      if (e.response && e.response.data) {\n        reject(e.response.data);\n      } else {\n        reject(e);\n      }\n    })\n    .finally(() => {\n      loading(false);\n    });\n});\n\n/**\n * create business\n * @returns {Array<business>}\n */\nexport const createbusiness = (payload: {\n  legalName: string\n  entityType: string\n  dba?: string\n  email: string\n  idType: string\n  idNumber: string\n}): AsyncAppAction<business> => (dispatch) => new Promise((resolve, reject) => {\n  loading(true);\n  http\n    .post<business>('v1/business', payload)\n    .then(({ data }) => {\n      dispatch(updateSelectedBusiness(data));\n      resolve(data);\n    })\n    .catch((e) => {\n      if (e.response && e.response.data) {\n        reject(e.response.data);\n      } else {\n        reject(e);\n      }\n    })\n    .finally(() => {\n      loading(false);\n    });\n});\n\n/**\n * update business\n * @returns {Array<business>}\n */\nexport const updatebusiness = (businessId: string, payload: {\n  legalName?: string\n  entityType?: string\n  dba?: string\n  email?: string\n  idType?: string\n  idNumber?: string,\n  address?: {\n    line1: string,\n    line2: string,\n    city: string,\n    postalCode: string,\n    country: string,\n    addressType: string,\n    state: string,\n  }\n}): AsyncAppAction<business> => (dispatch) => new Promise((resolve, reject) => {\n  loading(true);\n  http\n    .patch<business>(`v1/business/${businessId}`, payload)\n    .then(({ data }) => {\n      dispatch(updateSelectedBusiness(data));\n      resolve(data);\n    })\n    .catch((e) => {\n      if (e.response && e.response.data) {\n        reject(e.response.data);\n      } else {\n        reject(e);\n      }\n    })\n    .finally(() => {\n      loading(false);\n    });\n});\n\n/**\n * get business by od\n * @returns {Array<business>}\n */\nexport const getbusinessById = (id: string, showLoader = true): AsyncAppAction<business> => () => new Promise((resolve, reject) => {\n  if (showLoader) { loading(true); }\n  const url = `v1/business/${id}`;\n\n  http\n    .get<business>(url)\n    .then(({ data }) => {\n      resolve(data);\n    })\n    .catch((e) => {\n      if (e.response && e.response.data) {\n        reject(e.response.data);\n      } else {\n        reject(e);\n      }\n    })\n    .finally(() => {\n      if (showLoader) { loading(false); }\n    });\n});\n\n/**\n * get business by od\n * @returns {Array<business>}\n */\nexport const getAllOwners = (businessId: string): AsyncAppAction<{\n  data: businessOwner[],\n  total: number\n}> => (dispatch) => new Promise((resolve, reject) => {\n  loading(true);\n\n  http\n    .get<{\n      data: businessOwner[],\n      total: number\n    }>(`v1/owner?businessId=${businessId}`)\n    .then(({ data }) => {\n      dispatch(updateOwnersList(data.data));\n      resolve(data);\n    })\n    .catch((e) => {\n      if (e.response && e.response.data) {\n        reject(e.response.data);\n      } else {\n        reject(e);\n      }\n    })\n    .finally(() => {\n      loading(false);\n    });\n});\n\n/**\n * submit kyb\n * @returns {Array<business>}\n */\nexport const submitKyb = (businessId: string): AsyncAppAction<business> => () => new Promise((resolve, reject) => {\n  loading(true);\n  http\n    .post(`v1/business/${businessId}/kyb`, { businessId })\n    .then(({ data }) => {\n      resolve(data);\n    })\n    .catch((e) => {\n      if (e.response && e.response.data) {\n        reject(e.response.data);\n      } else {\n        reject(e);\n      }\n    })\n    .finally(() => {\n      loading(false);\n    });\n});\n\n/**\n * update owner\n * @returns {Array<businessOwner>}\n */\nexport const updateOwner = (ownerId: string, details: {\n  ownership: string,\n  person?: {\n    firstName: string;\n    lastName: string;\n    email: string;\n    phone: string;\n    dateOfBirth: string;\n    idNumber: string;\n    idType: string;\n    address: {\n      line1: string;\n      line2: string;\n      city: string;\n      state: string;\n      country: string;\n      postalCode: string;\n      addressType: string;\n    }\n  }\n}): AsyncAppAction<business> => () => new Promise((resolve, reject) => {\n  loading(true);\n  http\n    .patch(`v1/owner/${ownerId}`, details)\n    .then(({ data }) => {\n      resolve(data);\n    })\n    .catch((e) => {\n      if (e.response && e.response.data) {\n        reject(e.response.data);\n      } else {\n        reject(e);\n      }\n    })\n    .finally(() => {\n      loading(false);\n    });\n});\n\n/**\n * create owner\n * @returns {Array<businessOwner>}\n */\nexport const createOwner = (details: {\n  businessId: string\n  ownership: string,\n  person?: {\n    firstName: string;\n    lastName: string;\n    phone: string;\n    email: string;\n    dateOfBirth: string;\n    idNumber: string;\n    idType: string;\n    address: {\n      line1: string;\n      line2: string;\n      city: string;\n      state: string;\n      country: string;\n      postalCode: string;\n      addressType: string;\n    }\n  }\n}): AsyncAppAction<business> => () => new Promise((resolve, reject) => {\n  loading(true);\n  http\n    .post('v1/owner', details)\n    .then(({ data }) => {\n      resolve(data);\n    })\n    .catch((e) => {\n      if (e.response && e.response.data) {\n        reject(e.response.data);\n      } else {\n        reject(e);\n      }\n    })\n    .finally(() => {\n      loading(false);\n    });\n});\n\n/**\n * Submit owner kyc\n * @param ownerId\n * @returns\n */\nexport const submitOwnerKyc = (ownerId: string) : AsyncAppAction<business> => () => new Promise((resolve, reject) => {\n  loading(true);\n  http\n    .post(`v1/owner/${ownerId}/kyc`)\n    .then(({ data }) => {\n      resolve(data);\n    })\n    .catch((e) => {\n      if (e.response && e.response.data) {\n        reject(e.response.data);\n      } else {\n        reject(e);\n      }\n    })\n    .finally(() => {\n      loading(false);\n    });\n});\n","import React, { useEffect, useCallback, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { shallowEqual } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport Status from '../../../../components/Status';\nimport { useAppAsyncDispatch, useAppSelector } from '../../../../hooks/store';\nimport MiniBox from '../../../../layout/MiniBox';\nimport { getbusinessById, listAllbusiness } from '../../../../store/middlewares/business';\nimport { apiErrorHandler } from '../../../../utils/general';\nimport globalStyle from '../../../../Global.module.css';\n\n/**\n * Kyc inreview component\n * @returns {React.ReactNode}\n */\nconst KycReview: React.FC = () => {\n  const dispatch = useAppAsyncDispatch();\n  const { t } = useTranslation();\n  const retryCount = useRef(0);\n  const timer = useRef<any>(null);\n  const navigate = useNavigate();\n\n  const { selectedBusiness: business, businesses: businessList } = useAppSelector((store) => store.business, shallowEqual);\n\n  /**\n   * fetch business status\n   */\n  const fetchStatus = useCallback((showLoader = false, autoRefresh = true) => {\n    if (business?.id) {\n      dispatch(getbusinessById(business?.id, showLoader))\n        .then((b) => {\n          if (b.kyb.status === 'approved') {\n            if (['soleProprietor', 'singleMemberLLC'].includes(business.entityType)) {\n              navigate('/ao/kyb/approved');\n            } else {\n              navigate('/ao/kyb/ownership');\n            }\n          } else if ((b.kyb.status === 'submitted' || b.kyb.status === 'inReview')) {\n            if (autoRefresh) {\n              retryCount.current += 1;\n              timer.current = setTimeout(() => {\n                fetchStatus(retryCount.current < 4);\n              }, 5000);\n            }\n          } else {\n            navigate('/ao/kyb/declined');\n          }\n        })\n        .catch(apiErrorHandler);\n    }\n  }, [retryCount.current, business]);\n\n  useEffect(() => {\n    fetchStatus(true);\n    dispatch(listAllbusiness());\n    return () => {\n      clearTimeout(timer.current);\n    };\n  }, []);\n\n  const onNext = useCallback(() => {\n    fetchStatus(true, false);\n  }, []);\n\n  return (\n    <div className=\"page\">\n      <MiniBox\n        varient=\"box\"\n        bodyClass={globalStyle.sucessScreenNoVPadding}\n        heading=\" \"\n        onBack={() => {\n          navigate('/ao/account/setup-options');\n        }}\n        showBack={businessList.length > 1}\n      >\n        <Status status=\"searching\" title={t('business_review.title')} description={t('business_review.description')} onNext={onNext} ctaText={t('business_review.ctaText')} />\n      </MiniBox>\n    </div>\n  );\n};\n\nexport default KycReview;\n","// extracted by mini-css-extract-plugin\nexport default {\"sucessScreenNoVPadding\":\"Global_sucessScreenNoVPadding__WvmjX\"};"],"names":["nameMap","success","Success","searching","Searching","failure","Failure","_ref","name","animRef","useRef","useEffect","animation","lottie","container","current","renderer","loop","autoplay","animationData","destroy","_jsx","style","width","height","margin","ref","Status","ctaText","title","description","status","children","footer","onNext","_ref$showFooter","showFooter","_ref$showCTA","showCTA","Flex","className","_jsxs","Box","w","LottieAnimation","Heading","mt","variant","Text","marginTop","concat","Button","onClick","defaultProps","undefined","updateBusinessList","payload","type","UPDATE_BUSINESS_LIST","updateSelectedBusiness","UPDATE_SELECTED_BUSINESS","updateOwnersList","UPDATE_OWNERS_LIST","updateSelectedBusinessOwner","UPDATE_SELECTED_BUSINESS_OWNER","listAllbusiness","limit","arguments","length","offset","dispatch","Promise","resolve","reject","loading","url","http","get","then","data","catch","e","response","finally","createbusiness","post","_ref2","updatebusiness","businessId","patch","_ref3","getbusinessById","id","showLoader","_ref4","getAllOwners","_ref5","submitKyb","_ref6","updateOwner","ownerId","details","_ref7","createOwner","_ref8","submitOwnerKyc","_ref9","useAppAsyncDispatch","t","useTranslation","retryCount","timer","navigate","useNavigate","_useAppSelector","useAppSelector","store","business","shallowEqual","selectedBusiness","businessList","businesses","fetchStatus","useCallback","autoRefresh","b","kyb","includes","entityType","setTimeout","apiErrorHandler","clearTimeout","MiniBox","varient","bodyClass","globalStyle","sucessScreenNoVPadding","heading","onBack","showBack"],"sourceRoot":""}