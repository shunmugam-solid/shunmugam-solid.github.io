{"version":3,"file":"static/js/3046.59f3e24c.chunk.js","mappings":"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","sources":["components/CardExpiryInput.tsx","views/cards/CardActivation/CardActivation.tsx"],"sourcesContent":["import React, { useLayoutEffect, useRef } from 'react';\nimport { Input } from '@chakra-ui/react';\n// import InputMask from 'react-input-mask';\nimport Inputmask from 'inputmask';\n\ntype Props = {\n\n    value: string;\n    // eslint-disable-next-line no-unused-vars\n    onChange: (v: string) => void;\n}\n\nconst CardExpiryInput:React.FC<Props> = ({ onChange, value }) => {\n  const input = useRef(null);\n\n  useLayoutEffect(() => {\n    if (input.current) {\n      Inputmask('datetime', {\n        inputFormat: 'mm/yyyy',\n        showMaskOnHover: false,\n        showMaskOnFocus: false,\n        jitMasking: true,\n      }).mask(input.current);\n    }\n  }, []);\n\n  return (\n    <Input\n      ref={input}\n      data-testid=\"expiry-date-input\"\n      variant=\"primary\"\n      onChange={(e:any) => onChange(e.target.value)}\n      value={value}\n    />\n  );\n};\n\nexport default CardExpiryInput;\n","import React, {\n  useCallback, useLayoutEffect, useMemo, useRef, useState\n} from 'react';\nimport {\n  Button, Box, FormControl, FormLabel, Input\n} from '@chakra-ui/react';\nimport { useTranslation } from 'react-i18next';\nimport { shallowEqual } from 'react-redux';\nimport Inputmask from 'inputmask';\nimport MiniBox from '../../../layout/MiniBox';\nimport { useAppAsyncDispatch, useAppSelector } from '../../../hooks/store';\nimport { activate } from '../../../store/middlewares/card';\nimport CardExpiryInput from '../../../components/CardExpiryInput';\nimport { apiErrorHandler } from '../../../utils/general';\nimport { useDrawer } from '../../../hooks/drawer';\n\nconst mask = '9999';\nconst CardActivated = React.lazy(() => import('../CardActivated/CardActivated'));\n\nconst CardActivation = () => {\n  const { t } = useTranslation();\n  const { open, goBack } = useDrawer<{cardId: string}>();\n  const dispatch = useAppAsyncDispatch();\n  const [formData, updateFormData] = useState({\n    last4: '',\n    expirationDate: ''\n  });\n\n  const selectedCard = useAppSelector((store) => store.card.selectedCard, shallowEqual);\n\n  const last4input = useRef(null);\n\n  const isValid = useMemo(() => formData.last4.length === 4 && formData.expirationDate.length === 7, [formData]);\n\n  useLayoutEffect(() => {\n    if (last4input.current) {\n      Inputmask({\n        mask, showMaskOnHover: false, showMaskOnFocus: false, jitMasking: true\n      }).mask(last4input.current);\n    }\n  }, []);\n\n  const onSubmit = useCallback(() => {\n    if (selectedCard?.id) {\n      const [expiryMonth, expiryYear] = formData.expirationDate.split('/');\n      dispatch(activate(selectedCard?.id, {\n        expiryMonth,\n        expiryYear,\n        last4: formData.last4\n      })).then(() => {\n        open(CardActivated);\n      }).catch(apiErrorHandler);\n    }\n  }, [selectedCard, formData]);\n\n  if (!selectedCard) {\n    return null;\n  }\n\n  return (\n    <div className=\"page\">\n      <MiniBox\n        heading={t('activate_card.title')}\n        footer={(\n          <Button width=\"100%\" variant=\"primary\" disabled={!isValid} onClick={onSubmit}>\n            {t('activate_card.ctaText')}\n          </Button>\n)}\n        showBack\n        onBack={goBack}\n      >\n        <Box width=\"100%\" paddingTop=\"15px\">\n          <FormControl variant=\"primary\">\n            <FormLabel variant=\"primary\">\n              {t('activate_card.last4')}\n            </FormLabel>\n            <Input\n              ref={last4input}\n              value={formData.last4}\n              variant=\"primary\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => updateFormData({\n                ...formData,\n                last4: e.target.value\n              })}\n            />\n          </FormControl>\n\n          <FormControl variant=\"primary\">\n            <FormLabel variant=\"primary\">\n              {t('activate_card.expiry')}\n            </FormLabel>\n            <CardExpiryInput\n              value={formData.expirationDate}\n              onChange={(v) => updateFormData({\n                ...formData,\n                expirationDate: v\n              })}\n            />\n          </FormControl>\n        </Box>\n      </MiniBox>\n\n    </div>\n  );\n};\n\nexport default CardActivation;\n"],"names":["_ref","onChange","value","input","useRef","useLayoutEffect","current","Inputmask","inputFormat","showMaskOnHover","showMaskOnFocus","jitMasking","mask","_jsx","Input","ref","variant","e","target","CardActivated","React","t","useTranslation","_useDrawer","useDrawer","open","goBack","dispatch","useAppAsyncDispatch","_useState","useState","last4","expirationDate","_useState2","_slicedToArray","formData","updateFormData","selectedCard","useAppSelector","store","card","shallowEqual","last4input","isValid","useMemo","length","onSubmit","useCallback","id","_formData$expirationD","split","_formData$expirationD2","expiryMonth","expiryYear","activate","then","catch","apiErrorHandler","className","children","MiniBox","heading","footer","Button","width","disabled","onClick","showBack","onBack","_jsxs","Box","paddingTop","FormControl","FormLabel","_objectSpread","CardExpiryInput","v"],"sourceRoot":""}