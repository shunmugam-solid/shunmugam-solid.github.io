{"version":3,"file":"static/js/9935.6a826ad1.chunk.js","mappings":"kKAgDA,IApCsC,SAAHA,GAE5B,IADLC,EAAQD,EAARC,SAAUC,EAAKF,EAALE,MAAOC,EAAWH,EAAXG,YAAaC,EAAMJ,EAANI,OAAQC,EAAML,EAANK,OAEhCC,GAAQC,EAAAA,EAAAA,QAAO,MAiBrB,OAfAC,EAAAA,EAAAA,kBAAgB,WACVF,EAAMG,SACRC,IAAU,WAAY,CACpBC,YAAY,EACZC,YAAY,EACZR,OAAc,OAANA,QAAM,IAANA,EAAAA,EAAU,KAClBD,YAAAA,EACAU,YAAY,EACZR,OAAAA,EACAS,cAAc,IAEbC,KAAKT,EAAMG,QAElB,GAAG,CAACL,EAAQC,EAAQF,KAIlBa,EAAAA,EAAAA,KAACC,EAAAA,GAAK,CACJ,cAAY,iBACZC,QAAQ,UACRf,YAAaA,GAAe,SAC5BgB,IAAKb,EACLL,SAAU,SAACmB,GACT,IAAMC,EAAID,EAAEE,OAAOpB,MACnBD,EAASoB,EACX,EACAnB,MAAOA,GAGb,C,mNCgEA,UA9FiB,WACf,IAAQqB,GAAMC,EAAAA,EAAAA,KAAND,EACAE,GAAWC,EAAAA,EAAAA,KAAXD,OACFE,GAAWC,EAAAA,EAAAA,MAEXC,GAAkBC,EAAAA,EAAAA,KAAe,SAACC,GAAK,OAAKA,EAAMC,KAAKC,YAAY,GAAEC,EAAAA,IAC3EC,GAAgCC,EAAAA,EAAAA,UAASP,GAAgBQ,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAEtBI,GAAaC,EAAAA,EAAAA,cAAY,SAACC,EAAiBzC,GAC/C,GAAIqC,EAAU,CACZ,IAAMK,GAAUC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACXN,GAAQ,IAAAO,EAAAA,EAAAA,GAAA,GACVH,EAAMzC,IAGTsC,EAAYI,EACd,CACF,GAAG,CAACL,IAEEQ,GAAUC,EAAAA,EAAAA,UAAQ,kBAAc,OAART,QAAQ,IAARA,OAAQ,EAARA,EAAUU,gBAA4C,KAAnB,OAARV,QAAQ,IAARA,OAAQ,EAARA,EAAUW,MAAMC,UAAwB,OAARZ,QAAQ,IAARA,OAAQ,EAARA,EAAUa,YAAW,GAAE,CAACb,IAE3Gc,GAASX,EAAAA,EAAAA,cAAY,WACrBH,GACFZ,GAAS2B,EAAAA,EAAAA,IAAWf,EAASgB,GAAI,CAC/BL,MAAOX,EAASW,MAChBE,YAAab,EAASa,YACtBH,cAAeV,EAASU,iBACtBO,MAAK,WACP/B,GACF,IAAGgC,MAAMC,EAAAA,GAEb,GAAG,CAACnB,IAEJ,OACEvB,EAAAA,EAAAA,KAAA,OAAK2C,UAAU,OAAMC,UACnB5C,EAAAA,EAAAA,KAAC6C,EAAAA,EAAO,CACNC,QAASvC,EAAE,wBAADwC,OAAwC,OAAflC,QAAe,IAAfA,OAAe,EAAfA,EAAiBmC,WACpDC,OAAQxC,EACRyC,QACElD,EAAAA,EAAAA,KAACmD,EAAAA,GAAM,CAACC,MAAM,OAAOlD,QAAQ,UAAUmD,UAAWtB,EAASuB,QAASjB,EAAOO,SACxErC,EAAE,4BAELqC,UAEFW,EAAAA,EAAAA,MAACC,EAAAA,GAAG,CAACJ,MAAM,OAAOK,WAAW,OAAMb,SAAA,EACjCW,EAAAA,EAAAA,MAACG,EAAAA,GAAW,CAACxD,QAAQ,UAAS0C,SAAA,EAC5B5C,EAAAA,EAAAA,KAAC2D,EAAAA,GAAS,CAACzD,QAAQ,UAAS0C,SACzBrC,EAAE,+BAELP,EAAAA,EAAAA,KAACC,EAAAA,GAAK,CACJf,MAAe,OAARqC,QAAQ,IAARA,OAAQ,EAARA,EAAUW,MACjBhC,QAAQ,UACRjB,SAAU,SAACmB,GAAsC,OAAKqB,EAAW,QAASrB,EAAEE,OAAOpB,MAAM,QAG7FqE,EAAAA,EAAAA,MAACG,EAAAA,GAAW,CAACxD,QAAQ,UAAS0C,SAAA,EAC5B5C,EAAAA,EAAAA,KAAC2D,EAAAA,GAAS,CAACzD,QAAQ,UAAS0C,SACzBrC,EAAE,sCAELP,EAAAA,EAAAA,KAAC4D,EAAAA,EAAa,CACZ1E,OAAe,OAARqC,QAAQ,IAARA,OAAQ,EAARA,EAAUa,cAAe,GAChCnD,SAAU,SAACC,GACTuC,EAAW,cAAevC,EAC5B,QAIJqE,EAAAA,EAAAA,MAACM,EAAAA,GAAM,CAACC,WAAW,aAAaC,GAAG,OAAMnB,SAAA,EACvC5C,EAAAA,EAAAA,KAACgE,EAAAA,GAAQ,CAAC9E,MAAM,QAAQD,SAAU,kBAAMwC,EAAW,gBAAiB,QAAQ,EAAEwC,UAAuC,WAApB,OAAR1C,QAAQ,IAARA,OAAQ,EAARA,EAAUU,eAA0BW,UAC3H5C,EAAAA,EAAAA,KAACkE,EAAAA,GAAI,CAAChE,QAAQ,UAAUiE,SAAS,OAAMvB,SAAErC,EAAE,6BAE7CP,EAAAA,EAAAA,KAACgE,EAAAA,GAAQ,CAAC9E,MAAM,SAASD,SAAU,kBAAMwC,EAAW,gBAAiB,SAAS,EAAEwC,UAAuC,YAApB,OAAR1C,QAAQ,IAARA,OAAQ,EAARA,EAAUU,eAA2BW,UAC9H5C,EAAAA,EAAAA,KAACkE,EAAAA,GAAI,CAAChE,QAAQ,UAAUiE,SAAS,OAAMvB,SAAErC,EAAE,+BAE7CP,EAAAA,EAAAA,KAACgE,EAAAA,GAAQ,CAAC9E,MAAM,UAAUD,SAAU,kBAAMwC,EAAW,gBAAiB,UAAU,EAAEwC,UAAuC,aAApB,OAAR1C,QAAQ,IAARA,OAAQ,EAARA,EAAUU,eAA4BW,UACjI5C,EAAAA,EAAAA,KAACkE,EAAAA,GAAI,CAAChE,QAAQ,UAAUiE,SAAS,OAAMvB,SAAErC,EAAE,gCAE7CP,EAAAA,EAAAA,KAACgE,EAAAA,GAAQ,CAAC9E,MAAM,SAASD,SAAU,kBAAMwC,EAAW,gBAAiB,SAAS,EAAEwC,UAAuC,YAApB,OAAR1C,QAAQ,IAARA,OAAQ,EAARA,EAAUU,eAA2BW,UAC9H5C,EAAAA,EAAAA,KAACkE,EAAAA,GAAI,CAAChE,QAAQ,UAAUiE,SAAS,OAAMvB,SAAErC,EAAE,+BAE7CP,EAAAA,EAAAA,KAACgE,EAAAA,GAAQ,CAAC9E,MAAM,UAAUD,SAAU,kBAAMwC,EAAW,gBAAiB,UAAU,EAAEwC,UAAuC,aAApB,OAAR1C,QAAQ,IAARA,OAAQ,EAARA,EAAUU,eAA4BW,UACjI5C,EAAAA,EAAAA,KAACkE,EAAAA,GAAI,CAAChE,QAAQ,UAAUiE,SAAS,OAAMvB,SAAErC,EAAE,+BAE7CP,EAAAA,EAAAA,KAACgE,EAAAA,GAAQ,CAAC9E,MAAM,iBAAiBD,SAAU,kBAAMwC,EAAW,gBAAiB,iBAAiB,EAAEwC,UAAuC,oBAApB,OAAR1C,QAAQ,IAARA,OAAQ,EAARA,EAAUU,eAAmCW,UACtJ5C,EAAAA,EAAAA,KAACkE,EAAAA,GAAI,CAAChE,QAAQ,UAAUiE,SAAS,OAAMvB,SAAErC,EAAE,8CAQzD,C","sources":["components/CurrencyInput.tsx","views/cards/Edit/CardInfo/CardInfo.tsx"],"sourcesContent":["import React, { useLayoutEffect, useRef } from 'react';\nimport { Input } from '@chakra-ui/react';\nimport Inputmask from 'inputmask';\n\ntype Props = {\n    value: string;\n    placeholder?: string;\n    prefix?: string;\n    digits?: number;\n    onChange: (v: string) => void;\n}\n\nconst CurrencyInput:React.FC<Props> = ({\n  onChange, value, placeholder, prefix, digits\n}) => {\n  const input = useRef(null);\n\n  useLayoutEffect(() => {\n    if (input.current) {\n      Inputmask('currency', {\n        autoUnmask: true,\n        allowMinus: false,\n        prefix: prefix ?? '$ ',\n        placeholder,\n        rightAlign: false,\n        digits,\n        numericInput: true,\n        // positionCaretOnClick: 'ignore'\n      }).mask(input.current);\n    }\n  }, [prefix, digits, placeholder]);\n\n  return (\n  // eslint-disable-next-line react/jsx-props-no-spreading\n    <Input\n      data-testid=\"currency-input\"\n      variant=\"primary\"\n      placeholder={placeholder || '$ 0.00'}\n      ref={input}\n      onChange={(e:any) => {\n        const v = e.target.value;\n        onChange(v);\n      }}\n      value={value}\n    />\n  );\n};\n\nexport default CurrencyInput;\n","import React, { useCallback, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Box, Text, FormControl, FormLabel, Input, VStack, Checkbox,\n  // HStack,\n  Button,\n} from '@chakra-ui/react';\nimport { shallowEqual } from 'react-redux';\nimport MiniBox from '../../../../layout/MiniBox';\nimport { useAppAsyncDispatch, useAppSelector } from '../../../../hooks/store';\nimport { card } from '../../../../types/card';\nimport { updateCard } from '../../../../store/middlewares/card';\nimport { apiErrorHandler } from '../../../../utils/general';\nimport CurrencyInput from '../../../../components/CurrencyInput';\nimport { useDrawer } from '../../../../hooks/drawer';\n\nconst CardInfo = () => {\n  const { t } = useTranslation();\n  const { goBack } = useDrawer();\n  const dispatch = useAppAsyncDispatch();\n\n  const cardPayloadData = useAppSelector((store) => store.card.selectedCard, shallowEqual);\n  const [cardData, setCardData] = useState(cardPayloadData);\n\n  const setPayload = useCallback((key: keyof card, value: any) => {\n    if (cardData) {\n      const copiedData = {\n        ...cardData,\n        [key]: value\n      };\n\n      setCardData(copiedData);\n    }\n  }, [cardData]);\n\n  const isValid = useMemo(() => cardData?.limitInterval && cardData?.label.length !== 0 && cardData?.limitAmount, [cardData]);\n\n  const submit = useCallback(() => {\n    if (cardData) {\n      dispatch(updateCard(cardData.id, {\n        label: cardData.label,\n        limitAmount: cardData.limitAmount,\n        limitInterval: cardData.limitInterval,\n      })).then(() => {\n        goBack();\n      }).catch(apiErrorHandler);\n    }\n  }, [cardData]);\n\n  return (\n    <div className=\"page\">\n      <MiniBox\n        heading={t(`edit_card_info.title_${cardPayloadData?.cardType}`)}\n        onBack={goBack}\n        footer={(\n          <Button width=\"100%\" variant=\"primary\" disabled={!isValid} onClick={submit}>\n            {t('edit_card_info.ctaText')}\n          </Button>\n        )}\n      >\n        <Box width=\"100%\" paddingTop=\"15px\">\n          <FormControl variant=\"primary\">\n            <FormLabel variant=\"primary\">\n              {t('edit_card_info.cardLabel')}\n            </FormLabel>\n            <Input\n              value={cardData?.label}\n              variant=\"primary\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => setPayload('label', e.target.value)}\n            />\n          </FormControl>\n          <FormControl variant=\"primary\">\n            <FormLabel variant=\"primary\">\n              {t('edit_card_info.setSpendingLimit')}\n            </FormLabel>\n            <CurrencyInput\n              value={cardData?.limitAmount || ''}\n              onChange={(value) => {\n                setPayload('limitAmount', value);\n              }}\n            />\n          </FormControl>\n\n          <VStack alignItems=\"flex-start\" py=\"24px\">\n            <Checkbox value=\"daily\" onChange={() => setPayload('limitInterval', 'daily')} isChecked={cardData?.limitInterval === 'daily'}>\n              <Text variant=\"regular\" fontSize=\"14px\">{t('edit_card_info.daily')}</Text>\n            </Checkbox>\n            <Checkbox value=\"weekly\" onChange={() => setPayload('limitInterval', 'weekly')} isChecked={cardData?.limitInterval === 'weekly'}>\n              <Text variant=\"regular\" fontSize=\"14px\">{t('edit_card_info.perWeek')}</Text>\n            </Checkbox>\n            <Checkbox value=\"monthly\" onChange={() => setPayload('limitInterval', 'monthly')} isChecked={cardData?.limitInterval === 'monthly'}>\n              <Text variant=\"regular\" fontSize=\"14px\">{t('edit_card_info.perMonth')}</Text>\n            </Checkbox>\n            <Checkbox value=\"yearly\" onChange={() => setPayload('limitInterval', 'yearly')} isChecked={cardData?.limitInterval === 'yearly'}>\n              <Text variant=\"regular\" fontSize=\"14px\">{t('edit_card_info.perYear')}</Text>\n            </Checkbox>\n            <Checkbox value=\"allTime\" onChange={() => setPayload('limitInterval', 'allTime')} isChecked={cardData?.limitInterval === 'allTime'}>\n              <Text variant=\"regular\" fontSize=\"14px\">{t('edit_card_info.allTime')}</Text>\n            </Checkbox>\n            <Checkbox value=\"perTransaction\" onChange={() => setPayload('limitInterval', 'perTransaction')} isChecked={cardData?.limitInterval === 'perTransaction'}>\n              <Text variant=\"regular\" fontSize=\"14px\">{t('edit_card_info.perTransaction')}</Text>\n            </Checkbox>\n          </VStack>\n        </Box>\n      </MiniBox>\n\n    </div>\n  );\n};\n\nexport default CardInfo;\n"],"names":["_ref","onChange","value","placeholder","prefix","digits","input","useRef","useLayoutEffect","current","Inputmask","autoUnmask","allowMinus","rightAlign","numericInput","mask","_jsx","Input","variant","ref","e","v","target","t","useTranslation","goBack","useDrawer","dispatch","useAppAsyncDispatch","cardPayloadData","useAppSelector","store","card","selectedCard","shallowEqual","_useState","useState","_useState2","_slicedToArray","cardData","setCardData","setPayload","useCallback","key","copiedData","_objectSpread","_defineProperty","isValid","useMemo","limitInterval","label","length","limitAmount","submit","updateCard","id","then","catch","apiErrorHandler","className","children","MiniBox","heading","concat","cardType","onBack","footer","Button","width","disabled","onClick","_jsxs","Box","paddingTop","FormControl","FormLabel","CurrencyInput","VStack","alignItems","py","Checkbox","isChecked","Text","fontSize"],"sourceRoot":""}