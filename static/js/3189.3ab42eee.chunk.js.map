{"version":3,"file":"static/js/3189.3ab42eee.chunk.js","mappings":"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","sources":["components/LottieAnimation.tsx","webpack://drop-in-ui/./src/components/Status.module.css?5d70","components/Status.tsx","webpack://drop-in-ui/./src/views/payments/PaymentSuccess/PaymentSuccess.module.css?138b","views/payments/PaymentSuccess/PaymentSuccess.tsx","webpack://drop-in-ui/./src/Global.module.css?a1f3"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport lottie from 'lottie-web';\nimport Success from '../assets/images/animated/success.json';\nimport Searching from '../assets/images/animated/searching.json';\nimport Failure from '../assets/images/animated/failure.json';\n\nconst nameMap:any = {\n  success: Success,\n  searching: Searching,\n  failure: Failure\n};\n\ntype Props = {\n  name: string;\n}\n\nconst LottieAnimation = ({ name }: Props) => {\n  const animRef = useRef<any>(null);\n\n  useEffect(() => {\n    const animation = lottie.loadAnimation({\n      container: animRef.current,\n      renderer: 'svg',\n      loop: true,\n      autoplay: true,\n      animationData: nameMap[name]\n    });\n\n    return () => {\n      animation.destroy();\n    };\n  }, []);\n\n  return (\n    <div data-testid=\"lottie-animation-wrapper\" style={{ width: '140px', height: '140px', margin: '0 auto' }} ref={animRef} />\n  );\n};\n\nexport default LottieAnimation;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Status_container__TVrXy\",\"containerInner\":\"Status_containerInner__tScEb\",\"footerContainer\":\"Status_footerContainer__+ehXm\"};","import React from 'react';\nimport {\n  Box, Button, Flex, Heading, Text\n} from '@chakra-ui/react';\nimport LottieAnimation from './LottieAnimation';\nimport style from './Status.module.css';\n\ntype Props = {\n    status: 'success' | 'searching' | 'failure';\n    title: string;\n    description?: string;\n    ctaText?: string;\n    children?: React.ReactNode;\n    footer?: React.ReactNode;\n    showFooter?: boolean;\n    showCTA?: boolean;\n    onNext?: () => void;\n}\n\nconst Status:React.FC<Props> = ({\n  ctaText, title, description, status, children, footer,\n  onNext, showFooter = true, showCTA = true\n}) => (\n  <Flex className={style.container}>\n    <Flex className={style.containerInner}>\n      <Box w=\"100%\">\n        <LottieAnimation name={status} />\n        <Heading mt={10} data-testid=\"status-title\" variant=\"primary\">{title}</Heading>\n        {description ? (\n          <Text data-testid=\"status-description\" variant=\"regular\" marginTop=\"10px\" className=\"text-light\">\n            {description}\n          </Text>\n        ) : null }\n        {children}\n      </Box>\n      {footer\n      && <Box>{footer}</Box> }\n      {showFooter\n        ? (\n          <Box className={`default-bg ${style.footerContainer}`}>\n            {showCTA\n              ? <Button data-testid=\"status-action\" variant=\"primary\" width=\"100%\" onClick={onNext}>{ctaText}</Button> : null }\n          </Box>\n        ) : null }\n    </Flex>\n  </Flex>\n);\n\nStatus.defaultProps = {\n  description: undefined\n};\n\nexport default Status;\n","// extracted by mini-css-extract-plugin\nexport default {\"card_info\":\"PaymentSuccess_card_info__Wkqln\",\"card_info_item\":\"PaymentSuccess_card_info_item__dT7OS\",\"transfer_initiated\":\"PaymentSuccess_transfer_initiated__9wVo9\"};","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Box, Text, HStack\n} from '@chakra-ui/react';\n\nimport { shallowEqual } from 'react-redux';\nimport style from './PaymentSuccess.module.css';\nimport MiniBox from '../../../layout/MiniBox';\nimport Status from '../../../components/Status';\nimport { useAppSelector } from '../../../hooks/store';\nimport { camel2title } from '../../../utils/general';\nimport { useDrawer } from '../../../hooks/drawer';\nimport globalStyle from '../../../Global.module.css';\n\nfunction PaymentSuccess() {\n  const { t } = useTranslation();\n  const { close } = useDrawer();\n\n  const paymentDetails = useAppSelector((store) => store.payment.paymentResponse, shallowEqual);\n  const contactDetails = useAppSelector((store) => store.contact.selectedContact, shallowEqual);\n  const account = useAppSelector((store) => store.account.selectedAccount, shallowEqual);\n\n  return (\n    <div className=\"page\">\n      <MiniBox bodyClass={globalStyle.sucessScreenNoVPadding}>\n        <Status\n          status=\"success\"\n          title={`$${paymentDetails?.amount} Transferred`}\n          ctaText={t('payment_success.ctaText')}\n          onNext={() => {\n            close();\n          }}\n        >\n          <Box>\n            <Text variant=\"regular\" className={`${style.transfer_initiated} text-light`} pt=\"16px\">\n              {t(`payment_success.${paymentDetails?.transferType}_info`, {\n                to: contactDetails?.name\n              })}\n\n            </Text>\n            <Box className={style.card_info}>\n              <HStack className={style.card_info_item}>\n                <Text w=\"50%\" variant=\"regular\" className=\"text-light\" textAlign=\"left\">{t('payment_success.source')}</Text>\n                <Text w=\"50%\" variant=\"regular\" textAlign=\"left\">{account?.label}</Text>\n              </HStack>\n              <HStack className={style.card_info_item}>\n                <Text w=\"50%\" variant=\"regular\" className=\"text-light\" textAlign=\"left\">{t('payment_success.destination')}</Text>\n                <Text w=\"50%\" variant=\"regular\" textAlign=\"left\">{paymentDetails?.name}</Text>\n              </HStack>\n              {\n              paymentDetails?.transferType === 'ach' || paymentDetails?.transferType === 'domesticWire' || paymentDetails?.transferType === 'internationalWire' ? (\n                <>\n                  {paymentDetails?.transferType === 'internationalWire'\n                    ? (\n                      <HStack className={style.card_info_item}>\n                        <Text w=\"50%\" variant=\"regular\" className=\"text-light\" textAlign=\"left\">{t('payment_success.swiftCode')}</Text>\n                        <Text w=\"50%\" variant=\"regular\" textAlign=\"left\">{contactDetails?.wire?.international?.bankIdentifierCode}</Text>\n                      </HStack>\n                    ) : null }\n                  <HStack className={style.card_info_item}>\n                    <Text w=\"50%\" variant=\"regular\" className=\"text-light\" textAlign=\"left\">{t('payment_success.accountNumber')}</Text>\n                    <Text w=\"50%\" variant=\"regular\" textAlign=\"left\">{paymentDetails?.accountNumber}</Text>\n                  </HStack>\n                  {paymentDetails?.transferType !== 'internationalWire'\n                    ? (\n                      <HStack className={style.card_info_item}>\n                        <Text w=\"50%\" variant=\"regular\" className=\"text-light\" textAlign=\"left\">{t('payment_success.routingNumber')}</Text>\n                        <Text w=\"50%\" variant=\"regular\" textAlign=\"left\">{paymentDetails?.routingNumber}</Text>\n                      </HStack>\n                    ) : null }\n                  <HStack className={style.card_info_item}>\n                    <Text w=\"50%\" variant=\"regular\" className=\"text-light\" textAlign=\"left\">{t('payment_success.bank')}</Text>\n                    <Text w=\"50%\" variant=\"regular\" textAlign=\"left\">{paymentDetails?.bankName}</Text>\n                  </HStack>\n                  <HStack className={style.card_info_item}>\n                    <Text w=\"50%\" variant=\"regular\" className=\"text-light\" textAlign=\"left\">{t('payment_success.accountType')}</Text>\n                    <Text w=\"50%\" variant=\"regular\" textAlign=\"left\">{camel2title(paymentDetails?.accountType)}</Text>\n                  </HStack>\n                  {paymentDetails?.transferType === 'internationalWire'\n                    ? (\n                      <HStack className={style.card_info_item}>\n                        <Text w=\"50%\" variant=\"regular\" className=\"text-light\" textAlign=\"left\">{t('payment_success.country')}</Text>\n                        <Text w=\"50%\" variant=\"regular\" textAlign=\"left\">{contactDetails?.wire?.international?.beneficiaryAddress?.country}</Text>\n                      </HStack>\n                    ) : null }\n                </>\n              ) : null\n            }\n\n              {\n              paymentDetails?.transferType === 'solidCard' ? (\n                <>\n                  <HStack className={style.card_info_item}>\n                    <Text w=\"50%\" variant=\"regular\" className=\"text-light\" textAlign=\"left\">{t('payment_success.phone')}</Text>\n                    <Text w=\"50%\" variant=\"regular\" textAlign=\"left\">{contactDetails?.phone}</Text>\n                  </HStack>\n                  <HStack className={style.card_info_item}>\n                    <Text w=\"50%\" variant=\"regular\" className=\"text-light\" textAlign=\"left\">{t('payment_success.email')}</Text>\n                    <Text w=\"50%\" variant=\"regular\" textAlign=\"left\">{contactDetails?.email}</Text>\n                  </HStack>\n                </>\n              ) : null\n            }\n\n              {\n              paymentDetails?.transferType === 'physicalCheck' ? (\n                <HStack className={style.card_info_item}>\n                  <Text w=\"50%\" variant=\"regular\" className=\"text-light\" textAlign=\"left\">{t('payment_success.address')}</Text>\n                  <Text w=\"50%\" variant=\"regular\" textAlign=\"left\">{`${contactDetails?.check?.address.line1},${contactDetails?.check?.address.line2},${contactDetails?.check?.address.city} ${contactDetails?.check?.address.state} ${contactDetails?.check?.address.postalCode}`}</Text>\n                </HStack>\n              ) : null\n            }\n              <HStack className={style.card_info_item}>\n                <Text w=\"50%\" variant=\"regular\" className=\"text-light\" textAlign=\"left\">{t('payment_success.description')}</Text>\n                <Text w=\"50%\" variant=\"regular\" textAlign=\"left\">{paymentDetails?.description}</Text>\n              </HStack>\n            </Box>\n          </Box>\n        </Status>\n      </MiniBox>\n    </div>\n  );\n}\n\nexport default PaymentSuccess;\n","// extracted by mini-css-extract-plugin\nexport default {\"sucessScreenNoVPadding\":\"Global_sucessScreenNoVPadding__WvmjX\"};"],"names":["nameMap","success","Success","searching","Searching","failure","Failure","_ref","name","animRef","useRef","useEffect","animation","lottie","container","current","renderer","loop","autoplay","animationData","destroy","_jsx","style","width","height","margin","ref","Status","ctaText","title","description","status","children","footer","onNext","_ref$showFooter","showFooter","_ref$showCTA","showCTA","Flex","className","_jsxs","Box","w","LottieAnimation","Heading","mt","variant","Text","marginTop","concat","Button","onClick","defaultProps","undefined","_contactDetails$wire","_contactDetails$wire$","_contactDetails$wire2","_contactDetails$wire3","_contactDetails$wire4","_contactDetails$check","_contactDetails$check2","_contactDetails$check3","_contactDetails$check4","_contactDetails$check5","t","useTranslation","close","useDrawer","paymentDetails","useAppSelector","store","payment","paymentResponse","shallowEqual","contactDetails","contact","selectedContact","account","selectedAccount","MiniBox","bodyClass","globalStyle","sucessScreenNoVPadding","amount","pt","transferType","to","HStack","textAlign","label","_Fragment","wire","international","bankIdentifierCode","accountNumber","routingNumber","bankName","camel2title","accountType","beneficiaryAddress","country","phone","email","check","address","line1","line2","city","state","postalCode"],"sourceRoot":""}