{"version":3,"file":"static/js/9551.641aad00.chunk.js","mappings":"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","sources":["store/actionCreators/business.ts","store/middlewares/business.ts","webpack://drop-in-ui/./src/views/ao/Kyb/AddOwners/AddOwners.module.css?cbee","views/ao/Kyb/AddOwners/AddOwners.tsx"],"sourcesContent":["import { actionCreator } from '..';\nimport { business, businessOwner } from '../../types/business';\nimport {\n  UPDATE_BUSINESS_LIST, UPDATE_OWNERS_LIST, UPDATE_SELECTED_BUSINESS, UPDATE_SELECTED_BUSINESS_OWNER\n} from '../actionTypes/business';\n\nexport const updateBusinessList: actionCreator<business[]> = (payload) => ({\n  type: UPDATE_BUSINESS_LIST,\n  payload,\n});\n\nexport const updateSelectedBusiness: actionCreator<business> = (payload) => ({\n  type: UPDATE_SELECTED_BUSINESS,\n  payload,\n});\n\nexport const updateOwnersList: actionCreator<businessOwner[]> = (payload) => ({\n  type: UPDATE_OWNERS_LIST,\n  payload,\n});\n\nexport const updateSelectedBusinessOwner: actionCreator<businessOwner | null> = (payload) => ({\n  type: UPDATE_SELECTED_BUSINESS_OWNER,\n  payload,\n});\n","import { AsyncAppAction } from '..';\nimport { business, businessOwner } from '../../types/business';\nimport { loading } from '../../utils/general';\nimport http from '../../utils/http';\nimport { updateSelectedBusiness, updateBusinessList, updateOwnersList } from '../actionCreators/business';\n\n/**\n * list all business\n * @returns {Array<business>}\n */\nexport const listAllbusiness = (\n  limit = 50,\n  offset = 0\n): AsyncAppAction<{data: business[], total: number}> => (dispatch) => new Promise((resolve, reject) => {\n  loading(true);\n  const url = `v1/business?include=accounts&limit=${limit}&offset=${offset}`;\n\n  http\n    .get<{data: business[], total: number}>(url)\n    .then(({ data }) => {\n      dispatch(updateBusinessList(data.data));\n      resolve(data);\n    })\n    .catch((e) => {\n      if (e.response && e.response.data) {\n        reject(e.response.data);\n      } else {\n        reject(e);\n      }\n    })\n    .finally(() => {\n      loading(false);\n    });\n});\n\n/**\n * create business\n * @returns {Array<business>}\n */\nexport const createbusiness = (payload: {\n  legalName: string\n  entityType: string\n  dba?: string\n  email: string\n  idType: string\n  idNumber: string\n}): AsyncAppAction<business> => (dispatch) => new Promise((resolve, reject) => {\n  loading(true);\n  http\n    .post<business>('v1/business', payload)\n    .then(({ data }) => {\n      dispatch(updateSelectedBusiness(data));\n      resolve(data);\n    })\n    .catch((e) => {\n      if (e.response && e.response.data) {\n        reject(e.response.data);\n      } else {\n        reject(e);\n      }\n    })\n    .finally(() => {\n      loading(false);\n    });\n});\n\n/**\n * update business\n * @returns {Array<business>}\n */\nexport const updatebusiness = (businessId: string, payload: {\n  legalName?: string\n  entityType?: string\n  dba?: string\n  email?: string\n  idType?: string\n  idNumber?: string,\n  address?: {\n    line1: string,\n    line2: string,\n    city: string,\n    postalCode: string,\n    country: string,\n    addressType: string,\n    state: string,\n  }\n}): AsyncAppAction<business> => (dispatch) => new Promise((resolve, reject) => {\n  loading(true);\n  http\n    .patch<business>(`v1/business/${businessId}`, payload)\n    .then(({ data }) => {\n      dispatch(updateSelectedBusiness(data));\n      resolve(data);\n    })\n    .catch((e) => {\n      if (e.response && e.response.data) {\n        reject(e.response.data);\n      } else {\n        reject(e);\n      }\n    })\n    .finally(() => {\n      loading(false);\n    });\n});\n\n/**\n * get business by od\n * @returns {Array<business>}\n */\nexport const getbusinessById = (id: string, showLoader = true): AsyncAppAction<business> => () => new Promise((resolve, reject) => {\n  if (showLoader) { loading(true); }\n  const url = `v1/business/${id}`;\n\n  http\n    .get<business>(url)\n    .then(({ data }) => {\n      resolve(data);\n    })\n    .catch((e) => {\n      if (e.response && e.response.data) {\n        reject(e.response.data);\n      } else {\n        reject(e);\n      }\n    })\n    .finally(() => {\n      if (showLoader) { loading(false); }\n    });\n});\n\n/**\n * get business by od\n * @returns {Array<business>}\n */\nexport const getAllOwners = (businessId: string): AsyncAppAction<{\n  data: businessOwner[],\n  total: number\n}> => (dispatch) => new Promise((resolve, reject) => {\n  loading(true);\n\n  http\n    .get<{\n      data: businessOwner[],\n      total: number\n    }>(`v1/owner?businessId=${businessId}`)\n    .then(({ data }) => {\n      dispatch(updateOwnersList(data.data));\n      resolve(data);\n    })\n    .catch((e) => {\n      if (e.response && e.response.data) {\n        reject(e.response.data);\n      } else {\n        reject(e);\n      }\n    })\n    .finally(() => {\n      loading(false);\n    });\n});\n\n/**\n * submit kyb\n * @returns {Array<business>}\n */\nexport const submitKyb = (businessId: string): AsyncAppAction<business> => () => new Promise((resolve, reject) => {\n  loading(true);\n  http\n    .post(`v1/business/${businessId}/kyb`, { businessId })\n    .then(({ data }) => {\n      resolve(data);\n    })\n    .catch((e) => {\n      if (e.response && e.response.data) {\n        reject(e.response.data);\n      } else {\n        reject(e);\n      }\n    })\n    .finally(() => {\n      loading(false);\n    });\n});\n\n/**\n * update owner\n * @returns {Array<businessOwner>}\n */\nexport const updateOwner = (ownerId: string, details: {\n  ownership: string,\n  person?: {\n    firstName: string;\n    lastName: string;\n    email: string;\n    phone: string;\n    dateOfBirth: string;\n    idNumber: string;\n    idType: string;\n    address: {\n      line1: string;\n      line2: string;\n      city: string;\n      state: string;\n      country: string;\n      postalCode: string;\n      addressType: string;\n    }\n  }\n}): AsyncAppAction<business> => () => new Promise((resolve, reject) => {\n  loading(true);\n  http\n    .patch(`v1/owner/${ownerId}`, details)\n    .then(({ data }) => {\n      resolve(data);\n    })\n    .catch((e) => {\n      if (e.response && e.response.data) {\n        reject(e.response.data);\n      } else {\n        reject(e);\n      }\n    })\n    .finally(() => {\n      loading(false);\n    });\n});\n\n/**\n * create owner\n * @returns {Array<businessOwner>}\n */\nexport const createOwner = (details: {\n  businessId: string\n  ownership: string,\n  person?: {\n    firstName: string;\n    lastName: string;\n    phone: string;\n    email: string;\n    dateOfBirth: string;\n    idNumber: string;\n    idType: string;\n    address: {\n      line1: string;\n      line2: string;\n      city: string;\n      state: string;\n      country: string;\n      postalCode: string;\n      addressType: string;\n    }\n  }\n}): AsyncAppAction<business> => () => new Promise((resolve, reject) => {\n  loading(true);\n  http\n    .post('v1/owner', details)\n    .then(({ data }) => {\n      resolve(data);\n    })\n    .catch((e) => {\n      if (e.response && e.response.data) {\n        reject(e.response.data);\n      } else {\n        reject(e);\n      }\n    })\n    .finally(() => {\n      loading(false);\n    });\n});\n\n/**\n * Submit owner kyc\n * @param ownerId\n * @returns\n */\nexport const submitOwnerKyc = (ownerId: string) : AsyncAppAction<business> => () => new Promise((resolve, reject) => {\n  loading(true);\n  http\n    .post(`v1/owner/${ownerId}/kyc`)\n    .then(({ data }) => {\n      resolve(data);\n    })\n    .catch((e) => {\n      if (e.response && e.response.data) {\n        reject(e.response.data);\n      } else {\n        reject(e);\n      }\n    })\n    .finally(() => {\n      loading(false);\n    });\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"addOwners\":\"AddOwners_addOwners__F2ERY\",\"percentageValue\":\"AddOwners_percentageValue__D0W+u\",\"owners\":\"AddOwners_owners__MN4eu\",\"owner\":\"AddOwners_owner__KdZDg\"};","import React, {\n  useCallback, useEffect, useMemo\n} from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Box, Button, Text, Flex\n} from '@chakra-ui/react';\nimport { shallowEqual } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport MiniBox from '../../../../layout/MiniBox';\nimport css from './AddOwners.module.css';\nimport { useAppAsyncDispatch, useAppSelector } from '../../../../hooks/store';\nimport { getAllOwners } from '../../../../store/middlewares/business';\nimport { updateSelectedBusinessOwner } from '../../../../store/actionCreators/business';\nimport { businessOwner } from '../../../../types/business';\nimport Icon from '../../../../components/Icon';\n\n/**\n * Kyb List owners - Component for showing the list of owners with ownership percentage of the business.\n * @module KYB\n * @returns {JSX.Element}\n */\nconst AddOwners = () => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const dispatch = useAppAsyncDispatch();\n\n  const owners = useAppSelector((store) => store.business.owners, shallowEqual);\n  const business = useAppSelector((store) => store.business.selectedBusiness, shallowEqual);\n\n  // eslint-disable-next-line radix\n  const totalOwnership = useMemo(() => owners.reduce((total, o) => total + parseInt(o.ownership), 0), [owners]);\n\n  const onOwnerSelect = useCallback((o: businessOwner) => {\n    dispatch(updateSelectedBusinessOwner(o));\n    setTimeout(() => {\n      navigate('/ao/kyb/ownerDetails');\n    }, 0);\n  }, []);\n\n  useEffect(() => {\n    if (business) {\n      dispatch(getAllOwners(business.id));\n    }\n  }, [business]);\n\n  return (\n    <div className=\"page\">\n      <form onSubmit={(e) => {\n        e.preventDefault();\n        if (totalOwnership !== 0) {\n          navigate('/ao/kyb/approved');\n        }\n      }}\n      >\n        <MiniBox\n          varient=\"box\"\n          heading={t('add_owners.title')}\n          showBack\n          onBack={() => {\n            navigate(-1);\n          }}\n          footer={(\n            <Box>\n              <Text variant=\"small\" pb=\"16px\">{t('add_owners.toHelp')}</Text>\n              <Button\n                width=\"100%\"\n                variant=\"primary\"\n                type=\"submit\"\n                disabled={totalOwnership === 0}\n              >\n                {t('add_owners.ctaText')}\n              </Button>\n            </Box>\n)}\n        >\n          <Box width=\"100%\">\n            <Text variant=\"large\">{t('add_owners.ownerGreaterThan')}</Text>\n\n            <Box data-testid=\"owners-list\" className={css.owners}>\n              {owners.map((o, i) => (\n                <Box\n                  data-testid={`owners-data-${i + 1}`}\n                  key={`owner-${o.id}`}\n                  className={css.owner}\n                  onClick={() => {\n                    onOwnerSelect(o);\n                  }}\n                >\n                  <Text variant=\"regular\" textAlign=\"left\">\n                    {o.person.firstName}\n                    {' '}\n                    {o.person.lastName}\n                  </Text>\n                  <Text variant=\"regular\" textAlign=\"right\" className=\"text-dark\">\n                    {o.ownership}\n                    %\n                  </Text>\n                </Box>\n              ))}\n            </Box>\n            {totalOwnership <= 75 ? (\n              <Box pt=\"15px\" data-testid=\"add-owner\">\n                <Text variant=\"large\">{t('add_owners.addOwners')}</Text>\n                <Box onClick={() => {\n                  dispatch(updateSelectedBusinessOwner(null));\n                  navigate('/ao/kyb/ownerDetails');\n                }}\n                >\n                  <Flex className={css.addOwners}>\n                    <Text variant=\"regular\" textAlign=\"left\">{t('add_owners.addOwnersGreaterThan')}</Text>\n                    <Icon icon=\"Arrow-small-right\" size={12} className=\"svg-light-grey-1\" />\n                  </Flex>\n                </Box>\n              </Box>\n            ) : null }\n\n          </Box>\n        </MiniBox>\n      </form>\n    </div>\n  );\n};\n\nexport default AddOwners;\n"],"names":["updateBusinessList","payload","type","UPDATE_BUSINESS_LIST","updateSelectedBusiness","UPDATE_SELECTED_BUSINESS","updateOwnersList","UPDATE_OWNERS_LIST","updateSelectedBusinessOwner","UPDATE_SELECTED_BUSINESS_OWNER","listAllbusiness","limit","arguments","length","undefined","offset","dispatch","Promise","resolve","reject","loading","url","concat","http","get","then","_ref","data","catch","e","response","finally","createbusiness","post","_ref2","updatebusiness","businessId","patch","_ref3","getbusinessById","id","showLoader","_ref4","getAllOwners","_ref5","submitKyb","_ref6","updateOwner","ownerId","details","_ref7","createOwner","_ref8","submitOwnerKyc","_ref9","t","useTranslation","navigate","useNavigate","useAppAsyncDispatch","owners","useAppSelector","store","business","shallowEqual","selectedBusiness","totalOwnership","useMemo","reduce","total","o","parseInt","ownership","onOwnerSelect","useCallback","setTimeout","useEffect","_jsx","className","children","onSubmit","preventDefault","MiniBox","varient","heading","showBack","onBack","footer","_jsxs","Box","Text","variant","pb","Button","width","disabled","css","map","i","onClick","textAlign","person","firstName","lastName","pt","Flex","Icon","icon","size"],"sourceRoot":""}