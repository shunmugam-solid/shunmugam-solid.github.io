{"version":3,"file":"static/js/1150.fe47318e.chunk.js","mappings":"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","sources":["hooks/user.ts","views/pullfunds/Options/Options.tsx"],"sourcesContent":["import { shallowEqual, useDispatch } from 'react-redux';\nimport { updatePersonDetails } from '../store/actionCreators/user';\nimport { personDetails } from '../types/user';\nimport { useAppSelector } from './store';\n\ntype ValueOf<T> = T[keyof T];\n\n/**\n * Person details hook - it's like useState get and set available\n * @returns {personDetails}\n */\n// eslint-disable-next-line import/prefer-default-export\nexport const usePersonState = (): [\n  personDetails | null,\n  (\n    // eslint-disable-next-line no-unused-vars\n    d: personDetails | keyof personDetails,\n    // eslint-disable-next-line no-unused-vars\n    value?: ValueOf<personDetails>,\n  ) => void,\n] => {\n  const dispatch = useDispatch();\n  const personDetailsData = useAppSelector(\n    (state) => state.user.personDetails,\n    shallowEqual,\n  );\n  /**\n   * update person details state\n   * @param {personDetails | string} newData new person details state or key name (update by key case)\n   * @param {personDetails=} value valueof personDetails (only for update by key case)\n   * @returns {void}\n   */\n  const updateDetails = (\n    newData: personDetails | keyof personDetails,\n    value?: ValueOf<personDetails>,\n  ) => {\n    if (typeof newData === 'string') {\n      const key = newData;\n      const v = value;\n      if (\n        key\n        && personDetailsData\n        && personDetailsData[key] !== undefined\n        && v !== undefined\n      ) {\n        dispatch(updatePersonDetails({ ...personDetailsData, [key]: v }));\n      }\n    } else {\n      dispatch(updatePersonDetails(newData));\n    }\n  };\n\n  return [personDetailsData, updateDetails];\n};\n","import React from 'react';\nimport {\n  Box, Flex, List, ListItem, Text\n} from '@chakra-ui/react';\nimport { Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport Icon from '../../../components/Icon';\nimport { usePersonState } from '../../../hooks/user';\n\n// @TODO: Needs to do showBack and internalNavigation\n\nconst PullFundsOptions = () => {\n  const { t } = useTranslation();\n  const [person] = usePersonState();\n  return (\n    <Box className=\"page\" p=\"15px\">\n      <List>\n        <ListItem marginBottom={3} padding={3} border=\"1px solid var(--border-color-1)\">\n          <Link to=\"/pullfunds/from/bank\">\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n              <div>\n                <Text variant=\"large\" fontSize=\"20px\" className=\"label\">\n                  {t('pull_funds_options.fromBankTitle')}\n                </Text>\n                <Text variant=\"small\" className=\"value\">{t('pull_funds_options.fromBankDesc')}</Text>\n              </div>\n              <div className=\"action\">\n                <Icon icon=\"arrow-right\" width=\"8px\" />\n              </div>\n            </Flex>\n          </Link>\n        </ListItem>\n        {/* Pull from card only for US Country */}\n        {person?.address?.country.toUpperCase() === 'US'\n          ? (\n            <ListItem marginBottom={3} padding={3} border=\"1px solid var(--border-color-1)\">\n              <Link to=\"/pullfunds/from/card\">\n                <Flex alignItems=\"center\" justifyContent=\"space-between\">\n                  <div>\n                    <Text variant=\"large\" fontSize=\"20px\" className=\"label\">{t('pull_funds_options.fromCardTitle')}</Text>\n                    <Text variant=\"small\" className=\"value\">{t('pull_funds_options.fromCardDesc')}</Text>\n                  </div>\n                  <div className=\"action\">\n                    <Icon icon=\"arrow-right\" width=\"8px\" />\n                  </div>\n                </Flex>\n              </Link>\n            </ListItem>\n          )\n          : null }\n\n        <ListItem marginBottom={3} padding={3} border=\"1px solid var(--border-color-1)\">\n          <Link to=\"/pullfunds/intrabank/form\">\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n              <div>\n                <Text variant=\"large\" fontSize=\"20px\" className=\"label\">{t('pull_funds_options.intrabankTitle')}</Text>\n                <Text variant=\"small\" className=\"value\">{t('pull_funds_options.intrabankDesc')}</Text>\n              </div>\n              <div className=\"action\">\n                <Icon icon=\"arrow-right\" width=\"8px\" />\n              </div>\n            </Flex>\n          </Link>\n        </ListItem>\n        <ListItem marginBottom={3} padding={3} border=\"1px solid var(--border-color-1)\">\n          <Link to=\"/pullfunds/otherbank/form\">\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n              <div>\n                <Text variant=\"large\" fontSize=\"20px\" className=\"label\">{t('pull_funds_options.toAnotherBankTitle')}</Text>\n                <Text variant=\"small\" className=\"value\">{t('pull_funds_options.toAnotherBankDesc')}</Text>\n              </div>\n              <div className=\"action\">\n                <Icon icon=\"arrow-right\" width=\"8px\" />\n              </div>\n            </Flex>\n          </Link>\n        </ListItem>\n      </List>\n    </Box>\n  );\n};\n\nexport default PullFundsOptions;\n"],"names":["usePersonState","dispatch","useDispatch","personDetailsData","useAppSelector","state","user","personDetails","shallowEqual","newData","value","key","v","undefined","updatePersonDetails","_objectSpread","_defineProperty","_person$address","t","useTranslation","_usePersonState","person","_slicedToArray","_jsx","Box","className","p","children","_jsxs","List","ListItem","marginBottom","padding","border","Link","to","Flex","alignItems","justifyContent","Text","variant","fontSize","Icon","icon","width","address","country","toUpperCase"],"sourceRoot":""}