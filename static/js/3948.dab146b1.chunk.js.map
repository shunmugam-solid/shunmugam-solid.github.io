{"version":3,"file":"static/js/3948.dab146b1.chunk.js","mappings":"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","sources":["webpack://drop-in-ui/./src/views/dashboard/dashboard/Dashboard.module.css?64cf","views/dashboard/dashboard/Dashboard.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"hideItInMobile\":\"Dashboard_hideItInMobile__6wcqm\",\"showItInMobile\":\"Dashboard_showItInMobile__BlcTM\",\"accountLabel\":\"Dashboard_accountLabel__BRzeD\"};","import React, {\n  useCallback, useMemo, useRef\n} from 'react';\nimport {\n  Box, Flex, HStack, Text, useClipboard, VStack\n} from '@chakra-ui/react';\nimport { shallowEqual } from 'react-redux';\n\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate } from 'react-router-dom';\nimport { useAppSelector } from '../../../hooks/store';\nimport { currencyFormat } from '../../../utils/general';\nimport Icon from '../../../components/Icon';\nimport ContactList from '../../contacts/ContactList/ContactList';\nimport TransactionsList from '../../transactions/TransactionList/TransactionsList';\nimport CardList, { CardListRef } from '../../cards/CardList/CardList';\nimport style from './Dashboard.module.css';\nimport { useModuleConfig } from '../../../hooks/module';\nimport { useDrawer } from '../../../hooks/drawer';\n\nconst AccountDetails = React.lazy(() => import('../../ao/Account/AccountDetails/AccountDetails'));\n\n/**\n * Dashboard Page\n * @returns\n */\nconst Dashboard = () => {\n  const { t } = useTranslation();\n  const { open: openDrawer } = useDrawer();\n  const navigate = useNavigate();\n\n  const user = useAppSelector((store) => store.user.personDetails, shallowEqual);\n  const { selectedAccount: account, selectedAccountType: accountType } = useAppSelector((store) => store.account, shallowEqual);\n  const business = useAppSelector((store) => store.business.selectedBusiness, shallowEqual);\n\n  const config = useModuleConfig('dashboard');\n\n  const { hasCopied: hasAccountCopied, onCopy: onAccountCopy } = useClipboard(account?.accountNumber || '', 2000);\n\n  const cardRef = useRef<CardListRef>(null);\n\n  const headerText = useMemo(() => {\n    if (business) {\n      return business.legalName;\n    }\n    return `${user?.firstName} ${user?.lastName}`;\n  }, [user, business]);\n\n  const accountDetails = useCallback(() => {\n    openDrawer(AccountDetails);\n  }, []);\n\n  const bussinessDetails = useCallback(() => {\n\n  }, []);\n\n  const fund = useCallback(() => {\n    navigate('/fund');\n  }, []);\n\n  const sendMoney = useCallback(() => {\n  }, []);\n\n  return (\n\n    <div className=\"page\" id=\"dashboard-page\">\n      {config.showBusinessProfile\n        ? (\n          <Box mb=\"24px\">\n            <Flex>\n              <Text data-testid=\"heading\" variant=\"large\" mr=\"auto\">{headerText}</Text>\n              {business ? (\n                <Text variant=\"small\" cursor=\"pointer\" className=\"text-light\" onClick={bussinessDetails}>\n                  View Details\n                </Text>\n              ) : null}\n            </Flex>\n          </Box>\n        ) : null}\n\n      <Box mb=\"24px\">\n        <Flex gap=\"24px\" flexWrap={{ base: 'wrap', md: 'nowrap' }}>\n          {config.showAccountDetails\n            ? (\n              <Box\n                width={{ base: '100%', md: account?.type !== 'cardAccount' ? '50%' : '100%' }}\n                borderRadius=\"4px\"\n                backgroundColor=\"var(--dashboard-card-background-color)\"\n                color=\"var(--dashboard-card-text-color)\"\n                padding=\"24px\"\n              >\n                <Flex mb=\"12px\" justifyContent=\"space-between\">\n                  <Text className={style.accountLabel} lineHeight=\"24px\" fontSize=\"20px\">{account?.label}</Text>\n                  <Text cursor=\"pointer\" fontSize=\"14px\" textDecoration=\"underline\" onClick={accountDetails} className={style.hideItInMobile}>View Details</Text>\n\n                  <Text display=\"none\" fontWeight=\"bold\" textAlign=\"left\" mb=\"8px\" fontSize=\"14px\" className={style.showItInMobile}>{account ? currencyFormat(account.availableBalance, account.currency) : null }</Text>\n\n                </Flex>\n                <Text fontWeight=\"bold\" textAlign=\"left\" mb=\"34px\" fontSize=\"30px\" className={style.hideItInMobile}>{account ? currencyFormat(account.availableBalance, account.currency) : null }</Text>\n                <Flex justify=\"space-between\">\n                  <Flex gap=\"21px\" alignItems=\"center\">\n                    <Text color=\"var(--dashboard-card-text-color)\" variant=\"regular\">\n                      {t('dashboard.dashboard_accNo_title')}\n                      {' '}\n                      {account?.accountNumber}\n                    </Text>\n                    {hasAccountCopied\n                      ? <Icon icon=\"tick\" cursor=\"pointer\" size={12} />\n                      : <Icon onClick={onAccountCopy} icon=\"copy\" cursor=\"pointer\" size={12} /> }\n                  </Flex>\n                  <Text display=\"none\" cursor=\"pointer\" fontSize=\"14px\" textDecoration=\"underline\" color=\"var(--dashboard-card-text-color)\" onClick={accountDetails} className={style.showItInMobile}>View Details</Text>\n                </Flex>\n              </Box>\n            ) : null }\n          {account?.type !== 'cardAccount'\n            ? (\n              <VStack width={{ base: '100%', md: '50%' }}>\n                {config.showTransferMoney\n                  ? (\n                    <Box cursor=\"pointer\" width=\"100%\" padding=\"16px 24px 16px 16px\" backgroundColor=\"var(--list-item-background)\" onClick={fund}>\n                      <HStack justifyContent=\"space-between\">\n                        <div className=\"details\">\n                          <Text fontSize=\"20px\" lineHeight=\"24px\" paddingBottom=\"12px\" variant=\"regular\" textAlign=\"left\">\n                            {t('dashboard.dashboard_row_fund_title')}\n                          </Text>\n                          <Text variant=\"small\" textAlign=\"left\">\n                            {t('dashboard.dashboard_row_fund_desc', {\n                              value: account?.label\n                            })}\n                          </Text>\n                        </div>\n                        <Icon style={{ marginLeft: '8px' }} icon=\"Arrow-small-right\" size={12} className=\"svg-light-grey-1\" />\n                      </HStack>\n                    </Box>\n                  ) : null }\n                {config.showSendMoney\n                  ? (\n                    <Box cursor=\"pointer\" width=\"100%\" padding=\"16px 24px 16px 16px\" backgroundColor=\"var(--list-item-background)\" onClick={sendMoney}>\n                      <HStack justifyContent=\"space-between\">\n                        <div className=\"details\">\n                          <Text fontSize=\"20px\" lineHeight=\"24px\" paddingBottom=\"12px\" variant=\"regular\" textAlign=\"left\">\n                            {t('dashboard.dashboard_row_pay_title')}\n                          </Text>\n                          <Text variant=\"small\" textAlign=\"left\">\n                            {t('dashboard.dashboard_row_pay_desc', {\n                              value: account?.label\n                            })}\n                          </Text>\n                        </div>\n                        <Icon style={{ marginLeft: '8px' }} icon=\"Arrow-small-right\" size={12} className=\"svg-light-grey-1\" />\n\n                      </HStack>\n                    </Box>\n                  ) : null }\n              </VStack>\n            ) : null }\n        </Flex>\n      </Box>\n      {config.showContacts\n        ? (\n          <Box>\n            <ContactList showSearch={false} showAdd={false} showEmptyState={false} showCompactView pagination={false} contactsPerView={10} showBack={false} />\n          </Box>\n        ) : null }\n      {config.showTransactions\n        ? (\n          <Box mt=\"24px\" mb=\"24px\">\n            <TransactionsList\n              accountType={accountType}\n              filterRequest={undefined}\n              showFilter={false}\n              showExport={false}\n              showMonth={false}\n              showSearch={false}\n              showCompactView\n              scrollBoxHeight={undefined}\n              transactionsPerView={20}\n              dateFormat=\"MMM d, yyyy 'at' h:mm aa\"\n            />\n          </Box>\n        ) : null }\n      {config.showCards\n        ? (\n          <Box>\n            <CardList ref={cardRef} showSearch={false} showAddCard cardsPerView={20} pagination={false} showExtendedDetails={false} showCompactView />\n          </Box>\n        ) : null }\n    </div>\n\n  );\n};\n\nexport default Dashboard;\n"],"names":["AccountDetails","React","t","useTranslation","openDrawer","useDrawer","open","navigate","useNavigate","user","useAppSelector","store","personDetails","shallowEqual","_useAppSelector","account","selectedAccount","accountType","selectedAccountType","business","selectedBusiness","config","useModuleConfig","_useClipboard","useClipboard","accountNumber","hasAccountCopied","hasCopied","onAccountCopy","onCopy","cardRef","useRef","headerText","useMemo","legalName","concat","firstName","lastName","accountDetails","useCallback","bussinessDetails","fund","sendMoney","_jsxs","className","id","children","showBusinessProfile","_jsx","Box","mb","Flex","Text","variant","mr","cursor","onClick","gap","flexWrap","base","md","showAccountDetails","width","type","borderRadius","backgroundColor","color","padding","justifyContent","style","lineHeight","fontSize","label","textDecoration","display","fontWeight","textAlign","currencyFormat","availableBalance","currency","justify","alignItems","Icon","icon","size","VStack","showTransferMoney","HStack","paddingBottom","value","marginLeft","showSendMoney","showContacts","ContactList","showSearch","showAdd","showEmptyState","showCompactView","pagination","contactsPerView","showBack","showTransactions","mt","TransactionsList","filterRequest","undefined","showFilter","showExport","showMonth","scrollBoxHeight","transactionsPerView","dateFormat","showCards","CardList","ref","showAddCard","cardsPerView","showExtendedDetails"],"sourceRoot":""}