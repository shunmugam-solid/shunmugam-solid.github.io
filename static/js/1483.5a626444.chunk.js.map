{"version":3,"file":"static/js/1483.5a626444.chunk.js","mappings":"2NACA,EAAyB,yBAAzB,EAA+D,6B,uCCazDA,EAAiBC,EAAAA,MAAW,kBAAM,iEAA8B,IAyCtE,EAvCiB,WACf,IAAQC,GAAMC,EAAAA,EAAAA,KAAND,EACFE,GAAWC,EAAAA,EAAAA,MACjBC,GAAyBC,EAAAA,EAAAA,KAAjBC,EAAIF,EAAJE,KAAMC,EAAMH,EAANG,OAERC,GAAkBC,EAAAA,EAAAA,KAAe,SAACC,GAAK,OAAKA,EAAMC,QAAQH,eAAe,GAAEI,EAAAA,IAE3EC,GAAWC,EAAAA,EAAAA,cAAY,SAACC,GACxBP,IACFN,GAASc,EAAAA,EAAAA,IAAkB,CAAED,SAAAA,EAAUE,UAAWT,EAAgBU,GAAIC,SAAU,SAChFb,EAAKR,GAET,GAAG,CAACU,IAEJ,OACEY,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMC,UACnBF,EAAAA,EAAAA,KAACG,EAAAA,EAAO,CACNC,UAAWC,EACXC,QAAS1B,EAAE,0BACX2B,UAAQ,EACRC,OAAQ,WACNrB,GACF,EAAEe,UAEFO,EAAAA,EAAAA,MAACC,EAAAA,GAAG,CAACC,MAAM,OAAMT,SAAA,EACfO,EAAAA,EAAAA,MAACG,EAAAA,GAAM,CAACC,OAAO,kCAAkCZ,UAAWI,EAAcS,QAAS,kBAAMrB,EAAS,WAAW,EAACS,SAAA,EAC5GF,EAAAA,EAAAA,KAACe,EAAAA,GAAI,CAACC,QAAQ,QAAQC,GAAG,OAAMf,SAAEtB,EAAE,oCACnCoB,EAAAA,EAAAA,KAACkB,EAAAA,EAAI,CAACC,KAAK,oBAAoBC,KAAM,GAAInB,UAAU,yBAErDQ,EAAAA,EAAAA,MAACG,EAAAA,GAAM,CAACC,OAAO,kCAAkCZ,UAAWI,EAAcS,QAAS,kBAAMrB,EAAS,UAAU,EAACS,SAAA,EAC3GF,EAAAA,EAAAA,KAACe,EAAAA,GAAI,CAACC,QAAQ,QAAQC,GAAG,OAAMf,SAAEtB,EAAE,mCACnCoB,EAAAA,EAAAA,KAACkB,EAAAA,EAAI,CAACC,KAAK,oBAAoBC,KAAM,GAAInB,UAAU,8BAM/D,C","sources":["webpack://drop-in-ui/./src/views/cards/CardCreation/CardType/CardType.module.css?7c01","views/cards/CardCreation/CardType/CardType.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"action\":\"CardType_action__OY8r7\",\"widgetBody\":\"CardType_widgetBody__1UFOD\"};","import React, { useCallback } from 'react';\nimport {\n  Text, HStack, Box\n} from '@chakra-ui/react';\nimport { useTranslation } from 'react-i18next';\nimport { shallowEqual, useDispatch } from 'react-redux';\nimport MiniBox from '../../../../layout/MiniBox';\nimport Icon from '../../../../components/Icon';\nimport style from './CardType.module.css';\nimport { updateCardPayload } from '../../../../store/actionCreators/card';\nimport { cardPayload } from '../../../../types/card';\nimport { useAppSelector } from '../../../../hooks/store';\nimport { useDrawer } from '../../../../hooks/drawer';\n\nconst CardCreateInfo = React.lazy(() => import('../CardInfo/CardInfo'));\n\nconst CardType = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const { open, goBack } = useDrawer();\n\n  const selectedAccount = useAppSelector((store) => store.account.selectedAccount, shallowEqual);\n\n  const onSelect = useCallback((cardType: cardPayload['cardType']) => {\n    if (selectedAccount) {\n      dispatch(updateCardPayload({ cardType, accountId: selectedAccount.id, currency: 'USD' } as cardPayload));\n      open(CardCreateInfo);\n    }\n  }, [selectedAccount]);\n\n  return (\n    <div className=\"page\">\n      <MiniBox\n        bodyClass={style.widgetBody}\n        heading={t('create_card_type.title')}\n        showBack\n        onBack={() => {\n          goBack();\n        }}\n      >\n        <Box width=\"100%\">\n          <HStack border=\"1px solid var(--border-color-1)\" className={style.action} onClick={() => onSelect('physical')}>\n            <Text variant=\"large\" mr=\"auto\">{t('create_card_type.physicalCard')}</Text>\n            <Icon icon=\"Arrow-small-right\" size={12} className=\"svg-light-grey-1\" />\n          </HStack>\n          <HStack border=\"1px solid var(--border-color-1)\" className={style.action} onClick={() => onSelect('virtual')}>\n            <Text variant=\"large\" mr=\"auto\">{t('create_card_type.virtualCard')}</Text>\n            <Icon icon=\"Arrow-small-right\" size={12} className=\"svg-light-grey-1\" />\n          </HStack>\n        </Box>\n      </MiniBox>\n    </div>\n  );\n};\n\nexport default CardType;\n"],"names":["CardCreateInfo","React","t","useTranslation","dispatch","useDispatch","_useDrawer","useDrawer","open","goBack","selectedAccount","useAppSelector","store","account","shallowEqual","onSelect","useCallback","cardType","updateCardPayload","accountId","id","currency","_jsx","className","children","MiniBox","bodyClass","style","heading","showBack","onBack","_jsxs","Box","width","HStack","border","onClick","Text","variant","mr","Icon","icon","size"],"sourceRoot":""}