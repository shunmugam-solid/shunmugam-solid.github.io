{"version":3,"file":"static/js/9881.9fd3bb76.chunk.js","mappings":"2NACA,EAAiC,uCAAjC,EAA2F,yCAA3F,EAAiL,+B,6EC0KjL,EAxJuB,WACrB,IAAQA,GAAMC,EAAAA,EAAAA,KAAND,EACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACTC,GAAOC,EAAAA,EAAAA,MAAPD,GAIFE,GAAUC,EAAAA,EAAAA,KAAe,SAACC,GAAK,OAAKA,EAAMF,QAAQG,eAAe,GAAEC,EAAAA,IAI9BC,GAAvCC,EAAAA,EAAAA,MADFC,YAAAA,OAAW,IAAAF,EAAG,cAAaA,EAG7BG,GAEIC,EAAAA,EAAAA,IAAgB,YADlBC,EAAgBF,EAAhBE,iBAAkBC,EAAkBH,EAAlBG,mBAAoBC,EAAsBJ,EAAtBI,uBAAwBC,EAAiBL,EAAjBK,kBAGxDC,GAAaC,EAAAA,EAAAA,IAA6E,kBAA1FD,SAEFE,GAAUC,EAAAA,EAAAA,UAAQ,WAAO,IAADC,EAAAC,EACtBC,GAAW,OAAPpB,QAAO,IAAPA,GAAc,QAAPkB,EAAPlB,EAASqB,aAAK,IAAAH,OAAP,EAAPA,EAAgBF,WAAkB,OAAPhB,QAAO,IAAPA,GAAa,QAANmB,EAAPnB,EAASsB,YAAI,IAAAH,OAAN,EAAPA,EAAeH,SACpD,OAAOI,EAAC,GAAAG,OACHH,EAAEI,MAAK,KAAAD,OAERH,EAAEK,KAAI,KAAAF,OAENH,EAAEM,MAAK,KAAAH,OAAIH,EAAEO,YACb,IACN,GAAG,CAAC3B,IAEE4B,GAAgBC,EAAAA,EAAAA,cAAY,WAChC,GAAW,OAAP7B,QAAO,IAAPA,GAAAA,EAASF,GAAI,CACf,IAAMgC,EAAmB,OAAP9B,QAAO,IAAPA,OAAO,EAAPA,EAASF,GAC3BF,GAASmC,EAAAA,EAAAA,IAAiBD,IACvBE,MAAK,YACJC,EAAAA,EAAAA,IAAYC,EAAAA,GAAQC,gBAAiB,CAAEL,UAAAA,IACnB,gBAAhBvB,GAAiCb,EAAS,YAChD,IAAG0C,MAAMC,EAAAA,GACb,CACF,GAAG,CAACrC,IASJ,OAPAsC,EAAAA,EAAAA,YAAU,WACJxC,GACFF,GAAS2C,EAAAA,EAAAA,IAAezC,IACrBsC,MAAMC,EAAAA,GAEb,GAAG,CAACvC,IAECE,GAIHwC,EAAAA,EAAAA,KAACC,EAAAA,GAAG,CAACC,UAAU,OAAMC,UACnBH,EAAAA,EAAAA,KAACI,EAAAA,EAAO,CACNC,QAASrD,EAAE,yBACXsB,SAA0B,mBAAhBP,KAAsCO,EAChDgC,OAAQ,YACNb,EAAAA,EAAAA,IAAYc,EAAAA,GAAOC,aAAc,CAC/BC,KAAM,mBAGY,mBAAhB1C,GACFb,EAAS,YAEb,EAAEiD,UAEFO,EAAAA,EAAAA,MAACT,EAAAA,GAAG,CAACU,MAAM,OAAOC,WAAW,OAAMT,SAAA,EACjCO,EAAAA,EAAAA,MAACT,EAAAA,GAAG,CAACY,OAAO,kCAAkCX,UAAWY,EAAqBX,SAAA,EAC5EO,EAAAA,EAAAA,MAACT,EAAAA,GAAG,CAACC,UAAWY,EAAuBX,SAAA,EACrCH,EAAAA,EAAAA,KAACe,EAAAA,GAAI,CAACC,QAAQ,UAAUC,EAAE,MAAMf,UAAU,aAAagB,UAAU,OAAMf,SAAEnD,EAAE,4BAC3EgD,EAAAA,EAAAA,KAACe,EAAAA,GAAI,CAACC,QAAQ,UAAUG,SAAS,KAAKF,EAAE,MAAMC,UAAU,OAAMf,SAAE3C,EAAQ4D,OAAS,WAEnFV,EAAAA,EAAAA,MAACT,EAAAA,GAAG,CAACC,UAAWY,EAAuBX,SAAA,EACrCH,EAAAA,EAAAA,KAACe,EAAAA,GAAI,CAACC,QAAQ,UAAUC,EAAE,MAAMf,UAAU,aAAagB,UAAU,OAAMf,SAAEnD,EAAE,8BAC3EgD,EAAAA,EAAAA,KAACe,EAAAA,GAAI,CAACC,QAAQ,UAAUG,SAAS,KAAKF,EAAE,MAAMC,UAAU,OAAMf,SAAE3C,EAAQ6D,OAAS,WAEnFX,EAAAA,EAAAA,MAACT,EAAAA,GAAG,CAACC,UAAWY,EAAuBX,SAAA,EACrCH,EAAAA,EAAAA,KAACe,EAAAA,GAAI,CAACC,QAAQ,UAAUC,EAAE,MAAMf,UAAU,aAAagB,UAAU,OAAMf,SAAEnD,EAAE,8BAC3EgD,EAAAA,EAAAA,KAACe,EAAAA,GAAI,CAACC,QAAQ,UAAUG,SAAS,KAAKF,EAAE,MAAMC,UAAU,OAAMf,SAAE3B,WAIpEwB,EAAAA,EAAAA,KAACe,EAAAA,GAAI,CAACC,QAAQ,QAAQM,GAAG,OAAMnB,SAAEnD,EAAE,8BAEnC0D,EAAAA,EAAAA,MAACT,EAAAA,GAAG,CAACsB,GAAG,OAAMpB,SAAA,CACXjC,GAEGwC,EAAAA,EAAAA,MAACc,EAAAA,GAAM,CACLtB,UAAWY,EACXW,QAAS,WACHjE,EAAQF,KACVmC,EAAAA,EAAAA,IAAYC,EAAAA,GAAQgC,gBAAiB,CACnCpC,UAAW9B,EAAQF,IAGzB,EAAE6C,SAAA,EAEFH,EAAAA,EAAAA,KAACC,EAAAA,GAAG,CAAAE,UACFH,EAAAA,EAAAA,KAACe,EAAAA,GAAI,CAACC,QAAQ,UAASb,SAAEnD,EAAE,oCAE7BgD,EAAAA,EAAAA,KAAC2B,EAAAA,EAAI,CAACC,KAAK,oBAAoBC,KAAM,GAAI3B,UAAU,wBAEnD,KACL/B,GAEGuC,EAAAA,EAAAA,MAACc,EAAAA,GAAM,CACLtB,UAAWY,EACXW,QAAS,WACHjE,EAAQF,KACVmC,EAAAA,EAAAA,IAAYC,EAAAA,GAAQoC,yBAA0B,CAC5CxC,UAAW9B,EAAQF,IAGzB,EAAE6C,SAAA,EAEFH,EAAAA,EAAAA,KAACC,EAAAA,GAAG,CAAAE,UACFH,EAAAA,EAAAA,KAACe,EAAAA,GAAI,CAACC,QAAQ,UAASb,SAAEnD,EAAE,uCAE7BgD,EAAAA,EAAAA,KAAC2B,EAAAA,EAAI,CAACC,KAAK,oBAAoBC,KAAM,GAAI3B,UAAU,wBAEnD,KACL9B,GAEGsC,EAAAA,EAAAA,MAACc,EAAAA,GAAM,CACLtB,UAAWY,EACXW,QAAS,WACPvE,EAAS,iBACX,EAAEiD,SAAA,EAEFH,EAAAA,EAAAA,KAACC,EAAAA,GAAG,CAAAE,UACFH,EAAAA,EAAAA,KAACe,EAAAA,GAAI,CAACC,QAAQ,UAASb,SAAEnD,EAAE,2CAE7BgD,EAAAA,EAAAA,KAAC2B,EAAAA,EAAI,CAACC,KAAK,oBAAoBC,KAAM,GAAI3B,UAAU,wBAEnD,KACL7B,GAEGqC,EAAAA,EAAAA,MAACc,EAAAA,GAAM,CAACtB,UAAWY,EAAcW,QAASrC,EAAce,SAAA,EACtDH,EAAAA,EAAAA,KAACC,EAAAA,GAAG,CAAAE,UACFH,EAAAA,EAAAA,KAACe,EAAAA,GAAI,CAACC,QAAQ,UAASb,SAAEnD,EAAE,sCAE7BgD,EAAAA,EAAAA,KAAC2B,EAAAA,EAAI,CAACC,KAAK,oBAAoBC,KAAM,GAAI3B,UAAU,wBAEnD,eA9FP,IAoGX,C","sources":["webpack://drop-in-ui/./src/views/contacts/ContactDetails/ContactDetails.module.css?7a0f","views/contacts/ContactDetails/ContactDetails.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"detailsInfoBox\":\"ContactDetails_detailsInfoBox__whPR5\",\"accountValueInfo\":\"ContactDetails_accountValueInfo__uZO6Q\",\"copy\":\"ContactDetails_copy__i+O6w\",\"action\":\"ContactDetails_action__qCTDt\"};","import React, { useCallback, useEffect, useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Box, Text, HStack\n} from '@chakra-ui/react';\nimport { shallowEqual } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport Icon from '../../../components/Icon';\nimport style from './ContactDetails.module.css';\nimport { useAppAsyncDispatch, useAppSelector } from '../../../hooks/store';\nimport { deleteContact as deleteContactApi, getContactById } from '../../../store/middlewares/contact';\nimport { apiErrorHandler } from '../../../utils/general';\nimport { sendMessage } from '../../../utils/sdk';\nimport { useModuleConfig, useModuleData, useModulePageData } from '../../../hooks/module';\nimport { Data } from '../../../modules/Contacts';\nimport { ContactDetailsData } from '../../../modules/Contacts/ContactDetails';\nimport { COMMON, CONTACT } from '../../../const/messages';\nimport MiniBox from '../../../layout/MiniBox';\n\nconst ContactDetails = () => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const dispatch = useAppAsyncDispatch();\n  const { id } = useParams<{\n    id: string\n  }>();\n\n  const contact = useAppSelector((store) => store.contact.selectedContact, shallowEqual);\n\n  const {\n    startScreen = 'contactList',\n  } = useModuleData<Data<'contactDetails'>>();\n\n  const {\n    showMakeAPayment, showPaymentHistory, showEditContactDetails, showDeleteContact\n  } = useModuleConfig('contacts');\n\n  const { showBack } = useModulePageData<ContactDetailsData, Data<'contactDetails'>['startScreen']>('contactDetails');\n\n  const address = useMemo(() => {\n    const a = contact?.check?.address || contact?.card?.address;\n    return a ? (\n      `${a.line1\n      },${\n        a.city\n      },${\n        a.state},${a.postalCode}`\n    ) : 'NA';\n  }, [contact]);\n\n  const deleteContact = useCallback(() => {\n    if (contact?.id) {\n      const contactId = contact?.id;\n      dispatch(deleteContactApi(contactId))\n        .then(() => {\n          sendMessage(CONTACT.CONTACT_DELETED, { contactId });\n          if (startScreen === 'contactList') { navigate('/contacts'); }\n        }).catch(apiErrorHandler);\n    }\n  }, [contact]);\n\n  useEffect(() => {\n    if (id) {\n      dispatch(getContactById(id))\n        .catch(apiErrorHandler);\n    }\n  }, [id]);\n\n  if (!contact) {\n    return null;\n  }\n  return (\n    <Box className=\"page\">\n      <MiniBox\n        heading={t('contact_details.title')}\n        showBack={startScreen !== 'contactDetails' || !!showBack}\n        onBack={() => {\n          sendMessage(COMMON.BACK_PRESSED, {\n            from: 'contactDetails'\n          });\n\n          if (startScreen !== 'contactDetails') {\n            navigate('/contacts');\n          }\n        }}\n      >\n        <Box width=\"100%\" paddingTop=\"15px\">\n          <Box border=\"1px solid var(--border-color-1)\" className={style.detailsInfoBox}>\n            <Box className={style.accountValueInfo}>\n              <Text variant=\"regular\" w=\"40%\" className=\"text-light\" textAlign=\"left\">{t('contact_details.phone')}</Text>\n              <Text variant=\"regular\" fontSize=\"sm\" w=\"60%\" textAlign=\"left\">{contact.phone || 'NA'}</Text>\n            </Box>\n            <Box className={style.accountValueInfo}>\n              <Text variant=\"regular\" w=\"40%\" className=\"text-light\" textAlign=\"left\">{t('contact_details.emailId')}</Text>\n              <Text variant=\"regular\" fontSize=\"sm\" w=\"60%\" textAlign=\"left\">{contact.email || 'NA'}</Text>\n            </Box>\n            <Box className={style.accountValueInfo}>\n              <Text variant=\"regular\" w=\"40%\" className=\"text-light\" textAlign=\"left\">{t('contact_details.address')}</Text>\n              <Text variant=\"regular\" fontSize=\"sm\" w=\"60%\" textAlign=\"left\">{address}</Text>\n            </Box>\n          </Box>\n\n          <Text variant=\"large\" mb=\"16px\">{t('contact_details.actions')}</Text>\n\n          <Box pb=\"16px\">\n            {showMakeAPayment\n              ? (\n                <HStack\n                  className={style.action}\n                  onClick={() => {\n                    if (contact.id) {\n                      sendMessage(CONTACT.PAYMENT_PRESSED, {\n                        contactId: contact.id\n                      });\n                    }\n                  }}\n                >\n                  <Box>\n                    <Text variant=\"regular\">{t('contact_details.makePayment')}</Text>\n                  </Box>\n                  <Icon icon=\"Arrow-small-right\" size={12} className=\"svg-light-grey-1\" />\n                </HStack>\n              ) : null }\n            {showPaymentHistory\n              ? (\n                <HStack\n                  className={style.action}\n                  onClick={() => {\n                    if (contact.id) {\n                      sendMessage(CONTACT.VIEW_TRANSACTION_PRESSED, {\n                        contactId: contact.id\n                      });\n                    }\n                  }}\n                >\n                  <Box>\n                    <Text variant=\"regular\">{t('contact_details.paymentHistory')}</Text>\n                  </Box>\n                  <Icon icon=\"Arrow-small-right\" size={12} className=\"svg-light-grey-1\" />\n                </HStack>\n              ) : null }\n            {showEditContactDetails\n              ? (\n                <HStack\n                  className={style.action}\n                  onClick={() => {\n                    navigate('/contacts/edit');\n                  }}\n                >\n                  <Box>\n                    <Text variant=\"regular\">{t('contact_details.editContactDetails')}</Text>\n                  </Box>\n                  <Icon icon=\"Arrow-small-right\" size={12} className=\"svg-light-grey-1\" />\n                </HStack>\n              ) : null }\n            {showDeleteContact\n              ? (\n                <HStack className={style.action} onClick={deleteContact}>\n                  <Box>\n                    <Text variant=\"regular\">{t('contact_details.deleteContact')}</Text>\n                  </Box>\n                  <Icon icon=\"Arrow-small-right\" size={12} className=\"svg-light-grey-1\" />\n                </HStack>\n              ) : null }\n          </Box>\n        </Box>\n      </MiniBox>\n    </Box>\n  );\n};\n\nexport default ContactDetails;\n"],"names":["t","useTranslation","navigate","useNavigate","dispatch","useAppAsyncDispatch","id","useParams","contact","useAppSelector","store","selectedContact","shallowEqual","_useModuleData$startS","useModuleData","startScreen","_useModuleConfig","useModuleConfig","showMakeAPayment","showPaymentHistory","showEditContactDetails","showDeleteContact","showBack","useModulePageData","address","useMemo","_contact$check","_contact$card","a","check","card","concat","line1","city","state","postalCode","deleteContact","useCallback","contactId","deleteContactApi","then","sendMessage","CONTACT","CONTACT_DELETED","catch","apiErrorHandler","useEffect","getContactById","_jsx","Box","className","children","MiniBox","heading","onBack","COMMON","BACK_PRESSED","from","_jsxs","width","paddingTop","border","style","Text","variant","w","textAlign","fontSize","phone","email","mb","pb","HStack","onClick","PAYMENT_PRESSED","Icon","icon","size","VIEW_TRANSACTION_PRESSED"],"sourceRoot":""}