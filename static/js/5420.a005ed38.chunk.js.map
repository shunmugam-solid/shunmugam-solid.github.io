{"version":3,"file":"static/js/5420.a005ed38.chunk.js","mappings":"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","sources":["../node_modules/@zag-js/focus-visible/src/index.ts","../node_modules/@chakra-ui/checkbox/dist/chakra-ui-checkbox.esm.js","../node_modules/@chakra-ui/form-control/dist/chakra-ui-form-control.esm.js"],"sourcesContent":["type Modality = \"keyboard\" | \"pointer\"\ntype HandlerEvent = PointerEvent | MouseEvent | KeyboardEvent | FocusEvent\ntype Handler = (modality: Modality, e: HandlerEvent) => void\ntype FocusVisibleCallback = (isFocusVisible: boolean) => void\n\nlet hasSetup = false\nlet modality: Modality | null = null\nlet hasEventBeforeFocus = false\n\nconst handlers = new Set<Handler>()\n\nconst isMac = typeof window !== \"undefined\" && window.navigator != null ? /^Mac/.test(window.navigator.platform) : false\n\nfunction isValidKey(event: KeyboardEvent) {\n  return !(event.metaKey || (!isMac && event.altKey) || event.ctrlKey)\n}\n\nfunction trigger(modality: Modality, event: HandlerEvent) {\n  handlers.forEach((handler) => handler(modality, event))\n}\n\nfunction onKeyboardEvent(event: KeyboardEvent) {\n  hasEventBeforeFocus = true\n  if (isValidKey(event)) {\n    modality = \"keyboard\"\n    trigger(\"keyboard\", event)\n  }\n}\n\nfunction onPointerEvent(event: PointerEvent | MouseEvent) {\n  modality = \"pointer\"\n  if (event.type === \"mousedown\" || event.type === \"pointerdown\") {\n    hasEventBeforeFocus = true\n    trigger(\"pointer\", event)\n  }\n}\n\nfunction onWindowFocus(event: FocusEvent) {\n  // Firefox fires two extra focus events when the user first clicks into an iframe:\n  // first on the window, then on the document. We ignore these events so they don't\n  // cause keyboard focus rings to appear.\n  if (event.target === window || event.target === document) {\n    return\n  }\n\n  // If a focus event occurs without a preceding keyboard or pointer event, switch to keyboard modality.\n  // This occurs, for example, when navigating a form with the next/previous buttons on iOS.\n  if (!hasEventBeforeFocus) {\n    modality = \"keyboard\"\n    trigger(\"keyboard\", event)\n  }\n\n  hasEventBeforeFocus = false\n}\n\nfunction onWindowBlur() {\n  // When the window is blurred, reset state. This is necessary when tabbing out of the window,\n  // for example, since a subsequent focus event won't be fired.\n  hasEventBeforeFocus = false\n}\n\nfunction isFocusVisible() {\n  return modality !== \"pointer\"\n}\n\nfunction setupGlobalFocusEvents() {\n  if (typeof window === \"undefined\" || hasSetup) {\n    return\n  }\n\n  // Programmatic focus() calls shouldn't affect the current input modality.\n  // However, we need to detect other cases when a focus event occurs without\n  // a preceding user event (e.g. screen reader focus). Overriding the focus\n  // method on HTMLElement.prototype is a bit hacky, but works.\n  const { focus } = HTMLElement.prototype\n  HTMLElement.prototype.focus = function focusElement(...args) {\n    hasEventBeforeFocus = true\n    focus.apply(this, args)\n  }\n\n  document.addEventListener(\"keydown\", onKeyboardEvent, true)\n  document.addEventListener(\"keyup\", onKeyboardEvent, true)\n\n  // Register focus events on the window so they are sure to happen\n  // before React's event listeners (registered on the document).\n  window.addEventListener(\"focus\", onWindowFocus, true)\n  window.addEventListener(\"blur\", onWindowBlur, false)\n\n  if (typeof PointerEvent !== \"undefined\") {\n    document.addEventListener(\"pointerdown\", onPointerEvent, true)\n    document.addEventListener(\"pointermove\", onPointerEvent, true)\n    document.addEventListener(\"pointerup\", onPointerEvent, true)\n  } else {\n    document.addEventListener(\"mousedown\", onPointerEvent, true)\n    document.addEventListener(\"mousemove\", onPointerEvent, true)\n    document.addEventListener(\"mouseup\", onPointerEvent, true)\n  }\n\n  hasSetup = true\n}\n\nexport function trackFocusVisible(fn: FocusVisibleCallback) {\n  setupGlobalFocusEvents()\n\n  fn(isFocusVisible())\n  const handler = () => fn(isFocusVisible())\n\n  handlers.add(handler)\n  return () => {\n    handlers.delete(handler)\n  }\n}\n","import { isInputEvent, addItem, __DEV__, omit, dataAttr, callAllHandlers, focus, callAll, cx } from '@chakra-ui/utils';\nimport { createContext, mergeRefs } from '@chakra-ui/react-utils';\nimport * as React from 'react';\nimport { useCallback, useState, useEffect, useRef } from 'react';\nimport { useCallbackRef, useControllableState, useBoolean, useControllableProp, useSafeLayoutEffect, useUpdateEffect } from '@chakra-ui/hooks';\nimport { chakra, forwardRef, useMultiStyleConfig, omitThemingProps } from '@chakra-ui/system';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { useFormControlProps } from '@chakra-ui/form-control';\nimport { visuallyHiddenStyle } from '@chakra-ui/visually-hidden';\nimport { trackFocusVisible } from '@zag-js/focus-visible';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n/**\n * React hook that provides all the state management logic\n * for a group of checkboxes.\n *\n * It is consumed by the `CheckboxGroup` component\n */\nfunction useCheckboxGroup(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      defaultValue = _props.defaultValue,\n      valueProp = _props.value,\n      onChange = _props.onChange,\n      isDisabled = _props.isDisabled,\n      isNative = _props.isNative;\n  var onChangeProp = useCallbackRef(onChange);\n\n  var _useControllableState = useControllableState({\n    value: valueProp,\n    defaultValue: defaultValue || [],\n    onChange: onChangeProp\n  }),\n      value = _useControllableState[0],\n      setValue = _useControllableState[1];\n\n  var handleChange = useCallback(function (eventOrValue) {\n    if (!value) return;\n    var isChecked = isInputEvent(eventOrValue) ? eventOrValue.target.checked : !value.includes(eventOrValue);\n    var selectedValue = isInputEvent(eventOrValue) ? eventOrValue.target.value : eventOrValue;\n    var nextValue = isChecked ? addItem(value, selectedValue) : value.filter(function (v) {\n      return String(v) !== String(selectedValue);\n    });\n    setValue(nextValue);\n  }, [setValue, value]);\n  var getCheckboxProps = useCallback(function (props) {\n    var _extends2;\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    var checkedKey = isNative ? \"checked\" : \"isChecked\";\n    return _extends({}, props, (_extends2 = {}, _extends2[checkedKey] = value.some(function (val) {\n      return String(props.value) === String(val);\n    }), _extends2.onChange = handleChange, _extends2));\n  }, [handleChange, isNative, value]);\n  return {\n    value: value,\n    isDisabled: isDisabled,\n    onChange: handleChange,\n    setValue: setValue,\n    getCheckboxProps: getCheckboxProps\n  };\n}\n\nvar _createContext = createContext({\n  name: \"CheckboxGroupContext\",\n  strict: false\n}),\n    CheckboxGroupProvider = _createContext[0],\n    useCheckboxGroupContext = _createContext[1];\n/**\n * Used for multiple checkboxes which are bound in one group,\n * and it indicates whether one or more options are selected.\n *\n * @see Docs https://chakra-ui.com/checkbox\n */\n\nvar CheckboxGroup = function CheckboxGroup(props) {\n  var colorScheme = props.colorScheme,\n      size = props.size,\n      variant = props.variant,\n      children = props.children,\n      isDisabled = props.isDisabled;\n\n  var _useCheckboxGroup = useCheckboxGroup(props),\n      value = _useCheckboxGroup.value,\n      onChange = _useCheckboxGroup.onChange;\n\n  var group = React.useMemo(function () {\n    return {\n      size: size,\n      onChange: onChange,\n      colorScheme: colorScheme,\n      value: value,\n      variant: variant,\n      isDisabled: isDisabled\n    };\n  }, [size, onChange, colorScheme, value, variant, isDisabled]);\n  return /*#__PURE__*/React.createElement(CheckboxGroupProvider, {\n    value: group\n  }, children);\n};\n\nif (__DEV__) {\n  CheckboxGroup.displayName = \"CheckboxGroup\";\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded$2 = [\"isIndeterminate\", \"isChecked\"];\n\nfunction __motion(el) {\n  var m = motion;\n\n  if (\"custom\" in m && typeof m.custom === \"function\") {\n    return m.custom(el);\n  }\n\n  return m(el);\n} // @future: only call `motion(chakra.svg)` when we drop framer-motion v3 support\n\n\nvar MotionSvg = __motion(chakra.svg);\n\nvar CheckIcon = function CheckIcon(props) {\n  return /*#__PURE__*/React.createElement(MotionSvg, _extends({\n    width: \"1.2em\",\n    viewBox: \"0 0 12 10\",\n    variants: {\n      unchecked: {\n        opacity: 0,\n        strokeDashoffset: 16\n      },\n      checked: {\n        opacity: 1,\n        strokeDashoffset: 0,\n        transition: {\n          duration: 0.2\n        }\n      }\n    },\n    style: {\n      fill: \"none\",\n      strokeWidth: 2,\n      stroke: \"currentColor\",\n      strokeDasharray: 16\n    }\n  }, props), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"1.5 6 4.5 9 10.5 1\"\n  }));\n};\n\nvar IndeterminateIcon = function IndeterminateIcon(props) {\n  return /*#__PURE__*/React.createElement(MotionSvg, _extends({\n    width: \"1.2em\",\n    viewBox: \"0 0 24 24\",\n    variants: {\n      unchecked: {\n        scaleX: 0.65,\n        opacity: 0\n      },\n      checked: {\n        scaleX: 1,\n        opacity: 1,\n        transition: {\n          scaleX: {\n            duration: 0\n          },\n          opacity: {\n            duration: 0.02\n          }\n        }\n      }\n    },\n    style: {\n      stroke: \"currentColor\",\n      strokeWidth: 4\n    }\n  }, props), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"21\",\n    x2: \"3\",\n    y1: \"12\",\n    y2: \"12\"\n  }));\n};\n\nvar CheckboxTransition = function CheckboxTransition(_ref) {\n  var open = _ref.open,\n      children = _ref.children;\n  return /*#__PURE__*/React.createElement(AnimatePresence, {\n    initial: false\n  }, open && /*#__PURE__*/React.createElement(motion.div, {\n    variants: {\n      unchecked: {\n        scale: 0.5\n      },\n      checked: {\n        scale: 1\n      }\n    },\n    initial: \"unchecked\",\n    animate: \"checked\",\n    exit: \"unchecked\",\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"100%\"\n    }\n  }, children));\n};\n\n/**\n * CheckboxIcon is used to visually indicate the checked or indeterminate\n * state of a checkbox.\n *\n * @todo allow users pass their own icon svgs\n */\nvar CheckboxIcon = function CheckboxIcon(props) {\n  var isIndeterminate = props.isIndeterminate,\n      isChecked = props.isChecked,\n      rest = _objectWithoutPropertiesLoose(props, _excluded$2);\n\n  var IconEl = isIndeterminate ? IndeterminateIcon : CheckIcon;\n  return /*#__PURE__*/React.createElement(CheckboxTransition, {\n    open: isChecked || isIndeterminate\n  }, /*#__PURE__*/React.createElement(IconEl, rest));\n};\n\nvar _excluded$1 = [\"defaultChecked\", \"isChecked\", \"isFocusable\", \"onChange\", \"isIndeterminate\", \"name\", \"value\", \"tabIndex\", \"aria-label\", \"aria-labelledby\", \"aria-invalid\"];\n\n/**\n * useCheckbox that provides all the state and focus management logic\n * for a checkbox. It is consumed by the `Checkbox` component\n *\n * @see Docs https://chakra-ui.com/checkbox#hooks\n */\nfunction useCheckbox(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var formControlProps = useFormControlProps(props);\n  var isDisabled = formControlProps.isDisabled,\n      isReadOnly = formControlProps.isReadOnly,\n      isRequired = formControlProps.isRequired,\n      isInvalid = formControlProps.isInvalid,\n      id = formControlProps.id,\n      onBlur = formControlProps.onBlur,\n      onFocus = formControlProps.onFocus,\n      ariaDescribedBy = formControlProps[\"aria-describedby\"];\n\n  var _props = props,\n      defaultChecked = _props.defaultChecked,\n      checkedProp = _props.isChecked,\n      isFocusable = _props.isFocusable,\n      onChange = _props.onChange,\n      isIndeterminate = _props.isIndeterminate,\n      name = _props.name,\n      value = _props.value,\n      _props$tabIndex = _props.tabIndex,\n      tabIndex = _props$tabIndex === void 0 ? undefined : _props$tabIndex,\n      ariaLabel = _props[\"aria-label\"],\n      ariaLabelledBy = _props[\"aria-labelledby\"],\n      ariaInvalid = _props[\"aria-invalid\"],\n      rest = _objectWithoutPropertiesLoose(_props, _excluded$1);\n\n  var htmlProps = omit(rest, [\"isDisabled\", \"isReadOnly\", \"isRequired\", \"isInvalid\", \"id\", \"onBlur\", \"onFocus\", \"aria-describedby\"]);\n  var onChangeProp = useCallbackRef(onChange);\n  var onBlurProp = useCallbackRef(onBlur);\n  var onFocusProp = useCallbackRef(onFocus);\n\n  var _useState = useState(false),\n      isFocusVisible = _useState[0],\n      setIsFocusVisible = _useState[1];\n\n  var _useBoolean = useBoolean(),\n      isFocused = _useBoolean[0],\n      setFocused = _useBoolean[1];\n\n  var _useBoolean2 = useBoolean(),\n      isHovered = _useBoolean2[0],\n      setHovered = _useBoolean2[1];\n\n  var _useBoolean3 = useBoolean(),\n      isActive = _useBoolean3[0],\n      setActive = _useBoolean3[1];\n\n  useEffect(function () {\n    return trackFocusVisible(setIsFocusVisible);\n  }, []);\n  var inputRef = useRef(null);\n\n  var _useState2 = useState(true),\n      rootIsLabelElement = _useState2[0],\n      setRootIsLabelElement = _useState2[1];\n\n  var _useState3 = useState(!!defaultChecked),\n      checkedState = _useState3[0],\n      setCheckedState = _useState3[1];\n\n  var _useControllableProp = useControllableProp(checkedProp, checkedState),\n      isControlled = _useControllableProp[0],\n      isChecked = _useControllableProp[1];\n\n  var handleChange = useCallback(function (event) {\n    if (isReadOnly || isDisabled) {\n      event.preventDefault();\n      return;\n    }\n\n    if (!isControlled) {\n      if (isChecked) {\n        setCheckedState(event.target.checked);\n      } else {\n        setCheckedState(isIndeterminate ? true : event.target.checked);\n      }\n    }\n\n    onChangeProp == null ? void 0 : onChangeProp(event);\n  }, [isReadOnly, isDisabled, isChecked, isControlled, isIndeterminate, onChangeProp]);\n  useSafeLayoutEffect(function () {\n    if (inputRef.current) {\n      inputRef.current.indeterminate = Boolean(isIndeterminate);\n    }\n  }, [isIndeterminate]);\n  useUpdateEffect(function () {\n    if (isDisabled) {\n      setFocused.off();\n    }\n  }, [isDisabled, setFocused]);\n  /**\n   * HTMLFormElement.reset() should reset the checkbox state\n   */\n\n  useSafeLayoutEffect(function () {\n    var el = inputRef.current;\n    if (!(el != null && el.form)) return;\n\n    el.form.onreset = function () {\n      setCheckedState(!!defaultChecked);\n    };\n  }, []);\n  var trulyDisabled = isDisabled && !isFocusable;\n  var onKeyDown = useCallback(function (event) {\n    if (event.key === \" \") {\n      setActive.on();\n    }\n  }, [setActive]);\n  var onKeyUp = useCallback(function (event) {\n    if (event.key === \" \") {\n      setActive.off();\n    }\n  }, [setActive]);\n  /**\n   * Sync state with uncontrolled form libraries like `react-hook-form`.\n   *\n   * These libraries set the checked value for input fields\n   * using their refs. For the checkbox, it sets `ref.current.checked = true | false` directly.\n   *\n   * This means the `isChecked` state will get out of sync with `ref.current.checked`,\n   * even though the input validation with work, the UI will not be up to date.\n   *\n   * Let's correct that by checking and syncing the state accordingly.\n   */\n\n  useSafeLayoutEffect(function () {\n    if (!inputRef.current) return;\n    var notInSync = inputRef.current.checked !== isChecked;\n\n    if (notInSync) {\n      setCheckedState(inputRef.current.checked);\n    }\n  }, [inputRef.current]);\n  var getCheckboxProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    var onPressDown = function onPressDown(event) {\n      // On mousedown, the input blurs and returns focus to the `body`,\n      // we need to prevent this. Native checkboxes keeps focus on `input`\n      event.preventDefault();\n      setActive.on();\n    };\n\n    return _extends({}, props, {\n      ref: forwardedRef,\n      \"data-active\": dataAttr(isActive),\n      \"data-hover\": dataAttr(isHovered),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-focus\": dataAttr(isFocused),\n      \"data-focus-visible\": dataAttr(isFocused && isFocusVisible),\n      \"data-indeterminate\": dataAttr(isIndeterminate),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      \"aria-hidden\": true,\n      onMouseDown: callAllHandlers(props.onMouseDown, onPressDown),\n      onMouseUp: callAllHandlers(props.onMouseUp, setActive.off),\n      onMouseEnter: callAllHandlers(props.onMouseEnter, setHovered.on),\n      onMouseLeave: callAllHandlers(props.onMouseLeave, setHovered.off)\n    });\n  }, [isActive, isChecked, isDisabled, isFocused, isFocusVisible, isHovered, isIndeterminate, isInvalid, isReadOnly, setActive, setHovered.off, setHovered.on]);\n  var getRootProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, htmlProps, props, {\n      ref: mergeRefs(forwardedRef, function (node) {\n        if (!node) return;\n        setRootIsLabelElement(node.tagName === \"LABEL\");\n      }),\n      onClick: callAllHandlers(props.onClick, function () {\n        /**\n         * Accessibility:\n         *\n         * Ideally, `getRootProps` should be spread unto a `label` element.\n         *\n         * If the element was changed using the `as` prop or changing\n         * the dom node `getRootProps` is spread unto (to a `div` or `span`), we'll trigger\n         * click on the input when the element is clicked.\n         * @see Issue https://github.com/chakra-ui/chakra-ui/issues/3480\n         */\n        if (!rootIsLabelElement) {\n          var _inputRef$current;\n\n          (_inputRef$current = inputRef.current) == null ? void 0 : _inputRef$current.click();\n          focus(inputRef.current, {\n            nextTick: true\n          });\n        }\n      }),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-invalid\": dataAttr(isInvalid)\n    });\n  }, [htmlProps, isDisabled, isChecked, isInvalid, rootIsLabelElement]);\n  var getInputProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, {\n      ref: mergeRefs(inputRef, forwardedRef),\n      type: \"checkbox\",\n      name: name,\n      value: value,\n      id: id,\n      tabIndex: tabIndex,\n      onChange: callAllHandlers(props.onChange, handleChange),\n      onBlur: callAllHandlers(props.onBlur, onBlurProp, setFocused.off),\n      onFocus: callAllHandlers(props.onFocus, onFocusProp, setFocused.on),\n      onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n      onKeyUp: callAllHandlers(props.onKeyUp, onKeyUp),\n      required: isRequired,\n      checked: isChecked,\n      disabled: trulyDisabled,\n      readOnly: isReadOnly,\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": ariaLabelledBy,\n      \"aria-invalid\": ariaInvalid ? Boolean(ariaInvalid) : isInvalid,\n      \"aria-describedby\": ariaDescribedBy,\n      \"aria-disabled\": isDisabled,\n      style: visuallyHiddenStyle\n    });\n  }, [name, value, id, handleChange, setFocused.off, setFocused.on, onBlurProp, onFocusProp, onKeyDown, onKeyUp, isRequired, isChecked, trulyDisabled, isReadOnly, ariaLabel, ariaLabelledBy, ariaInvalid, isInvalid, ariaDescribedBy, isDisabled, tabIndex]);\n  var getLabelProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, {\n      ref: forwardedRef,\n      onMouseDown: callAllHandlers(props.onMouseDown, stopEvent),\n      onTouchStart: callAllHandlers(props.onTouchStart, stopEvent),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-invalid\": dataAttr(isInvalid)\n    });\n  }, [isChecked, isDisabled, isInvalid]);\n  var state = {\n    isInvalid: isInvalid,\n    isFocused: isFocused,\n    isChecked: isChecked,\n    isActive: isActive,\n    isHovered: isHovered,\n    isIndeterminate: isIndeterminate,\n    isDisabled: isDisabled,\n    isReadOnly: isReadOnly,\n    isRequired: isRequired\n  };\n  return {\n    state: state,\n    getRootProps: getRootProps,\n    getCheckboxProps: getCheckboxProps,\n    getInputProps: getInputProps,\n    getLabelProps: getLabelProps,\n    htmlProps: htmlProps\n  };\n}\n/**\n * Prevent `onBlur` being fired when the checkbox label is touched\n */\n\nfunction stopEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n\nvar _excluded = [\"spacing\", \"className\", \"children\", \"iconColor\", \"iconSize\", \"icon\", \"isChecked\", \"isDisabled\", \"onChange\", \"inputProps\"];\nvar CheckboxControl = chakra(\"span\", {\n  baseStyle: {\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    verticalAlign: \"top\",\n    userSelect: \"none\",\n    flexShrink: 0\n  }\n});\nvar Label = chakra(\"label\", {\n  baseStyle: {\n    cursor: \"pointer\",\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    verticalAlign: \"top\",\n    position: \"relative\"\n  }\n});\n\n/**\n * Checkbox\n *\n * React component used in forms when a user needs to select\n * multiple values from several options.\n *\n * @see Docs https://chakra-ui.com/checkbox\n */\nvar Checkbox = /*#__PURE__*/forwardRef(function (props, ref) {\n  var group = useCheckboxGroupContext();\n\n  var mergedProps = _extends({}, group, props);\n\n  var styles = useMultiStyleConfig(\"Checkbox\", mergedProps);\n  var ownProps = omitThemingProps(props);\n\n  var _ownProps$spacing = ownProps.spacing,\n      spacing = _ownProps$spacing === void 0 ? \"0.5rem\" : _ownProps$spacing,\n      className = ownProps.className,\n      children = ownProps.children,\n      iconColor = ownProps.iconColor,\n      iconSize = ownProps.iconSize,\n      _ownProps$icon = ownProps.icon,\n      icon = _ownProps$icon === void 0 ? /*#__PURE__*/React.createElement(CheckboxIcon, null) : _ownProps$icon,\n      isCheckedProp = ownProps.isChecked,\n      _ownProps$isDisabled = ownProps.isDisabled,\n      isDisabled = _ownProps$isDisabled === void 0 ? group == null ? void 0 : group.isDisabled : _ownProps$isDisabled,\n      onChangeProp = ownProps.onChange,\n      inputProps = ownProps.inputProps,\n      rest = _objectWithoutPropertiesLoose(ownProps, _excluded);\n\n  var isChecked = isCheckedProp;\n\n  if (group != null && group.value && ownProps.value) {\n    isChecked = group.value.includes(ownProps.value);\n  }\n\n  var onChange = onChangeProp;\n\n  if (group != null && group.onChange && ownProps.value) {\n    onChange = callAll(group.onChange, onChangeProp);\n  }\n\n  var _useCheckbox = useCheckbox(_extends({}, rest, {\n    isDisabled: isDisabled,\n    isChecked: isChecked,\n    onChange: onChange\n  })),\n      state = _useCheckbox.state,\n      getInputProps = _useCheckbox.getInputProps,\n      getCheckboxProps = _useCheckbox.getCheckboxProps,\n      getLabelProps = _useCheckbox.getLabelProps,\n      getRootProps = _useCheckbox.getRootProps;\n\n  var iconStyles = React.useMemo(function () {\n    return _extends({\n      opacity: state.isChecked || state.isIndeterminate ? 1 : 0,\n      transform: state.isChecked || state.isIndeterminate ? \"scale(1)\" : \"scale(0.95)\",\n      fontSize: iconSize,\n      color: iconColor\n    }, styles.icon);\n  }, [iconColor, iconSize, state.isChecked, state.isIndeterminate, styles.icon]);\n  var clonedIcon = /*#__PURE__*/React.cloneElement(icon, {\n    __css: iconStyles,\n    isIndeterminate: state.isIndeterminate,\n    isChecked: state.isChecked\n  });\n  return /*#__PURE__*/React.createElement(Label, _extends({\n    __css: styles.container,\n    className: cx(\"chakra-checkbox\", className)\n  }, getRootProps()), /*#__PURE__*/React.createElement(\"input\", _extends({\n    className: \"chakra-checkbox__input\"\n  }, getInputProps(inputProps, ref))), /*#__PURE__*/React.createElement(CheckboxControl, _extends({\n    __css: styles.control,\n    className: \"chakra-checkbox__control\"\n  }, getCheckboxProps()), clonedIcon), children && /*#__PURE__*/React.createElement(chakra.span, _extends({\n    className: \"chakra-checkbox__label\"\n  }, getLabelProps(), {\n    __css: _extends({\n      marginStart: spacing\n    }, styles.label)\n  }), children));\n});\n\nif (__DEV__) {\n  Checkbox.displayName = \"Checkbox\";\n}\n\nexport { Checkbox, CheckboxGroup, useCheckbox, useCheckboxGroup, useCheckboxGroupContext };\n","import { useId, useBoolean } from '@chakra-ui/hooks';\nimport { createStylesContext, forwardRef, useMultiStyleConfig, omitThemingProps, chakra, useStyleConfig } from '@chakra-ui/system';\nimport { cx, __DEV__, dataAttr, callAllHandlers, ariaAttr } from '@chakra-ui/utils';\nimport { createContext, mergeRefs } from '@chakra-ui/react-utils';\nimport * as React from 'react';\nimport Icon from '@chakra-ui/icon';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded$2 = [\"id\", \"isRequired\", \"isInvalid\", \"isDisabled\", \"isReadOnly\"],\n    _excluded2$1 = [\"getRootProps\", \"htmlProps\"];\n\nvar _createStylesContext$1 = createStylesContext(\"FormControl\"),\n    StylesProvider$1 = _createStylesContext$1[0],\n    useStyles$1 = _createStylesContext$1[1];\n\nvar useFormControlStyles = useStyles$1;\n\nvar _createContext = createContext({\n  strict: false,\n  name: \"FormControlContext\"\n}),\n    FormControlProvider = _createContext[0],\n    useFormControlContext = _createContext[1];\n\nfunction useFormControlProvider(props) {\n  var idProp = props.id,\n      isRequired = props.isRequired,\n      isInvalid = props.isInvalid,\n      isDisabled = props.isDisabled,\n      isReadOnly = props.isReadOnly,\n      htmlProps = _objectWithoutPropertiesLoose(props, _excluded$2); // Generate all the required ids\n\n\n  var uuid = useId();\n  var id = idProp || \"field-\" + uuid;\n  var labelId = id + \"-label\";\n  var feedbackId = id + \"-feedback\";\n  var helpTextId = id + \"-helptext\";\n  /**\n   * Track whether the `FormErrorMessage` has been rendered.\n   * We use this to append its id the `aria-describedby` of the `input`.\n   */\n\n  var _React$useState = React.useState(false),\n      hasFeedbackText = _React$useState[0],\n      setHasFeedbackText = _React$useState[1];\n  /**\n   * Track whether the `FormHelperText` has been rendered.\n   * We use this to append its id the `aria-describedby` of the `input`.\n   */\n\n\n  var _React$useState2 = React.useState(false),\n      hasHelpText = _React$useState2[0],\n      setHasHelpText = _React$useState2[1]; // Track whether the form element (e.g, `input`) has focus.\n\n\n  var _useBoolean = useBoolean(),\n      isFocused = _useBoolean[0],\n      setFocus = _useBoolean[1];\n\n  var getHelpTextProps = React.useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({\n      id: helpTextId\n    }, props, {\n      /**\n       * Notify the field context when the help text is rendered on screen,\n       * so we can apply the correct `aria-describedby` to the field (e.g. input, textarea).\n       */\n      ref: mergeRefs(forwardedRef, function (node) {\n        if (!node) return;\n        setHasHelpText(true);\n      })\n    });\n  }, [helpTextId]);\n  var getLabelProps = React.useCallback(function (props, forwardedRef) {\n    var _props$id, _props$htmlFor;\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, {\n      ref: forwardedRef,\n      \"data-focus\": dataAttr(isFocused),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      id: (_props$id = props.id) != null ? _props$id : labelId,\n      htmlFor: (_props$htmlFor = props.htmlFor) != null ? _props$htmlFor : id\n    });\n  }, [id, isDisabled, isFocused, isInvalid, isReadOnly, labelId]);\n  var getErrorMessageProps = React.useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({\n      id: feedbackId\n    }, props, {\n      /**\n       * Notify the field context when the error message is rendered on screen,\n       * so we can apply the correct `aria-describedby` to the field (e.g. input, textarea).\n       */\n      ref: mergeRefs(forwardedRef, function (node) {\n        if (!node) return;\n        setHasFeedbackText(true);\n      }),\n      \"aria-live\": \"polite\"\n    });\n  }, [feedbackId]);\n  var getRootProps = React.useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, htmlProps, {\n      ref: forwardedRef,\n      role: \"group\"\n    });\n  }, [htmlProps]);\n  var getRequiredIndicatorProps = React.useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, {\n      ref: forwardedRef,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      children: props.children || \"*\"\n    });\n  }, []);\n  return {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    isFocused: !!isFocused,\n    onFocus: setFocus.on,\n    onBlur: setFocus.off,\n    hasFeedbackText: hasFeedbackText,\n    setHasFeedbackText: setHasFeedbackText,\n    hasHelpText: hasHelpText,\n    setHasHelpText: setHasHelpText,\n    id: id,\n    labelId: labelId,\n    feedbackId: feedbackId,\n    helpTextId: helpTextId,\n    htmlProps: htmlProps,\n    getHelpTextProps: getHelpTextProps,\n    getErrorMessageProps: getErrorMessageProps,\n    getRootProps: getRootProps,\n    getLabelProps: getLabelProps,\n    getRequiredIndicatorProps: getRequiredIndicatorProps\n  };\n}\n\n/**\n * FormControl provides context such as\n * `isInvalid`, `isDisabled`, and `isRequired` to form elements.\n *\n * This is commonly used in form elements such as `input`,\n * `select`, `textarea`, etc.\n */\nvar FormControl = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Form\", props);\n  var ownProps = omitThemingProps(props);\n\n  var _useFormControlProvid = useFormControlProvider(ownProps),\n      getRootProps = _useFormControlProvid.getRootProps;\n      _useFormControlProvid.htmlProps;\n      var context = _objectWithoutPropertiesLoose(_useFormControlProvid, _excluded2$1);\n\n  var className = cx(\"chakra-form-control\", props.className);\n  return /*#__PURE__*/React.createElement(FormControlProvider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(StylesProvider$1, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.div, _extends({}, getRootProps({}, ref), {\n    className: className,\n    __css: styles[\"container\"]\n  }))));\n});\n\nif (__DEV__) {\n  FormControl.displayName = \"FormControl\";\n}\n\n/**\n * FormHelperText\n *\n * Assistive component that conveys additional guidance\n * about the field, such as how it will be used and what\n * types in values should be provided.\n */\nvar FormHelperText = /*#__PURE__*/forwardRef(function (props, ref) {\n  var field = useFormControlContext();\n  var styles = useStyles$1();\n  var className = cx(\"chakra-form__helper-text\", props.className);\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({}, field == null ? void 0 : field.getHelpTextProps(props, ref), {\n    __css: styles.helperText,\n    className: className\n  }));\n});\n\nif (__DEV__) {\n  FormHelperText.displayName = \"FormHelperText\";\n}\n\nvar _excluded$1 = [\"isDisabled\", \"isInvalid\", \"isReadOnly\", \"isRequired\"],\n    _excluded2 = [\"id\", \"disabled\", \"readOnly\", \"required\", \"isRequired\", \"isInvalid\", \"isReadOnly\", \"isDisabled\", \"onFocus\", \"onBlur\"];\n\n/**\n * React hook that provides the props that should be spread on to\n * input fields (`input`, `select`, `textarea`, etc.).\n *\n * It provides a convenient way to control a form fields, validation\n * and helper text.\n *\n * @internal\n */\nfunction useFormControl(props) {\n  var _useFormControlProps = useFormControlProps(props),\n      isDisabled = _useFormControlProps.isDisabled,\n      isInvalid = _useFormControlProps.isInvalid,\n      isReadOnly = _useFormControlProps.isReadOnly,\n      isRequired = _useFormControlProps.isRequired,\n      rest = _objectWithoutPropertiesLoose(_useFormControlProps, _excluded$1);\n\n  return _extends({}, rest, {\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    required: isRequired,\n    \"aria-invalid\": ariaAttr(isInvalid),\n    \"aria-required\": ariaAttr(isRequired),\n    \"aria-readonly\": ariaAttr(isReadOnly)\n  });\n}\n/**\n * @internal\n */\n\nfunction useFormControlProps(props) {\n  var _ref, _ref2, _ref3;\n\n  var field = useFormControlContext();\n\n  var id = props.id,\n      disabled = props.disabled,\n      readOnly = props.readOnly,\n      required = props.required,\n      isRequired = props.isRequired,\n      isInvalid = props.isInvalid,\n      isReadOnly = props.isReadOnly,\n      isDisabled = props.isDisabled,\n      onFocus = props.onFocus,\n      onBlur = props.onBlur,\n      rest = _objectWithoutPropertiesLoose(props, _excluded2);\n\n  var labelIds = props[\"aria-describedby\"] ? [props[\"aria-describedby\"]] : []; // Error message must be described first in all scenarios.\n\n  if (field != null && field.hasFeedbackText && field != null && field.isInvalid) {\n    labelIds.push(field.feedbackId);\n  }\n\n  if (field != null && field.hasHelpText) {\n    labelIds.push(field.helpTextId);\n  }\n\n  return _extends({}, rest, {\n    \"aria-describedby\": labelIds.join(\" \") || undefined,\n    id: id != null ? id : field == null ? void 0 : field.id,\n    isDisabled: (_ref = disabled != null ? disabled : isDisabled) != null ? _ref : field == null ? void 0 : field.isDisabled,\n    isReadOnly: (_ref2 = readOnly != null ? readOnly : isReadOnly) != null ? _ref2 : field == null ? void 0 : field.isReadOnly,\n    isRequired: (_ref3 = required != null ? required : isRequired) != null ? _ref3 : field == null ? void 0 : field.isRequired,\n    isInvalid: isInvalid != null ? isInvalid : field == null ? void 0 : field.isInvalid,\n    onFocus: callAllHandlers(field == null ? void 0 : field.onFocus, onFocus),\n    onBlur: callAllHandlers(field == null ? void 0 : field.onBlur, onBlur)\n  });\n}\n\nvar _createStylesContext = createStylesContext(\"FormError\"),\n    StylesProvider = _createStylesContext[0],\n    useStyles = _createStylesContext[1];\n\n/**\n * Used to provide feedback about an invalid input,\n * and suggest clear instructions on how to fix it.\n */\nvar FormErrorMessage = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"FormError\", props);\n  var ownProps = omitThemingProps(props);\n  var field = useFormControlContext();\n  if (!(field != null && field.isInvalid)) return null;\n  return /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.div, _extends({}, field == null ? void 0 : field.getErrorMessageProps(ownProps, ref), {\n    className: cx(\"chakra-form__error-message\", props.className),\n    __css: _extends({\n      display: \"flex\",\n      alignItems: \"center\"\n    }, styles.text)\n  })));\n});\n\nif (__DEV__) {\n  FormErrorMessage.displayName = \"FormErrorMessage\";\n}\n/**\n * Used as the visual indicator that a field is invalid or\n * a field has incorrect values.\n */\n\n\nvar FormErrorIcon = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n  var field = useFormControlContext();\n  if (!(field != null && field.isInvalid)) return null;\n\n  var _className = cx(\"chakra-form__error-icon\", props.className);\n\n  return /*#__PURE__*/React.createElement(Icon, _extends({\n    ref: ref,\n    \"aria-hidden\": true\n  }, props, {\n    __css: styles.icon,\n    className: _className\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M11.983,0a12.206,12.206,0,0,0-8.51,3.653A11.8,11.8,0,0,0,0,12.207,11.779,11.779,0,0,0,11.8,24h.214A12.111,12.111,0,0,0,24,11.791h0A11.766,11.766,0,0,0,11.983,0ZM10.5,16.542a1.476,1.476,0,0,1,1.449-1.53h.027a1.527,1.527,0,0,1,1.523,1.47,1.475,1.475,0,0,1-1.449,1.53h-.027A1.529,1.529,0,0,1,10.5,16.542ZM11,12.5v-6a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Z\"\n  }));\n});\n\nif (__DEV__) {\n  FormErrorIcon.displayName = \"FormErrorIcon\";\n}\n\nvar _excluded = [\"className\", \"children\", \"requiredIndicator\", \"optionalIndicator\"];\n\n/**\n * Used to enhance the usability of form controls.\n *\n * It is used to inform users as to what information\n * is requested for a form field.\n *\n * ♿️ Accessibility: Every form field should have a form label.\n */\nvar FormLabel = /*#__PURE__*/forwardRef(function (passedProps, ref) {\n  var _field$getLabelProps;\n\n  var styles = useStyleConfig(\"FormLabel\", passedProps);\n  var props = omitThemingProps(passedProps);\n\n  props.className;\n      var children = props.children,\n      _props$requiredIndica = props.requiredIndicator,\n      requiredIndicator = _props$requiredIndica === void 0 ? /*#__PURE__*/React.createElement(RequiredIndicator, null) : _props$requiredIndica,\n      _props$optionalIndica = props.optionalIndicator,\n      optionalIndicator = _props$optionalIndica === void 0 ? null : _props$optionalIndica,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var field = useFormControlContext();\n  var ownProps = (_field$getLabelProps = field == null ? void 0 : field.getLabelProps(rest, ref)) != null ? _field$getLabelProps : _extends({\n    ref: ref\n  }, rest);\n  return /*#__PURE__*/React.createElement(chakra.label, _extends({}, ownProps, {\n    className: cx(\"chakra-form__label\", props.className),\n    __css: _extends({\n      display: \"block\",\n      textAlign: \"start\"\n    }, styles)\n  }), children, field != null && field.isRequired ? requiredIndicator : optionalIndicator);\n});\n\nif (__DEV__) {\n  FormLabel.displayName = \"FormLabel\";\n}\n\n/**\n * Used to show a \"required\" text or an asterisks (*) to indicate that\n * a field is required.\n */\nvar RequiredIndicator = /*#__PURE__*/forwardRef(function (props, ref) {\n  var field = useFormControlContext();\n  var styles = useFormControlStyles();\n  if (!(field != null && field.isRequired)) return null;\n  var className = cx(\"chakra-form__required-indicator\", props.className);\n  return /*#__PURE__*/React.createElement(chakra.span, _extends({}, field == null ? void 0 : field.getRequiredIndicatorProps(props, ref), {\n    __css: styles.requiredIndicator,\n    className: className\n  }));\n});\n\nif (__DEV__) {\n  RequiredIndicator.displayName = \"RequiredIndicator\";\n}\n\nexport { FormControl, FormErrorIcon, FormErrorMessage, FormHelperText, FormLabel, RequiredIndicator, useFormControl, useFormControlContext, useFormControlProps, useFormControlStyles };\n"],"names":["hasSetup","modality","hasEventBeforeFocus","handlers","Set","isMac","window","navigator","test","platform","trigger","modality2","event","forEach","handler","onKeyboardEvent","metaKey","altKey","ctrlKey","isValidKey","onPointerEvent","type","onWindowFocus","target","document","onWindowBlur","isFocusVisible","trackFocusVisible","fn","focus","HTMLElement","prototype","_len","arguments","length","args","Array","_key","apply","this","addEventListener","PointerEvent","setupGlobalFocusEvents","add","delete","_extends","Object","assign","bind","i","source","key","hasOwnProperty","call","_createContext","createContext","name","strict","useCheckboxGroupContext","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","__DEV__","_excluded$2","MotionSvg","el","m","motion","custom","__motion","chakra","svg","CheckIcon","props","React","width","viewBox","variants","unchecked","opacity","strokeDashoffset","checked","transition","duration","style","fill","strokeWidth","stroke","strokeDasharray","points","IndeterminateIcon","scaleX","x1","x2","y1","y2","CheckboxTransition","_ref","open","children","AnimatePresence","initial","div","scale","animate","exit","display","alignItems","justifyContent","height","CheckboxIcon","isIndeterminate","isChecked","rest","IconEl","_excluded$1","useCheckbox","formControlProps","useFormControlProps","isDisabled","isReadOnly","isRequired","isInvalid","id","onBlur","onFocus","ariaDescribedBy","_props","defaultChecked","checkedProp","isFocusable","onChange","value","_props$tabIndex","tabIndex","undefined","ariaLabel","ariaLabelledBy","ariaInvalid","htmlProps","omit","onChangeProp","useCallbackRef","onBlurProp","onFocusProp","_useState","useState","setIsFocusVisible","_useBoolean","useBoolean","isFocused","setFocused","_useBoolean2","isHovered","setHovered","_useBoolean3","isActive","setActive","useEffect","inputRef","useRef","_useState2","rootIsLabelElement","setRootIsLabelElement","_useState3","checkedState","setCheckedState","_useControllableProp","useControllableProp","isControlled","handleChange","useCallback","preventDefault","useSafeLayoutEffect","current","indeterminate","Boolean","useUpdateEffect","off","form","onreset","trulyDisabled","onKeyDown","on","onKeyUp","getCheckboxProps","forwardedRef","ref","dataAttr","onMouseDown","callAllHandlers","onMouseUp","onMouseEnter","onMouseLeave","getRootProps","mergeRefs","node","tagName","onClick","_inputRef$current","click","nextTick","getInputProps","required","disabled","readOnly","visuallyHiddenStyle","getLabelProps","stopEvent","onTouchStart","state","stopPropagation","_excluded","CheckboxControl","baseStyle","verticalAlign","userSelect","flexShrink","Label","cursor","position","Checkbox","forwardRef","group","mergedProps","styles","useMultiStyleConfig","ownProps","omitThemingProps","_ownProps$spacing","spacing","className","iconColor","iconSize","_ownProps$icon","icon","isCheckedProp","_ownProps$isDisabled","inputProps","includes","callAll","_useCheckbox","iconStyles","transform","fontSize","color","clonedIcon","__css","container","cx","control","span","marginStart","label","displayName","_excluded2$1","_createStylesContext$1","createStylesContext","StylesProvider$1","useStyles$1","useFormControlStyles","FormControlProvider","useFormControlContext","FormControl","_useFormControlProvid","idProp","uuid","useId","labelId","feedbackId","helpTextId","_React$useState","hasFeedbackText","setHasFeedbackText","_React$useState2","hasHelpText","setHasHelpText","setFocus","getHelpTextProps","_props$id","_props$htmlFor","htmlFor","getErrorMessageProps","role","getRequiredIndicatorProps","useFormControlProvider","context","FormHelperText","field","helperText","_excluded2","useFormControl","_useFormControlProps","ariaAttr","_ref2","_ref3","labelIds","push","join","_createStylesContext","StylesProvider","useStyles","FormErrorMessage","text","FormErrorIcon","_className","Icon","d","FormLabel","passedProps","_field$getLabelProps","useStyleConfig","_props$requiredIndica","requiredIndicator","RequiredIndicator","_props$optionalIndica","optionalIndicator","textAlign"],"sourceRoot":""}