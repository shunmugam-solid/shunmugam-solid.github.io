{"version":3,"file":"static/js/7551.507cea01.chunk.js","mappings":"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","sources":["webpack://drop-in-ui/./src/views/pullfunds/LinkCard/LinkCard.module.css?611b","views/pullfunds/LinkCard/LinkCard.tsx","../node_modules/@chakra-ui/media-query/dist/chakra-ui-media-query.esm.js","../node_modules/@chakra-ui/skeleton/dist/chakra-ui-skeleton.esm.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"iframeInput\":\"LinkCard_iframeInput__91+Lu\"};","import React, {\n  useCallback, useEffect, useMemo, useRef, useState\n} from 'react';\nimport {\n  Box, Button, FormControl, FormLabel, Skeleton, useMultiStyleConfig, useTheme\n} from '@chakra-ui/react';\nimport { useTranslation } from 'react-i18next';\nimport { shallowEqual } from 'react-redux';\nimport MiniBox from '../../../layout/MiniBox';\nimport { useAppAsyncDispatch, useAppSelector } from '../../../hooks/store';\nimport {\n  apiErrorHandler, getValutId, loading, showNotification\n} from '../../../utils/general';\nimport { getPerson } from '../../../store/middlewares/user';\nimport { createContact, deleteContact, getLinkCardToken } from '../../../store/middlewares/contact';\nimport style from './LinkCard.module.css';\nimport { useDrawer } from '../../../hooks/drawer';\n/**\n * Link card UI - Pull funds from card\n * @returns {React.ReactNode}\n */\nconst LinkCard = () => {\n  const { t } = useTranslation();\n  const form = useRef<any>();\n  const { goBack } = useDrawer();\n  const dispatch = useAppAsyncDispatch();\n  const [showLoader, setShowLoader] = useState(true);\n\n  const mode = useAppSelector((store) => store.core.config.mode);\n  const account = useAppSelector((store) => store.account.selectedAccount, shallowEqual);\n  const inputStyle = useMultiStyleConfig('Input', {\n    variant: 'primary'\n  });\n\n  const theme = useTheme();\n\n  const inputVars = {\n    '--input-color': theme.styles.global[':root']['--input-color'],\n    '--input-placeholderColor': theme.styles.global[':root']['--input-placeholderColor']\n  };\n\n  const VGSInput = {\n    ...inputVars,\n    ...inputStyle.field,\n    boxSizing: 'border-box',\n    '::placeholder': {\n      color: 'var(--input-placeholderColor)'\n    }\n  };\n\n  const frameStyle:any = {\n    boxShadow: inputStyle.field.boxShadow,\n    border: `${inputStyle.field.borderWidth}px ${inputStyle.field.borderColor} solid`,\n    borderRadius: inputStyle.field.borderRadius,\n    display: showLoader ? 'none' : ''\n  };\n\n  const iframeHeight: string | number = useMemo(() => {\n    if (typeof inputStyle.field.height === 'string' || typeof inputStyle.field.height === 'number') {\n      return inputStyle.field.height;\n    }\n    return '48px';\n  }, [inputStyle]);\n\n  /**\n   * VGS init\n   */\n  const vgsInit = useCallback(() => {\n    form.current = window.VGSCollect.create(getValutId(), mode === 'live' ? 'live' : 'sandbox', () => {\n      setShowLoader(false);\n    });\n\n    form.current.field('#card-number', {\n      type: 'card-number',\n      name: 'debitCard.cardNumber',\n      placeholder: '**** **** **** ****',\n      showCardIcon: false,\n      validations: ['required', 'validCardNumberExtended'],\n      css: VGSInput\n    });\n\n    form.current.field('#card-expiration-date', {\n      type: 'card-expiration-date',\n      name: 'debitCard',\n      placeholder: 'MM / YYYY',\n      yearLength: '4',\n      serializers: [\n        {\n          name: 'separate',\n          options: { monthName: 'expiryMonth', yearName: 'expiryYear' },\n        },\n      ],\n      validations: ['required', 'validCardExpirationDate'],\n      css: VGSInput,\n    });\n  }, []);\n\n  useEffect(() => {\n    // include vgs script\n    const vgsScript = document.createElement('script');\n    vgsScript.id = 'vgs-collect-script';\n    vgsScript.crossOrigin = 'anonymous';\n    vgsScript.src = 'https://js.verygoodvault.com/vgs-collect/2.11.0/vgs-collect.js';\n    vgsScript.type = 'text/javascript';\n    vgsScript.onload = vgsInit;\n    document.head.append(vgsScript);\n\n    return () => {\n      // remove vgs script on component unmount\n      window.VGSShow = undefined;\n      document.getElementById('vgs-collect-script')?.remove();\n    };\n  }, []);\n\n  const onSubmit = useCallback(() => {\n    loading(true);\n    const cardNumber = form.current.state['debitCard.cardNumber'];\n    const cardExp = form.current.state.debitCard;\n    if (!cardNumber.isValid || !cardExp.isValid) {\n      loading(false);\n      showNotification('An error occurred.', 'Invalid card details', 'error');\n    } else if (account) {\n      // get person details\n      dispatch(getPerson())\n        .then((person) => {\n          // create contact\n          dispatch(createContact({\n            accountId: account?.id,\n            name: `${person.firstName} ${person.lastName}`,\n            phone: person.phone,\n            email: person.email,\n            card: {\n              address: person.address ? {\n                ...person.address,\n                addressType: 'card',\n              } : undefined,\n            },\n          }))\n            .then((contact) => {\n              if (contact.id) {\n                // link card token\n                dispatch(getLinkCardToken(contact.id))\n                  .then(({ debitCardToken }) => {\n                    // form submit\n                    form.current.submit(\n                      `/v1/contact/${contact.id}/debitcard`,\n                      {\n                        headers: {\n                          'sd-debitcard-token': debitCardToken,\n                        },\n                        method: 'PATCH',\n                        mapDotToObject: 'merge',\n                        data: {\n                          debitCard: {\n                            address: {\n                              ...person.address,\n                              addressType: '',\n                            },\n                          },\n                        },\n                      },\n                      (status: number, data: any) => {\n                        loading(false);\n                        if (status !== 200) {\n                          if (status === 400 && data.sysMessage === 'expiry year') {\n                            showNotification('An error occurred.', 'Invalid expiry date', 'error');\n                          } else {\n                            showNotification('An error occurred.', data.message, 'error');\n                          }\n                          if (contact.id) {\n                            dispatch(deleteContact(contact.id)).catch(apiErrorHandler);\n                          }\n                        } else {\n                          goBack();\n                        }\n                      },\n                      () => {\n                        loading(false);\n                        if (contact.id) {\n                          dispatch(deleteContact(contact.id)).catch(apiErrorHandler);\n                        }\n                        showNotification('An error occurred.', 'Something went wrong', 'error');\n                      }\n                    );\n                  });\n              }\n            }).catch(apiErrorHandler);\n        }).catch(apiErrorHandler);\n    }\n  }, [account]);\n\n  return (\n    <div className=\"page\">\n      <MiniBox\n        heading={t('link_card.title')}\n        footer={(\n          <Button width=\"100%\" variant=\"primary\" onClick={onSubmit}>\n            {t('link_card.ctaText')}\n          </Button>\n        )}\n      >\n        <Box width=\"100%\" paddingTop=\"15px\">\n          <FormControl variant=\"primary\">\n            <FormLabel variant=\"primary\">\n              {t('link_card.card')}\n            </FormLabel>\n            {\n              showLoader && <Skeleton w=\"100%\" h={iframeHeight} />\n            }\n            <Box\n              h={iframeHeight}\n              className={style.iframeInput}\n              style={frameStyle}\n              id=\"card-number\"\n            />\n          </FormControl>\n          <FormControl variant=\"primary\">\n            <FormLabel variant=\"primary\">\n              {t('link_card.expiry')}\n            </FormLabel>\n            {\n              showLoader && <Skeleton w=\"100%\" h={iframeHeight} />\n            }\n            <Box\n              h={iframeHeight}\n              className={style.iframeInput}\n              style={frameStyle}\n              id=\"card-expiration-date\"\n            />\n          </FormControl>\n        </Box>\n      </MiniBox>\n    </div>\n  );\n};\n\nexport default LinkCard;\n","import { useTheme } from '@chakra-ui/system';\nimport { isFunction, isBrowser, __DEV__, memoizedGet, isObject, breakpoints, isArray, fromEntries, arrayToObjectNotation } from '@chakra-ui/utils';\nimport * as React from 'react';\nimport { useState, useLayoutEffect, useEffect } from 'react';\nimport { useEnvironment } from '@chakra-ui/react-env';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nvar useSafeLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\n/**\n * React hook that tracks state of a CSS media query\n *\n * @param query the media query to match\n * @param options the mediq query options { fallback, ssr }\n */\nfunction useMediaQuery(query, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$ssr = _options.ssr,\n      ssr = _options$ssr === void 0 ? true : _options$ssr,\n      fallback = _options.fallback;\n  var env = useEnvironment();\n  var queries = Array.isArray(query) ? query : [query];\n  var fallbackValues = Array.isArray(fallback) ? fallback : [fallback];\n  fallbackValues = fallbackValues.filter(function (v) {\n    return v != null;\n  });\n\n  var _useState = useState(function () {\n    return queries.map(function (query, index) {\n      return {\n        media: query,\n        matches: ssr ? !!fallbackValues[index] : env.window.matchMedia(query).matches\n      };\n    });\n  }),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  useSafeLayoutEffect(function () {\n    // set initial matches\n    if (ssr) {\n      setValue(queries.map(function (query) {\n        return {\n          media: query,\n          matches: env.window.matchMedia(query).matches\n        };\n      }));\n    }\n\n    var mql = queries.map(function (query) {\n      return env.window.matchMedia(query);\n    });\n\n    var handler = function handler(evt) {\n      setValue(function (prev) {\n        return prev.slice().map(function (item) {\n          if (item.media === evt.media) return _extends({}, item, {\n            matches: evt.matches\n          });\n          return item;\n        });\n      });\n    };\n\n    mql.forEach(function (mql) {\n      if (isFunction(mql.addListener)) mql.addListener(handler);else mql.addEventListener(\"change\", handler);\n    });\n    return function () {\n      mql.forEach(function (mql) {\n        if (isFunction(mql.removeListener)) mql.removeListener(handler);else mql.removeEventListener(\"change\", handler);\n      });\n    };\n  }, []);\n  return value.map(function (item) {\n    return item.matches;\n  });\n}\n\n/**\n * Visibility\n *\n * React component to control the visibility of its\n * children based on the current breakpoint\n */\nvar Visibility = function Visibility(props) {\n  var breakpoint = props.breakpoint,\n      hide = props.hide,\n      children = props.children,\n      ssr = props.ssr;\n\n  var _useMediaQuery = useMediaQuery(breakpoint, {\n    ssr: ssr\n  }),\n      show = _useMediaQuery[0];\n\n  var isVisible = hide ? !show : show;\n  var rendered = isVisible ? children : null;\n  return rendered;\n};\n\nvar Hide = function Hide(props) {\n  var children = props.children,\n      ssr = props.ssr;\n  var query = useQuery(props);\n  return /*#__PURE__*/React.createElement(Visibility, {\n    breakpoint: query,\n    hide: true,\n    ssr: ssr\n  }, children);\n};\n\nif (__DEV__) {\n  Hide.displayName = \"Hide\";\n}\n\nvar Show = function Show(props) {\n  var children = props.children,\n      ssr = props.ssr;\n  var query = useQuery(props);\n  return /*#__PURE__*/React.createElement(Visibility, {\n    breakpoint: query,\n    ssr: ssr\n  }, children);\n};\n\nif (__DEV__) {\n  Show.displayName = \"Show\";\n}\n\nvar getBreakpoint = function getBreakpoint(theme, value) {\n  return memoizedGet(theme, \"breakpoints.\" + value, value);\n};\n\nfunction useQuery(props) {\n  var _props$breakpoint = props.breakpoint,\n      breakpoint = _props$breakpoint === void 0 ? \"\" : _props$breakpoint,\n      below = props.below,\n      above = props.above;\n  var theme = useTheme();\n  var bpBelow = getBreakpoint(theme, below);\n  var bpAbove = getBreakpoint(theme, above);\n  var query = breakpoint;\n\n  if (bpBelow) {\n    query = \"(max-width: \" + bpBelow + \")\";\n  } else if (bpAbove) {\n    query = \"(min-width: \" + bpAbove + \")\";\n  }\n\n  return query;\n}\n\n/**\n * React hook used to get the user's animation preference.\n */\n\nfunction usePrefersReducedMotion(options) {\n  var _useMediaQuery = useMediaQuery(\"(prefers-reduced-motion: reduce)\", options),\n      prefersReducedMotion = _useMediaQuery[0];\n\n  return prefersReducedMotion;\n}\n/**\n * React hook for getting the user's color mode preference.\n */\n\nfunction useColorModePreference(options) {\n  var _useMediaQuery2 = useMediaQuery([\"(prefers-color-scheme: light)\", \"(prefers-color-scheme: dark)\"], options),\n      isLight = _useMediaQuery2[0],\n      isDark = _useMediaQuery2[1];\n\n  if (isLight) return \"light\";\n  if (isDark) return \"dark\";\n  return undefined;\n}\n\n/**\n * React hook used to get the current responsive media breakpoint.\n *\n * For SSR, you can use a package like [is-mobile](https://github.com/kaimallea/isMobile)\n * to get the default breakpoint value from the user-agent.\n */\nfunction useBreakpoint(arg) {\n  var _breakpoints$index$br, _breakpoints$index;\n\n  var opts = isObject(arg) ? arg : {\n    fallback: arg != null ? arg : \"base\"\n  };\n  var theme = useTheme();\n\n  var breakpoints = theme.__breakpoints.details.map(function (_ref) {\n    var minMaxQuery = _ref.minMaxQuery,\n        breakpoint = _ref.breakpoint;\n    return {\n      breakpoint: breakpoint,\n      query: minMaxQuery.replace(\"@media screen and \", \"\")\n    };\n  });\n\n  var fallback = breakpoints.map(function (bp) {\n    return bp.breakpoint === opts.fallback;\n  });\n  var values = useMediaQuery(breakpoints.map(function (bp) {\n    return bp.query;\n  }), {\n    fallback: fallback,\n    ssr: opts.ssr\n  });\n  var index = values.findIndex(function (value) {\n    return value == true;\n  });\n  return (_breakpoints$index$br = (_breakpoints$index = breakpoints[index]) == null ? void 0 : _breakpoints$index.breakpoint) != null ? _breakpoints$index$br : opts.fallback;\n}\n\nfunction getClosestValue(values, breakpoint, breakpoints$1) {\n  if (breakpoints$1 === void 0) {\n    breakpoints$1 = breakpoints;\n  }\n\n  var index = Object.keys(values).indexOf(breakpoint);\n\n  if (index !== -1) {\n    return values[breakpoint];\n  }\n\n  var stopIndex = breakpoints$1.indexOf(breakpoint);\n\n  while (stopIndex >= 0) {\n    var key = breakpoints$1[stopIndex];\n\n    if (values[key] != null) {\n      index = stopIndex;\n      break;\n    }\n\n    stopIndex -= 1;\n  }\n\n  if (index !== -1) {\n    var _key = breakpoints$1[index];\n    return values[_key];\n  }\n\n  return undefined;\n}\n\n/**\n * React hook for getting the value for the current breakpoint from the\n * provided responsive values object.\n *\n * For SSR, you can use a package like [is-mobile](https://github.com/kaimallea/isMobile)\n * to get the default breakpoint value from the user-agent\n *\n * @example\n * const width = useBreakpointValue({ base: '150px', md: '250px' })\n */\n\nfunction useBreakpointValue(values, arg) {\n  var _theme$__breakpoints;\n\n  var opts = isObject(arg) ? arg : {\n    fallback: arg != null ? arg : \"base\"\n  };\n  var breakpoint = useBreakpoint(opts);\n  var theme = useTheme();\n  if (!breakpoint) return;\n  /**\n   * Get the sorted breakpoint keys from the provided breakpoints\n   */\n\n  var breakpoints = Array.from(((_theme$__breakpoints = theme.__breakpoints) == null ? void 0 : _theme$__breakpoints.keys) || []);\n  var obj = isArray(values) ? fromEntries(Object.entries(arrayToObjectNotation(values, breakpoints)).map(function (_ref) {\n    var key = _ref[0],\n        value = _ref[1];\n    return [key, value];\n  })) : values;\n  return getClosestValue(obj, breakpoint, breakpoints);\n}\n\nexport { Hide, Show, useBreakpoint, useBreakpointValue, useColorModePreference, useMediaQuery, usePrefersReducedMotion, useQuery };\n","import { useBreakpointValue } from '@chakra-ui/media-query';\nimport { chakra, keyframes, forwardRef, useStyleConfig, omitThemingProps } from '@chakra-ui/system';\nimport { usePrevious } from '@chakra-ui/hooks';\nimport { cx, __DEV__ } from '@chakra-ui/utils';\nimport * as React from 'react';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded = [\"startColor\", \"endColor\", \"isLoaded\", \"fadeDuration\", \"speed\", \"className\"],\n    _excluded2 = [\"noOfLines\", \"spacing\", \"skeletonHeight\", \"className\", \"startColor\", \"endColor\", \"isLoaded\", \"fadeDuration\", \"speed\", \"children\"],\n    _excluded3 = [\"size\"];\nvar StyledSkeleton = chakra(\"div\", {\n  baseStyle: {\n    boxShadow: \"none\",\n    backgroundClip: \"padding-box\",\n    cursor: \"default\",\n    color: \"transparent\",\n    pointerEvents: \"none\",\n    userSelect: \"none\",\n    \"&::before, &::after, *\": {\n      visibility: \"hidden\"\n    }\n  }\n});\nvar fade = keyframes({\n  from: {\n    opacity: 0\n  },\n  to: {\n    opacity: 1\n  }\n});\n\nvar useIsFirstRender = function useIsFirstRender() {\n  var isFirstRender = React.useRef(true);\n  React.useEffect(function () {\n    isFirstRender.current = false;\n  }, []);\n  return isFirstRender.current;\n};\n\nvar Skeleton = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyleConfig(\"Skeleton\", props);\n  var isFirstRender = useIsFirstRender();\n\n  var _omitThemingProps = omitThemingProps(props);\n      _omitThemingProps.startColor;\n      _omitThemingProps.endColor;\n      var isLoaded = _omitThemingProps.isLoaded,\n      fadeDuration = _omitThemingProps.fadeDuration;\n      _omitThemingProps.speed;\n      var className = _omitThemingProps.className,\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded);\n\n  var wasPreviouslyLoaded = usePrevious(isLoaded);\n\n  var _className = cx(\"chakra-skeleton\", className);\n\n  if (isLoaded) {\n    var animation = isFirstRender || wasPreviouslyLoaded ? \"none\" : fade + \" \" + fadeDuration + \"s\";\n    return /*#__PURE__*/React.createElement(chakra.div, _extends({\n      ref: ref,\n      className: _className,\n      __css: {\n        animation: animation\n      }\n    }, rest));\n  }\n\n  return /*#__PURE__*/React.createElement(StyledSkeleton, _extends({\n    ref: ref,\n    className: _className\n  }, rest, {\n    __css: styles\n  }));\n});\nSkeleton.defaultProps = {\n  fadeDuration: 0.4,\n  speed: 0.8\n};\n\nif (__DEV__) {\n  Skeleton.displayName = \"Skeleton\";\n}\n\nfunction range(count) {\n  return Array(count).fill(1).map(function (_, index) {\n    return index + 1;\n  });\n}\n\nvar defaultNoOfLines = 3;\nvar SkeletonText = function SkeletonText(props) {\n  var _props$noOfLines = props.noOfLines,\n      noOfLines = _props$noOfLines === void 0 ? defaultNoOfLines : _props$noOfLines,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? \"0.5rem\" : _props$spacing,\n      _props$skeletonHeight = props.skeletonHeight,\n      skeletonHeight = _props$skeletonHeight === void 0 ? \"0.5rem\" : _props$skeletonHeight,\n      className = props.className,\n      startColor = props.startColor,\n      endColor = props.endColor,\n      isLoaded = props.isLoaded,\n      fadeDuration = props.fadeDuration,\n      speed = props.speed,\n      children = props.children,\n      rest = _objectWithoutPropertiesLoose(props, _excluded2);\n\n  var noOfLinesValue = useBreakpointValue(typeof noOfLines === \"number\" ? [noOfLines] : noOfLines) || defaultNoOfLines;\n  var numbers = range(noOfLinesValue);\n\n  var getWidth = function getWidth(index) {\n    if (noOfLinesValue > 1) {\n      return index === numbers.length ? \"80%\" : \"100%\";\n    }\n\n    return \"100%\";\n  };\n\n  var _className = cx(\"chakra-skeleton__group\", className);\n\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    className: _className\n  }, rest), numbers.map(function (number, index) {\n    if (isLoaded && index > 0) {\n      // skip other lines\n      return null;\n    }\n\n    var sizeProps = isLoaded ? null : {\n      mb: number === numbers.length ? \"0\" : spacing,\n      width: getWidth(number),\n      height: skeletonHeight\n    };\n    return /*#__PURE__*/React.createElement(Skeleton, _extends({\n      key: numbers.length.toString() + number,\n      startColor: startColor,\n      endColor: endColor,\n      isLoaded: isLoaded,\n      fadeDuration: fadeDuration,\n      speed: speed\n    }, sizeProps), // allows animating the children\n    index === 0 ? children : undefined);\n  }));\n};\n\nif (__DEV__) {\n  SkeletonText.displayName = \"SkeletonText\";\n}\n\nvar SkeletonCircle = function SkeletonCircle(_ref) {\n  var _ref$size = _ref.size,\n      size = _ref$size === void 0 ? \"2rem\" : _ref$size,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded3);\n\n  return /*#__PURE__*/React.createElement(Skeleton, _extends({\n    borderRadius: \"full\",\n    boxSize: size\n  }, rest));\n};\n\nif (__DEV__) {\n  SkeletonCircle.displayName = \"SkeletonCircle\";\n}\n\nexport { Skeleton, SkeletonCircle, SkeletonText };\n"],"names":["t","useTranslation","form","useRef","goBack","useDrawer","dispatch","useAppAsyncDispatch","_useState","useState","_useState2","_slicedToArray","showLoader","setShowLoader","mode","useAppSelector","store","core","config","account","selectedAccount","shallowEqual","inputStyle","useMultiStyleConfig","variant","theme","useTheme","inputVars","styles","global","VGSInput","_objectSpread","field","boxSizing","color","frameStyle","boxShadow","border","concat","borderWidth","borderColor","borderRadius","display","iframeHeight","useMemo","height","vgsInit","useCallback","current","window","VGSCollect","create","getValutId","type","name","placeholder","showCardIcon","validations","css","yearLength","serializers","options","monthName","yearName","useEffect","vgsScript","document","createElement","id","crossOrigin","src","onload","head","append","_document$getElementB","VGSShow","undefined","getElementById","remove","onSubmit","loading","cardNumber","state","cardExp","debitCard","isValid","getPerson","then","person","createContact","accountId","firstName","lastName","phone","email","card","address","addressType","contact","getLinkCardToken","_ref","debitCardToken","submit","headers","method","mapDotToObject","data","status","sysMessage","showNotification","message","deleteContact","catch","apiErrorHandler","_jsx","className","children","MiniBox","heading","footer","Button","width","onClick","_jsxs","Box","paddingTop","FormControl","FormLabel","Skeleton","w","h","style","isBrowser","useLayoutEffect","__DEV__","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","_excluded","StyledSkeleton","chakra","baseStyle","backgroundClip","cursor","pointerEvents","userSelect","visibility","fade","keyframes","from","opacity","to","forwardRef","props","ref","useStyleConfig","isFirstRender","React","useIsFirstRender","_omitThemingProps","omitThemingProps","startColor","endColor","isLoaded","fadeDuration","speed","rest","wasPreviouslyLoaded","usePrevious","_className","cx","animation","div","__css","defaultProps","displayName"],"sourceRoot":""}