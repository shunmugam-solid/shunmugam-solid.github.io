{"version":3,"file":"static/js/6156.08f59b63.chunk.js","mappings":"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","sources":["components/OwnershipPercentageInput.tsx","store/actionCreators/business.ts","store/middlewares/business.ts","views/ao/Kyb/TheirOwnerShip/TheirOwnerShip.tsx"],"sourcesContent":["import React from 'react';\nimport { Input } from '@chakra-ui/react';\n\ntype Props = {\n    value: number | '',\n    placeholder?: string,\n    onChange: (v: number, isValid: boolean) => void;\n}\n\n/**\n * Ownership percentage input\n */\nconst OwnershipPercentageInput = ({ value, placeholder, onChange }: Props) => (\n  <Input\n    type=\"number\"\n    variant=\"primary\"\n    value={value}\n    data-testid=\"percentage-input\"\n    placeholder={placeholder}\n    onChange={(e) => {\n      if (e.target.value.startsWith('0')) {\n        return;\n      }\n      // eslint-disable-next-line radix\n      const v = parseInt(e.target.value);\n      if (v > 100) {\n        return;\n      }\n\n      const isValid = !Number.isNaN(v) && v > 25;\n      onChange(v, isValid);\n    }}\n  />\n);\n\nexport default OwnershipPercentageInput;\n","import { actionCreator } from '..';\nimport { business, businessOwner } from '../../types/business';\nimport {\n  UPDATE_BUSINESS_LIST, UPDATE_OWNERS_LIST, UPDATE_SELECTED_BUSINESS, UPDATE_SELECTED_BUSINESS_OWNER\n} from '../actionTypes/business';\n\nexport const updateBusinessList: actionCreator<business[]> = (payload) => ({\n  type: UPDATE_BUSINESS_LIST,\n  payload,\n});\n\nexport const updateSelectedBusiness: actionCreator<business> = (payload) => ({\n  type: UPDATE_SELECTED_BUSINESS,\n  payload,\n});\n\nexport const updateOwnersList: actionCreator<businessOwner[]> = (payload) => ({\n  type: UPDATE_OWNERS_LIST,\n  payload,\n});\n\nexport const updateSelectedBusinessOwner: actionCreator<businessOwner | null> = (payload) => ({\n  type: UPDATE_SELECTED_BUSINESS_OWNER,\n  payload,\n});\n","import { AsyncAppAction } from '..';\nimport { business, businessOwner } from '../../types/business';\nimport { loading } from '../../utils/general';\nimport http from '../../utils/http';\nimport { updateSelectedBusiness, updateBusinessList, updateOwnersList } from '../actionCreators/business';\n\n/**\n * list all business\n * @returns {Array<business>}\n */\nexport const listAllbusiness = (\n  limit = 50,\n  offset = 0\n): AsyncAppAction<{data: business[], total: number}> => (dispatch) => new Promise((resolve, reject) => {\n  loading(true);\n  const url = `v1/business?include=accounts&limit=${limit}&offset=${offset}`;\n\n  http\n    .get<{data: business[], total: number}>(url)\n    .then(({ data }) => {\n      dispatch(updateBusinessList(data.data));\n      resolve(data);\n    })\n    .catch((e) => {\n      if (e.response && e.response.data) {\n        reject(e.response.data);\n      } else {\n        reject(e);\n      }\n    })\n    .finally(() => {\n      loading(false);\n    });\n});\n\n/**\n * create business\n * @returns {Array<business>}\n */\nexport const createbusiness = (payload: {\n  legalName: string\n  entityType: string\n  dba?: string\n  email: string\n  idType: string\n  idNumber: string\n}): AsyncAppAction<business> => (dispatch) => new Promise((resolve, reject) => {\n  loading(true);\n  http\n    .post<business>('v1/business', payload)\n    .then(({ data }) => {\n      dispatch(updateSelectedBusiness(data));\n      resolve(data);\n    })\n    .catch((e) => {\n      if (e.response && e.response.data) {\n        reject(e.response.data);\n      } else {\n        reject(e);\n      }\n    })\n    .finally(() => {\n      loading(false);\n    });\n});\n\n/**\n * update business\n * @returns {Array<business>}\n */\nexport const updatebusiness = (businessId: string, payload: {\n  legalName?: string\n  entityType?: string\n  dba?: string\n  email?: string\n  idType?: string\n  idNumber?: string,\n  address?: {\n    line1: string,\n    line2: string,\n    city: string,\n    postalCode: string,\n    country: string,\n    addressType: string,\n    state: string,\n  }\n}): AsyncAppAction<business> => (dispatch) => new Promise((resolve, reject) => {\n  loading(true);\n  http\n    .patch<business>(`v1/business/${businessId}`, payload)\n    .then(({ data }) => {\n      dispatch(updateSelectedBusiness(data));\n      resolve(data);\n    })\n    .catch((e) => {\n      if (e.response && e.response.data) {\n        reject(e.response.data);\n      } else {\n        reject(e);\n      }\n    })\n    .finally(() => {\n      loading(false);\n    });\n});\n\n/**\n * get business by od\n * @returns {Array<business>}\n */\nexport const getbusinessById = (id: string, showLoader = true): AsyncAppAction<business> => () => new Promise((resolve, reject) => {\n  if (showLoader) { loading(true); }\n  const url = `v1/business/${id}`;\n\n  http\n    .get<business>(url)\n    .then(({ data }) => {\n      resolve(data);\n    })\n    .catch((e) => {\n      if (e.response && e.response.data) {\n        reject(e.response.data);\n      } else {\n        reject(e);\n      }\n    })\n    .finally(() => {\n      if (showLoader) { loading(false); }\n    });\n});\n\n/**\n * get business by od\n * @returns {Array<business>}\n */\nexport const getAllOwners = (businessId: string): AsyncAppAction<{\n  data: businessOwner[],\n  total: number\n}> => (dispatch) => new Promise((resolve, reject) => {\n  loading(true);\n\n  http\n    .get<{\n      data: businessOwner[],\n      total: number\n    }>(`v1/owner?businessId=${businessId}`)\n    .then(({ data }) => {\n      dispatch(updateOwnersList(data.data));\n      resolve(data);\n    })\n    .catch((e) => {\n      if (e.response && e.response.data) {\n        reject(e.response.data);\n      } else {\n        reject(e);\n      }\n    })\n    .finally(() => {\n      loading(false);\n    });\n});\n\n/**\n * submit kyb\n * @returns {Array<business>}\n */\nexport const submitKyb = (businessId: string): AsyncAppAction<business> => () => new Promise((resolve, reject) => {\n  loading(true);\n  http\n    .post(`v1/business/${businessId}/kyb`, { businessId })\n    .then(({ data }) => {\n      resolve(data);\n    })\n    .catch((e) => {\n      if (e.response && e.response.data) {\n        reject(e.response.data);\n      } else {\n        reject(e);\n      }\n    })\n    .finally(() => {\n      loading(false);\n    });\n});\n\n/**\n * update owner\n * @returns {Array<businessOwner>}\n */\nexport const updateOwner = (ownerId: string, details: {\n  ownership: string,\n  person?: {\n    firstName: string;\n    lastName: string;\n    email: string;\n    phone: string;\n    dateOfBirth: string;\n    idNumber: string;\n    idType: string;\n    address: {\n      line1: string;\n      line2: string;\n      city: string;\n      state: string;\n      country: string;\n      postalCode: string;\n      addressType: string;\n    }\n  }\n}): AsyncAppAction<business> => () => new Promise((resolve, reject) => {\n  loading(true);\n  http\n    .patch(`v1/owner/${ownerId}`, details)\n    .then(({ data }) => {\n      resolve(data);\n    })\n    .catch((e) => {\n      if (e.response && e.response.data) {\n        reject(e.response.data);\n      } else {\n        reject(e);\n      }\n    })\n    .finally(() => {\n      loading(false);\n    });\n});\n\n/**\n * create owner\n * @returns {Array<businessOwner>}\n */\nexport const createOwner = (details: {\n  businessId: string\n  ownership: string,\n  person?: {\n    firstName: string;\n    lastName: string;\n    phone: string;\n    email: string;\n    dateOfBirth: string;\n    idNumber: string;\n    idType: string;\n    address: {\n      line1: string;\n      line2: string;\n      city: string;\n      state: string;\n      country: string;\n      postalCode: string;\n      addressType: string;\n    }\n  }\n}): AsyncAppAction<business> => () => new Promise((resolve, reject) => {\n  loading(true);\n  http\n    .post('v1/owner', details)\n    .then(({ data }) => {\n      resolve(data);\n    })\n    .catch((e) => {\n      if (e.response && e.response.data) {\n        reject(e.response.data);\n      } else {\n        reject(e);\n      }\n    })\n    .finally(() => {\n      loading(false);\n    });\n});\n\n/**\n * Submit owner kyc\n * @param ownerId\n * @returns\n */\nexport const submitOwnerKyc = (ownerId: string) : AsyncAppAction<business> => () => new Promise((resolve, reject) => {\n  loading(true);\n  http\n    .post(`v1/owner/${ownerId}/kyc`)\n    .then(({ data }) => {\n      resolve(data);\n    })\n    .catch((e) => {\n      if (e.response && e.response.data) {\n        reject(e.response.data);\n      } else {\n        reject(e);\n      }\n    })\n    .finally(() => {\n      loading(false);\n    });\n});\n","import React, { useCallback, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Box, Button, FormControl, FormLabel, useStyleConfig, Text,\n} from '@chakra-ui/react';\nimport { shallowEqual } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport MiniBox from '../../../../layout/MiniBox';\nimport { useAppAsyncDispatch, useAppSelector } from '../../../../hooks/store';\nimport { createOwner, submitOwnerKyc, updateOwner } from '../../../../store/middlewares/business';\nimport { apiErrorHandler } from '../../../../utils/general';\nimport OwnershipPercentageInput from '../../../../components/OwnershipPercentageInput';\n\n/**\n * Kyb Owners Ownership - Component for collecting the Ownership of the bussiness owners.\n * @module KYB\n * @returns {JSX.Element}\n */\nconst TheirOwnerShip = () => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const dispatch = useAppAsyncDispatch();\n\n  const style:any = useStyleConfig('FormControl', {\n    variant: 'primary'\n  });\n\n  const { selectedBusinessOwner, selectedBusiness } = useAppSelector((store) => store.business, shallowEqual);\n\n  const [ownership, updateOwnerShip] = useState<number | ''>(selectedBusinessOwner?.ownership ? parseInt(selectedBusinessOwner?.ownership, 10) : '');\n\n  const isValid = useMemo(() => (!Number.isNaN(ownership) && ownership >= 25 && ownership <= 100), [ownership]);\n\n  const ownerKyc = useCallback((id: string) => {\n    dispatch(submitOwnerKyc(id))\n      .then(() => {\n        navigate('/ao/kyb/ownersList');\n      }).catch(apiErrorHandler);\n  }, []);\n\n  const submit = useCallback(() => {\n    if (selectedBusinessOwner?.id && selectedBusinessOwner.person.address) {\n      dispatch(updateOwner(selectedBusinessOwner?.id, {\n        ownership: `${ownership}`,\n        person: {\n          firstName: selectedBusinessOwner.person.firstName,\n          lastName: selectedBusinessOwner.person.lastName,\n          email: selectedBusinessOwner.person.email,\n          dateOfBirth: selectedBusinessOwner.person.dateOfBirth,\n          phone: selectedBusinessOwner.person.phone,\n          idNumber: selectedBusinessOwner.person.idNumber.replaceAll('-', ''),\n          idType: selectedBusinessOwner.person.idType,\n          address: selectedBusinessOwner.person.address\n        }\n      })).then(() => {\n        setTimeout(() => {\n          ownerKyc(selectedBusinessOwner.id);\n        }, 0);\n      }).catch(apiErrorHandler);\n    } else if (selectedBusinessOwner && selectedBusiness && selectedBusinessOwner.person.address) {\n      dispatch(createOwner({\n        businessId: selectedBusiness.id,\n        ownership: `${ownership}`,\n        person: {\n          firstName: selectedBusinessOwner.person.firstName,\n          lastName: selectedBusinessOwner.person.lastName,\n          email: selectedBusinessOwner.person.email,\n          dateOfBirth: selectedBusinessOwner.person.dateOfBirth,\n          phone: selectedBusinessOwner.person.phone,\n          idNumber: selectedBusinessOwner.person.idNumber.replaceAll('-', ''),\n          idType: selectedBusinessOwner.person.idType,\n          address: selectedBusinessOwner.person.address\n        }\n      })).then(({ id }) => {\n        setTimeout(() => {\n          ownerKyc(id);\n        }, 0);\n      }).catch(apiErrorHandler);\n    }\n  }, [selectedBusinessOwner, ownership]);\n\n  return (\n    <div className=\"page\">\n      <form onSubmit={(e) => {\n        e.preventDefault();\n        submit();\n      }}\n      >\n        <MiniBox\n          varient=\"box\"\n          heading={t('their_ownership.title')}\n          footer={(\n            <Box>\n              <Text variant=\"small\" pb=\"16px\">{t('their_ownership.toHelp')}</Text>\n              <Button data-testid=\"submit-btn\" width=\"100%\" variant=\"primary\" disabled={!isValid} type=\"submit\">\n                {t('their_ownership.ctaText')}\n              </Button>\n            </Box>\n)}\n        >\n          <Box width=\"100%\">\n\n            <FormControl variant=\"primary\" style={style}>\n              <FormLabel variant=\"primary\">\n                {t('their_ownership.enterTheirOwnership')}\n              </FormLabel>\n              <OwnershipPercentageInput placeholder={t('their_ownership.percentageValue')} value={ownership} onChange={updateOwnerShip} />\n            </FormControl>\n\n          </Box>\n        </MiniBox>\n      </form>\n    </div>\n  );\n};\n\nexport default TheirOwnerShip;\n"],"names":["_ref","value","placeholder","onChange","_jsx","Input","type","variant","e","target","startsWith","v","parseInt","isValid","Number","isNaN","updateBusinessList","payload","UPDATE_BUSINESS_LIST","updateSelectedBusiness","UPDATE_SELECTED_BUSINESS","updateOwnersList","UPDATE_OWNERS_LIST","updateSelectedBusinessOwner","UPDATE_SELECTED_BUSINESS_OWNER","listAllbusiness","limit","arguments","length","undefined","offset","dispatch","Promise","resolve","reject","loading","url","concat","http","get","then","data","catch","response","finally","createbusiness","post","_ref2","updatebusiness","businessId","patch","_ref3","getbusinessById","id","showLoader","_ref4","getAllOwners","_ref5","submitKyb","_ref6","updateOwner","ownerId","details","_ref7","createOwner","_ref8","submitOwnerKyc","_ref9","t","useTranslation","navigate","useNavigate","useAppAsyncDispatch","style","useStyleConfig","_useAppSelector","useAppSelector","store","business","shallowEqual","selectedBusinessOwner","selectedBusiness","_useState","useState","ownership","_useState2","_slicedToArray","updateOwnerShip","useMemo","ownerKyc","useCallback","apiErrorHandler","submit","person","address","firstName","lastName","email","dateOfBirth","phone","idNumber","replaceAll","idType","setTimeout","className","children","onSubmit","preventDefault","MiniBox","varient","heading","footer","_jsxs","Box","Text","pb","Button","width","disabled","FormControl","FormLabel","OwnershipPercentageInput"],"sourceRoot":""}