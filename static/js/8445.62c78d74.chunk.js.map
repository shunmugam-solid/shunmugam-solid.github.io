{"version":3,"file":"static/js/8445.62c78d74.chunk.js","mappings":"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","sources":["store/actionCreators/checkpayment.ts","store/actionCreators/payment.ts","store/middlewares/checkdeposit.ts","webpack://drop-in-ui/./src/views/checkdeposit/CheckDetailsConfirm/CheckDetailsConfirm.module.css?f31d","views/checkdeposit/CheckDetailsConfirm/CheckDetailsConfirm.tsx"],"sourcesContent":["/* eslint-disable import/prefer-default-export */\nimport { actionCreator } from '..';\nimport { checkDepositData, check } from '../../types/checkdeposit';\nimport { UPDATE_CHECK_DEPOSIT_DATA, UPDATE_CHECK_DEPOSIT_LIST } from '../actionTypes/checkpayment';\n\n/**\n * update chek deposit payload\n * @param {*} payload\n * @returns {Action<string, any>}\n */\nexport const updateCheckDepositData: actionCreator<checkDepositData> = (payload) => ({\n  type: UPDATE_CHECK_DEPOSIT_DATA,\n  payload\n});\n\n/**\n * update chek deposit list\n * @param {*} payload\n * @returns {Action<string, any>}\n */\nexport const updateCheckList: actionCreator<{\n  total: number\n  data: check[]\n}> = (payload) => ({\n  type: UPDATE_CHECK_DEPOSIT_LIST,\n  payload\n});\n","/* eslint-disable import/prefer-default-export */\nimport { actionCreator } from '..';\nimport { paymentResponse } from '../../types/payment';\nimport { UPDATE_PAYMENT_RESPONSE } from '../actionTypes/payment';\n\n/**\n * update core state\n * @param {*} payload\n * @returns {Action<string, any>}\n */\nexport const updatePaymentResponse: actionCreator<paymentResponse> = (payload) => ({\n  type: UPDATE_PAYMENT_RESPONSE,\n  payload\n});\n","import http from '../../utils/http';\nimport { loading } from '../../utils/general';\nimport { AsyncAppAction, RootState } from '..';\nimport { updatePaymentResponse } from '../actionCreators/payment';\nimport { paymentResponse } from '../../types/payment';\nimport { check } from '../../types/checkdeposit';\nimport { updateCheckList } from '../actionCreators/checkpayment';\n\n/**\n * check deposit\n * @param payload\n * @returns\n */\nexport const createCheckDeposit = (payload: {\n    accountId: string,\n    contactId: string,\n    amount: string,\n    description: string\n  }): AsyncAppAction<paymentResponse> => (dispatch) => new Promise((resolve, reject) => {\n  /* */\n  loading(true);\n  http\n    .post<paymentResponse>('v1/receive/check', payload)\n    .then(({ data }) => {\n      dispatch(updatePaymentResponse(data));\n      resolve(data);\n    })\n    .catch(reject)\n    .finally(() => {\n      loading(false);\n    });\n});\n\n/**\n * ach\n * @param payload\n * @returns\n */\nexport const updateCheckDepositFiles = (id: string, payload: FormData): AsyncAppAction<paymentResponse> => (_, getState: () => RootState) => new Promise((resolve, reject) => {\n/* */\n  loading(true);\n  const store = getState();\n  const authTokens = store.user.authTokenDetails;\n  const { apiBasePath } = store.core.config;\n  const xhr = new XMLHttpRequest();\n  xhr.open('PATCH', `${apiBasePath}v1/receive/check/${id}/files`);\n  if ('accessToken' in authTokens) {\n    xhr.setRequestHeader('AUTHORIZATION', `Bearer ${authTokens.accessToken}`);\n  }\n  xhr.addEventListener('load', () => {\n    if (xhr.status >= 200 && xhr.status <= 300) {\n      let { response } = xhr;\n      if (typeof xhr.response === 'string') {\n        response = JSON.parse(xhr.response);\n      }\n      resolve(response);\n    } else {\n      let { response } = xhr;\n      if (typeof xhr.response === 'string') {\n        response = JSON.parse(xhr.response);\n      }\n      reject(response);\n    }\n    loading(false);\n  });\n  xhr.addEventListener('error', (e) => {\n    let error = e;\n    if (typeof e === 'string') {\n      error = JSON.parse(e);\n    }\n    reject(error);\n    loading(false);\n  });\n  xhr.send(payload);\n  /*\n  http\n    .patch(`v1/receive/check/${id}/files`, payload, {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    })\n    .then(({ data }) => {\n      resolve(data);\n    })\n    .catch(reject)\n    .finally(() => {\n      loading(false);\n    });\n  */\n});\n\n/**\n * check deposit\n * @param payload\n * @returns\n */\nexport const getCheckList = (\n  accountId: string,\n  limit = 25,\n  offset = 0,\n): AsyncAppAction<{\n  total: number\n  data: check[]\n}> => (dispatch, getState) => new Promise((resolve, reject) => {\n/* */\n  loading(true);\n  http\n    .get<{\n      total: number\n      data: check[]\n    }>(`v1/receive/check?accountId=${accountId}&limit=${limit}&offset=${offset}`)\n    .then(({ data }) => {\n      const state = getState().checkdeposit;\n      let d: {\n            total: number;\n            data: check[];\n          } = {\n            total: 0,\n            data: [],\n          };\n      if (offset === 0) {\n        d = data;\n      } else {\n        const checks = { ...state.checkList };\n        d = {\n          data: [...checks.data, ...data.data],\n          total: data.total,\n        };\n      }\n\n      dispatch(updateCheckList(d));\n      resolve(d);\n    })\n    .catch(reject)\n    .finally(() => {\n      loading(false);\n    });\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"bodyStyles\":\"CheckDetailsConfirm_bodyStyles__JKI4h\",\"addCheckImagesTitle\":\"CheckDetailsConfirm_addCheckImagesTitle__rT2PN\",\"upload\":\"CheckDetailsConfirm_upload__KW1sd\",\"label\":\"CheckDetailsConfirm_label__TQ4YR\",\"checkInfo\":\"CheckDetailsConfirm_checkInfo__3KwDb\",\"checkInfoItem\":\"CheckDetailsConfirm_checkInfoItem__ucUYo\"};","import React, { useCallback, useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Box, Text, Checkbox, Button, Img, Center, HStack\n} from '@chakra-ui/react';\nimport { shallowEqual } from 'react-redux';\nimport MiniBox from '../../../layout/MiniBox';\nimport style from './CheckDetailsConfirm.module.css';\n\nimport { useAppAsyncDispatch, useAppSelector } from '../../../hooks/store';\nimport { apiErrorHandler, currencyFormat } from '../../../utils/general';\nimport { createCheckDeposit, updateCheckDepositFiles } from '../../../store/middlewares/checkdeposit';\nimport { useDrawer } from '../../../hooks/drawer';\n\nconst Success = React.lazy(() => import('../DepositCheckSuccess/DepositCheckSuccess'));\n\nconst CheckDetailsConfirm = () => {\n  const { t } = useTranslation();\n  const { open } = useDrawer();\n  const dispatch = useAppAsyncDispatch();\n\n  const checkData = useAppSelector((store) => store.checkdeposit.checkData, shallowEqual);\n  const selectedContact = useAppSelector((store) => store.contact.selectedContact, shallowEqual);\n  const selectedAccount = useAppSelector((store) => store.account.selectedAccount, shallowEqual);\n\n  const frontImgUrl = useMemo(() => (checkData.frontImage === null ? '' : URL.createObjectURL(checkData.frontImage)), [checkData.frontImage]);\n  const backImgUrl = useMemo(() => (checkData.backImage === null ? '' : URL.createObjectURL(checkData.backImage)), [checkData.frontImage]);\n\n  const submit = useCallback(() => {\n    if (selectedAccount && selectedContact?.id) {\n      dispatch(createCheckDeposit({\n        accountId: selectedAccount.id,\n        contactId: selectedContact.id,\n        amount: checkData.amount,\n        description: 'Payment'\n      })).then((res) => {\n        if (checkData.frontImage && checkData.backImage) {\n          const formData = new FormData();\n          formData.append('front', checkData.frontImage);\n          formData.append('back', checkData.backImage);\n          formData.append('accountId', selectedAccount.id);\n          dispatch(updateCheckDepositFiles(res.id, formData))\n            .then(() => {\n              open(Success);\n            }).catch(apiErrorHandler);\n        }\n      }).catch(apiErrorHandler);\n    }\n  }, [selectedAccount, selectedContact, checkData]);\n\n  return (\n    <div className=\"page\">\n      <MiniBox\n        heading={t('check_details_confirm.title')}\n        bodyClass={style.bodyStyles}\n        footer={(\n          <Button width=\"100%\" variant=\"primary\" onClick={submit}>\n            {t('check_details_confirm.ctaText')}\n          </Button>\n          )}\n      >\n        <Box width=\"100%\" paddingTop=\"15px\">\n\n          <Box className={style.checkInfo}>\n            <HStack className={style.checkInfoItem}>\n              <Text variant=\"regular\" className={`${style.label} text-dark`} textAlign=\"left\">{t('check_details_confirm.checkAmount')}</Text>\n              <Box w=\"50%\">\n                <Text variant=\"regular\" textAlign=\"left\">{currencyFormat(checkData.amount)}</Text>\n              </Box>\n            </HStack>\n            <HStack className={style.checkInfoItem}>\n              <Text variant=\"regular\" className={`${style.label} text-dark`} textAlign=\"left\">{t('check_details_confirm.depositTo')}</Text>\n              <Box w=\"50%\">\n                <Text variant=\"regular\" textAlign=\"left\">{selectedContact?.name}</Text>\n              </Box>\n            </HStack>\n          </Box>\n\n          <Box className={style.upload}>\n            <Box display=\"flex\">\n              <Checkbox size=\"lg\" isChecked>\n                <Text variant=\"regular\" ml=\"8px\" fontSize=\"16px\">{t('check_details_confirm.frontOfCheck')}</Text>\n              </Checkbox>\n\n            </Box>\n            <Center pt=\"24px\">\n              <Img className={style.card_image} src={frontImgUrl} alt=\"logo\" data-testid=\"card-img\" />\n            </Center>\n\n          </Box>\n          <Box className={style.upload}>\n            <Box display=\"flex\">\n              <Checkbox size=\"lg\" isChecked>\n                <Text variant=\"regular\" ml=\"8px\" fontSize=\"16px\">{t('check_details_confirm.backOfCheck')}</Text>\n              </Checkbox>\n\n            </Box>\n            <Center pt=\"24px\">\n              <Img className={style.card_image} src={backImgUrl} alt=\"logo\" data-testid=\"card-img\" />\n            </Center>\n\n          </Box>\n\n        </Box>\n      </MiniBox>\n\n    </div>\n  );\n};\n\nexport default CheckDetailsConfirm;\n"],"names":["updateCheckDepositData","payload","type","UPDATE_CHECK_DEPOSIT_DATA","updateCheckList","UPDATE_CHECK_DEPOSIT_LIST","updatePaymentResponse","UPDATE_PAYMENT_RESPONSE","createCheckDeposit","dispatch","Promise","resolve","reject","loading","http","post","then","_ref","data","catch","finally","updateCheckDepositFiles","id","_","getState","store","authTokens","user","authTokenDetails","apiBasePath","core","config","xhr","XMLHttpRequest","open","concat","setRequestHeader","accessToken","addEventListener","status","response","JSON","parse","e","error","send","getCheckList","accountId","limit","arguments","length","undefined","offset","get","_ref2","state","checkdeposit","d","total","checks","_objectSpread","checkList","_toConsumableArray","Success","React","t","useTranslation","useDrawer","useAppAsyncDispatch","checkData","useAppSelector","shallowEqual","selectedContact","contact","selectedAccount","account","frontImgUrl","useMemo","frontImage","URL","createObjectURL","backImgUrl","backImage","submit","useCallback","contactId","amount","description","res","formData","FormData","append","apiErrorHandler","_jsx","className","children","MiniBox","heading","bodyClass","style","bodyStyles","footer","Button","width","variant","onClick","_jsxs","Box","paddingTop","checkInfo","HStack","checkInfoItem","Text","label","textAlign","w","currencyFormat","name","upload","display","Checkbox","size","isChecked","ml","fontSize","Center","pt","Img","card_image","src","alt"],"sourceRoot":""}