{"version":3,"file":"static/js/1708.d23d8c41.chunk.js","mappings":"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","sources":["webpack://drop-in-ui/./src/components/ConfirmModal/ConfirmModal.module.css?7833","components/ConfirmModal/ConfirmModal.tsx","webpack://drop-in-ui/./src/views/cards/CardDetails/CardDetails.module.css?0018","views/cards/CardDetails/CardDetails.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"ConfirmModal_modal__fS-v4\",\"modalHeader\":\"ConfirmModal_modalHeader__M3BcQ\",\"modalBody\":\"ConfirmModal_modalBody__uHbgc\",\"modalClose\":\"ConfirmModal_modalClose__Xh2Cs\"};","import React from 'react';\nimport {\n  Text, Button, Modal, ModalOverlay, ModalContent, ModalHeader, ModalBody, ModalFooter, ModalCloseButton\n} from '@chakra-ui/react';\n\nimport style from './ConfirmModal.module.css';\n\ninterface Props {\n  showModal: boolean,\n  title: string,\n  description: string,\n  cancelButton?: string,\n  submitButton?: string,\n  onCancel?: (arg: any) => void;\n  onOk?:() => void;\n}\n\nconst ConfirmModal = ({\n  title, description, cancelButton, submitButton, showModal, onCancel, onOk\n}: Props) => (\n  <Modal isOpen={showModal} size=\"sm\" isCentered onClose={() => onCancel}>\n    <ModalOverlay />\n    <ModalContent className={`${style.modal}`}>\n      <ModalHeader className={`${style.modalHeader}`}>{title}</ModalHeader>\n      <ModalCloseButton onClick={onCancel} className={`${style.modalClose}`} />\n      <ModalBody className={`${style.modalBody}`}>\n        <Text>{description}</Text>\n      </ModalBody>\n\n      <ModalFooter>\n        <Button colorScheme=\"branding\" variant=\"outline\" mr={3} onClick={onCancel}>\n          {cancelButton || 'Cancel'}\n        </Button>\n        <Button onClick={onOk} variant=\"primary\">{submitButton || 'Submit'}</Button>\n      </ModalFooter>\n    </ModalContent>\n  </Modal>\n);\n\nexport default ConfirmModal;\n","// extracted by mini-css-extract-plugin\nexport default {\"cardDetails__card_image_info\":\"CardDetails_cardDetails__card_image_info__wGqcQ\",\"cardDetails__card_image\":\"CardDetails_cardDetails__card_image__G4PsL\",\"cardDetails__card_details\":\"CardDetails_cardDetails__card_details__uDtvO\",\"pointer\":\"CardDetails_pointer__wpB4y\",\"wallet\":\"CardDetails_wallet__NJMkP\",\"cardDetails__action_in_list\":\"CardDetails_cardDetails__action_in_list__-IbkW\",\"iconCopy\":\"CardDetails_iconCopy__8Jl5g\",\"cardNumber\":\"CardDetails_cardNumber__tiHE-\",\"cardDetails__cardNo\":\"CardDetails_cardDetails__cardNo__BOpAt\"};","/* eslint-disable no-constant-condition */\nimport React, {\n  useCallback, useEffect, useRef, useState\n} from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Box, Text, Switch, useBoolean, useToast\n} from '@chakra-ui/react';\nimport Icon from '../../../components/Icon';\nimport style from './CardDetails.module.css';\nimport ConfirmModal from '../../../components/ConfirmModal/ConfirmModal';\nimport { useAppAsyncDispatch } from '../../../hooks/store';\nimport { cardDelete, getCard, updateCard } from '../../../store/middlewares/card';\nimport { card, cardPayload } from '../../../types/card';\nimport { apiErrorHandler } from '../../../utils/general';\nimport Card from '../../../components/Card';\nimport { updateCardPayload, updateReplaceCardId, updateSelectedCard } from '../../../store/actionCreators/card';\nimport { useModuleConfig } from '../../../hooks/module';\nimport MiniBox from '../../../layout/MiniBox';\nimport { useDrawer } from '../../../hooks/drawer';\n\nconst CardEditInfo = React.lazy(() => import('../Edit/CardInfo/CardInfo'));\nconst AtmInfo = React.lazy(() => import('../AtmInfo/AtmInfo'));\n\nconst CardDetails = () => {\n  const { t } = useTranslation();\n  const dispatch = useAppAsyncDispatch();\n  const toast = useToast();\n  const { open, close, data } = useDrawer<{id: string}>();\n  const id = data?.id || '';\n  const [cardData, updateCardData] = useState<card | null>(null);\n  // const [activeCard, setActiveCard] = useState(false);\n  const [isFreezed, freezeAction] = useBoolean();\n  const [freezeModal, setFreezeModal] = useState(false);\n  const [unfreezeModal, setUnFreezeModal] = useState(false);\n  const [cancelCard, setCancelCard] = useState(false);\n  const [replaceCard, setReplaceCard] = useState(false);\n\n  const numberRef = useRef<HTMLDivElement>(null);\n  const copyBtnRef = useRef<HTMLDivElement>(null);\n\n  const {\n    showFreezeCard,\n    showCardLabel,\n    showSpendingLimit,\n    showTransactions,\n    showAtmInfo,\n    /** @deprecated */\n    // showReplaceCard,\n    showCancelCard,\n    showGetHelp,\n  } = useModuleConfig('cards');\n\n  useEffect(() => {\n    if (id) {\n      dispatch(getCard(id))\n        .then((c) => {\n          updateCardData(c);\n          dispatch(updateSelectedCard(c));\n          if (c.cardStatus === 'inactive') {\n            freezeAction.on();\n          }\n        })\n        .catch(apiErrorHandler);\n    }\n  }, [id]);\n\n  const toggleFreeze = (checked: any) => {\n    if (checked) {\n      setFreezeModal(true);\n    } else {\n      setUnFreezeModal(true);\n    }\n    freezeAction.toggle();\n  };\n\n  const freezeUnfreeze = useCallback(() => {\n    if (cardData?.id) {\n      dispatch(updateCard(cardData.id, {\n        cardStatus: isFreezed ? 'inactive' : 'active'\n      }))\n        .then((c) => {\n          updateCardData(c);\n          dispatch(updateSelectedCard(c));\n        }).catch((e) => {\n          freezeAction.toggle();\n          apiErrorHandler(e);\n        })\n        .finally(() => {\n          setFreezeModal(false);\n          setUnFreezeModal(false);\n        });\n    }\n  }, [cardData?.id, isFreezed]);\n\n  const cancelCardAction = useCallback(() => {\n    if (cardData?.id) {\n      setCancelCard(false);\n      dispatch(cardDelete(cardData.id))\n        .then(() => {\n\n        }).catch(apiErrorHandler);\n    }\n  }, [cardData]);\n\n  const goToTransactions = useCallback(() => {\n    if (cardData) {\n      console.log('cardData');\n    }\n  }, [cardData]);\n\n  type Headers = {\n    'sd-show-token': string;\n  };\n\n  const renderCardNumber = useCallback(({ show, headers }: {\n    show:any, headers: Headers\n  }) => {\n    if (cardData) {\n    /**\n       * card number\n       */\n      const cardNoiframe = show.request({\n        name: 'cardNoIframe2',\n        method: 'GET',\n        headers,\n        path: `/v1/card/${cardData.id}/show`,\n        jsonPathSelector: 'cardNumber',\n        serializers: [show.SERIALIZERS.replace('(\\\\d{4})(\\\\d{4})(\\\\d{4})(\\\\d{4})', '$1 $2 $3 $4')],\n      });\n      cardNoiframe.render(numberRef.current, {\n        color: '#767676', fontSize: '16px', display: 'block', height: '16px', fontWeight: 500, letterSpacing: 0.5, lineHeight: '24px'\n      });\n\n      const copyButton = show.copyFrom(cardNoiframe, { text: '<svg width=\"13\" height=\"13\" viewBox=\"0 0 30 30\" style=\"\"><g transform=\"scale(0.03125 0.03125)\"><path d=\"M373.336 832c-99.969 0-181.336-81.374-181.336-181.338v-437.328h-74.664c-64.726 0-117.336 52.601-117.336 117.328v575.997c0 64.734 52.61 117.342 117.336 117.342h533.331c64.725 0 117.333-52.608 117.333-117.342v-74.658h-394.664z\"></path><path d=\"M938.667 117.336c0-64.812-52.523-117.336-117.333-117.336h-447.997c-64.812 0-117.336 52.524-117.336 117.336v533.328c0 64.813 52.524 117.336 117.336 117.336h447.997c64.811 0 117.333-52.523 117.333-117.336v-533.328z\"></path></g></svg>' }, (status: string) => {\n        if (status === 'success') {\n          toast({\n            title: 'Card Number copied.',\n            status: 'success',\n            duration: 9000,\n            isClosable: true,\n          });\n        }\n      });\n\n      copyButton.render(copyBtnRef.current, {\n        cursor: 'pointer',\n        overflow: 'hidden',\n        left: 'auto',\n        right: '0',\n        width: 'auto',\n        fill: getComputedStyle(document.documentElement).getPropertyValue('--icon-color')\n      });\n    }\n  }, [cardData]);\n\n  if (cardData === null) {\n    return null;\n  }\n\n  return (\n    <Box className=\"page\">\n      <MiniBox\n        showBack\n        onBack={() => {\n          close();\n        }}\n        heading={t('card_details.title')}\n      >\n        <Box width=\"100%\">\n\n          {/* Cards */}\n          <Card\n            key={cardData.id}\n            data={cardData}\n            showSecrets\n            onReady={renderCardNumber}\n          />\n          {/* Card options */}\n\n          <Box className={`${style.cardDetails__action_in_list} ${style.cardDetails__cardNo}`}>\n            <Text variant=\"regular\" pr=\"2px\" textAlign=\"left\">{t('card_details.cardNo')}</Text>\n            <Text className={`${style.cardNumber} cardIframeWrapper cardIframeWrapper__number`} ref={numberRef} variant=\"regular text-light\" />\n            <span className={`${style.iconCopy} cardIframeWrapper cardIframeWrapper__copy`} ref={copyBtnRef} />\n          </Box>\n\n          {showTransactions ? (\n            <Box onClick={goToTransactions} className={`${style.cardDetails__action_in_list} ${style.pointer}`}>\n              <Text variant=\"regular\" mr=\"auto\" textAlign=\"left\">{t('card_details.transactions')}</Text>\n              <Icon icon=\"Arrow-small-right\" size={12} className=\"svg-light-grey-1\" />\n            </Box>\n          ) : null}\n\n          <Text variant=\"large\" pt=\"20px\" pb=\"16px\">{t('card_details.actions')}</Text>\n          <Box rounded=\"4px\" pb=\"20px\">\n            {showFreezeCard ? (\n              <Box className={style.cardDetails__action_in_list}>\n                <Text variant=\"regular\" mr=\"auto\" textAlign=\"left\">{t('card_details.freezeCard')}</Text>\n                <Switch variant=\"primary\" id=\"send-by-email\" isChecked={isFreezed} onChange={(e:any) => toggleFreeze(e.target.checked)} />\n              </Box>\n            ) : null}\n            {showCardLabel ? (\n              <Box className={style.cardDetails__action_in_list}>\n                <Text variant=\"regular\" textAlign=\"left\">\n                  {t('card_details.cardLabel')}\n                  :\n                </Text>\n                <Text variant=\"regular\" pl=\"8px\" mr=\"auto\" className=\"text-light\">{cardData.label}</Text>\n                <Text variant=\"small\" className={`${style.pointer} text-dark`} fontSize=\"14px\" textDecor=\"underline\" onClick={() => open(CardEditInfo)}>{t('card_details.edit')}</Text>\n              </Box>\n            ) : null}\n            {showSpendingLimit ? (\n              <Box className={style.cardDetails__action_in_list}>\n                <Text variant=\"regular\" textAlign=\"left\">{t('card_details.spendingLimit')}</Text>\n                <Text variant=\"regular\" color=\"#2EC193\" pl=\"8px\" mr=\"auto\" textAlign=\"left\">\n                  $\n                  {' '}\n                  {cardData.limitAmount}\n                </Text>\n                <Text variant=\"small\" className={`${style.pointer} text-dark`} fontSize=\"14px\" textDecor=\"underline\" onClick={() => open(CardEditInfo)}>{t('card_details.edit')}</Text>\n              </Box>\n            ) : null}\n\n            {showAtmInfo && cardData.cardStatus === 'active' ? (\n              <Box className={`${style.cardDetails__action_in_list} ${style.pointer}`} onClick={() => open(AtmInfo)}>\n                <Text variant=\"regular\" mr=\"auto\" textAlign=\"left\">{t('card_details.atmInfo')}</Text>\n                <Icon icon=\"Arrow-small-right\" size={12} className=\"svg-light-grey-1\" />\n              </Box>\n            ) : null}\n\n            {/** @deprecated */}\n\n            {/* {showReplaceCard ? (\n              <Box className={`${style.cardDetails__action_in_list} ${style.pointer}`} onClick={() => setReplaceCard(true)}>\n                <Text variant=\"regular\" mr=\"auto\" textAlign=\"left\">{t('card_details.replaceCard')}</Text>\n                <Icon icon=\"Arrow-small-right\" size={12} className=\"svg-light-grey-1\" />\n              </Box>\n            ) : null} */}\n            {showCancelCard ? (\n              <Box className={`${style.cardDetails__action_in_list} ${style.pointer}`} onClick={() => setCancelCard(true)}>\n                <Text variant=\"regular\" mr=\"auto\" textAlign=\"left\">{t('card_details.cancelCard')}</Text>\n                <Icon icon=\"Arrow-small-right\" size={12} className=\"svg-light-grey-1\" />\n              </Box>\n            ) : null}\n            {showGetHelp ? (\n              <Box\n                className={`${style.cardDetails__action_in_list} ${style.pointer}`}\n                onClick={() => {\n\n                }}\n              >\n                <Text variant=\"regular\" mr=\"auto\" textAlign=\"left\">{t('card_details.getHelp')}</Text>\n                <Text variant=\"small\" fontSize=\"14px\" textDecor=\"underline\" className={`${style.pointer} text-dark`}>{t('card_details.chat')}</Text>\n              </Box>\n            ) : null}\n          </Box>\n        </Box>\n\n        {/* Modals */}\n        {/*\n        TODO: Fix cancel button\n      */}\n        <ConfirmModal\n          showModal={freezeModal}\n          submitButton={t('card_details.cardInfo_freeze_button')}\n          cancelButton={t('card_details.cancel')}\n          title={t('card_details.freezeCard')}\n          description={t('card_details.freezeDescription')}\n          onCancel={() => {\n            setFreezeModal(false);\n            freezeAction.toggle();\n          }}\n          onOk={freezeUnfreeze}\n        />\n\n        <ConfirmModal\n          showModal={unfreezeModal}\n          submitButton={t('card_details.cardInfo_unfreeze_button')}\n          cancelButton={t('card_details.cancel')}\n          title={t('card_details.unFreezeCard')}\n          description={t('card_details.unFreezeDescription')}\n          onCancel={() => {\n            setUnFreezeModal(false);\n            setFreezeModal(false);\n            freezeAction.toggle();\n          }}\n          onOk={freezeUnfreeze}\n        />\n\n        <ConfirmModal showModal={cancelCard} submitButton={t('card_details.yes')} cancelButton={t('card_details.no')} title={t('card_details.cancelCard')} description={t('card_details.cardInfo_cancel_alert_messsage')} onCancel={() => setCancelCard(false)} onOk={cancelCardAction} />\n\n        <ConfirmModal\n          showModal={replaceCard}\n          submitButton={t('card_details.yes')}\n          cancelButton={t('card_details.no')}\n          title={t('card_details.replaceCard')}\n          description=\"Replacing your card will discard your exisiting card information and a new card will be issued with a different card number\"\n          onOk={() => {\n            dispatch(updateReplaceCardId(cardData.id));\n            setReplaceCard(false);\n            dispatch(updateCardPayload({ cardType: cardData.cardType, accountId: cardData.accountId, currency: 'USD' } as cardPayload));\n            setTimeout(() => {\n              open(CardEditInfo);\n            }, 0);\n          }}\n          onCancel={() => {\n            setReplaceCard(false);\n          }}\n        />\n      </MiniBox>\n\n    </Box>\n  );\n};\n\nexport default CardDetails;\n"],"names":["_ref","title","description","cancelButton","submitButton","showModal","onCancel","onOk","_jsxs","Modal","isOpen","size","isCentered","onClose","children","_jsx","ModalOverlay","ModalContent","className","concat","style","ModalHeader","ModalCloseButton","onClick","ModalBody","Text","ModalFooter","Button","colorScheme","variant","mr","CardEditInfo","React","AtmInfo","t","useTranslation","dispatch","useAppAsyncDispatch","toast","useToast","_useDrawer","useDrawer","open","close","data","id","_useState","useState","_useState2","_slicedToArray","cardData","updateCardData","_useBoolean","useBoolean","_useBoolean2","isFreezed","freezeAction","_useState3","_useState4","freezeModal","setFreezeModal","_useState5","_useState6","unfreezeModal","setUnFreezeModal","_useState7","_useState8","cancelCard","setCancelCard","_useState9","_useState10","replaceCard","setReplaceCard","numberRef","useRef","copyBtnRef","_useModuleConfig","useModuleConfig","showFreezeCard","showCardLabel","showSpendingLimit","showTransactions","showAtmInfo","showCancelCard","showGetHelp","useEffect","getCard","then","c","updateSelectedCard","cardStatus","on","catch","apiErrorHandler","freezeUnfreeze","useCallback","updateCard","e","toggle","finally","cancelCardAction","cardDelete","goToTransactions","console","log","renderCardNumber","show","headers","cardNoiframe","request","name","method","path","jsonPathSelector","serializers","SERIALIZERS","replace","render","current","color","fontSize","display","height","fontWeight","letterSpacing","lineHeight","copyFrom","text","status","duration","isClosable","cursor","overflow","left","right","width","fill","getComputedStyle","document","documentElement","getPropertyValue","Box","MiniBox","showBack","onBack","heading","Card","showSecrets","onReady","pr","textAlign","ref","Icon","icon","pt","pb","rounded","Switch","isChecked","onChange","target","checked","pl","label","textDecor","limitAmount","ConfirmModal","updateReplaceCardId","updateCardPayload","cardType","accountId","currency","setTimeout"],"sourceRoot":""}